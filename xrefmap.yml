### YamlMime:XRefMap
sorted: true
references:
- uid: B2R2
  name: B2R2
  href: api/B2R2.html
  commentId: N:B2R2
  fullName: B2R2
  nameWithType: B2R2
- uid: B2R2.Addr
  name: Addr (abrv)
  href: api/B2R2.Addr.html
  commentId: T:B2R2.Addr
  fullName: B2R2.Addr
  nameWithType: B2R2.Addr
- uid: B2R2.AddrRange
  name: AddrRange
  href: api/B2R2.AddrRange.html
  commentId: T:B2R2.AddrRange
  fullName: B2R2.AddrRange
  nameWithType: B2R2.AddrRange
- uid: B2R2.AddrRange.#ctor(B2R2.Addr * B2R2.Addr)
  name: 'new: Addr * Addr -> AddrRange'
  href: api/B2R2.AddrRange.html#B2R2_AddrRange__ctor_B2R2_Addr___B2R2_Addr_
  commentId: M:B2R2.AddrRange.#ctor(System.UInt64,System.UInt64)
  fullName: 'new: B2R2.Addr * B2R2.Addr -> B2R2.AddrRange'
  nameWithType: 'new: Addr * Addr -> AddrRange'
- uid: B2R2.AddrRange.#ctor*
  name: ( .ctor )
  href: api/B2R2.AddrRange.html#B2R2_AddrRange__ctor_
  commentId: Overload:B2R2.AddrRange.#ctor*
  isSpec: "True"
  fullName: B2R2.AddrRange
  nameWithType: AddrRange.( .ctor )
- uid: B2R2.AddrRange.GetMax(B2R2.AddrRange)
  name: 'static member GetMax: AddrRange -> Addr'
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_GetMax_B2R2_AddrRange_
  commentId: M:B2R2.AddrRange.GetMax(B2R2.AddrRange)
  fullName: 'static member B2R2.AddrRange.GetMax: B2R2.AddrRange -> B2R2.Addr'
  nameWithType: 'static member AddrRange.GetMax: AddrRange -> Addr'
- uid: B2R2.AddrRange.GetMax*
  name: GetMax
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_GetMax_
  commentId: Overload:B2R2.AddrRange.GetMax*
  isSpec: "True"
  fullName: B2R2.AddrRange.GetMax
  nameWithType: AddrRange.GetMax
- uid: B2R2.AddrRange.GetMin(B2R2.AddrRange)
  name: 'static member GetMin: AddrRange -> Addr'
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_GetMin_B2R2_AddrRange_
  commentId: M:B2R2.AddrRange.GetMin(B2R2.AddrRange)
  fullName: 'static member B2R2.AddrRange.GetMin: B2R2.AddrRange -> B2R2.Addr'
  nameWithType: 'static member AddrRange.GetMin: AddrRange -> Addr'
- uid: B2R2.AddrRange.GetMin*
  name: GetMin
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_GetMin_
  commentId: Overload:B2R2.AddrRange.GetMin*
  isSpec: "True"
  fullName: B2R2.AddrRange.GetMin
  nameWithType: AddrRange.GetMin
- uid: B2R2.AddrRange.Max
  name: 'val Max: Addr'
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_Max
  commentId: P:B2R2.AddrRange.Max
  fullName: 'val B2R2.AddrRange.Max: B2R2.Addr'
  nameWithType: 'val AddrRange.Max: Addr'
- uid: B2R2.AddrRange.Min
  name: 'val Min: Addr'
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_Min
  commentId: P:B2R2.AddrRange.Min
  fullName: 'val B2R2.AddrRange.Min: B2R2.Addr'
  nameWithType: 'val AddrRange.Min: Addr'
- uid: B2R2.AddrRange.ToTuple(unit)
  name: 'member ToTuple: unit -> Addr * Addr'
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_ToTuple_unit_
  commentId: M:B2R2.AddrRange.ToTuple
  fullName: 'member B2R2.AddrRange.ToTuple: unit -> B2R2.Addr * B2R2.Addr'
  nameWithType: 'member AddrRange.ToTuple: unit -> Addr * Addr'
- uid: B2R2.AddrRange.ToTuple*
  name: ToTuple
  href: api/B2R2.AddrRange.html#B2R2_AddrRange_ToTuple_
  commentId: Overload:B2R2.AddrRange.ToTuple*
  isSpec: "True"
  fullName: B2R2.AddrRange.ToTuple
  nameWithType: AddrRange.ToTuple
- uid: B2R2.Arch
  name: Arch (abrv)
  href: api/B2R2.Arch.html
  commentId: T:B2R2.Arch
  fullName: B2R2.Arch
  nameWithType: B2R2.Arch
- uid: B2R2.Architecture
  name: Architecture
  href: api/B2R2.Architecture.html
  commentId: T:B2R2.Architecture
  fullName: B2R2.Architecture
  nameWithType: B2R2.Architecture
- uid: B2R2.Architecture.AARCH32
  name: 'val AARCH32: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_AARCH32
  commentId: P:B2R2.Architecture.AARCH32
  fullName: 'val B2R2.Architecture.AARCH32: B2R2.Architecture'
  nameWithType: 'val Architecture.AARCH32: Architecture'
- uid: B2R2.Architecture.AARCH64
  name: 'val AARCH64: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_AARCH64
  commentId: P:B2R2.Architecture.AARCH64
  fullName: 'val B2R2.Architecture.AARCH64: B2R2.Architecture'
  nameWithType: 'val Architecture.AARCH64: Architecture'
- uid: B2R2.Architecture.ARMv7
  name: 'val ARMv7: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_ARMv7
  commentId: P:B2R2.Architecture.ARMv7
  fullName: 'val B2R2.Architecture.ARMv7: B2R2.Architecture'
  nameWithType: 'val Architecture.ARMv7: Architecture'
- uid: B2R2.Architecture.IntelX64
  name: 'val IntelX64: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_IntelX64
  commentId: P:B2R2.Architecture.IntelX64
  fullName: 'val B2R2.Architecture.IntelX64: B2R2.Architecture'
  nameWithType: 'val Architecture.IntelX64: Architecture'
- uid: B2R2.Architecture.IntelX86
  name: 'val IntelX86: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_IntelX86
  commentId: P:B2R2.Architecture.IntelX86
  fullName: 'val B2R2.Architecture.IntelX86: B2R2.Architecture'
  nameWithType: 'val Architecture.IntelX86: Architecture'
- uid: B2R2.Architecture.MIPS1
  name: 'val MIPS1: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS1
  commentId: P:B2R2.Architecture.MIPS1
  fullName: 'val B2R2.Architecture.MIPS1: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS1: Architecture'
- uid: B2R2.Architecture.MIPS2
  name: 'val MIPS2: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS2
  commentId: P:B2R2.Architecture.MIPS2
  fullName: 'val B2R2.Architecture.MIPS2: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS2: Architecture'
- uid: B2R2.Architecture.MIPS3
  name: 'val MIPS3: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS3
  commentId: P:B2R2.Architecture.MIPS3
  fullName: 'val B2R2.Architecture.MIPS3: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS3: Architecture'
- uid: B2R2.Architecture.MIPS32
  name: 'val MIPS32: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS32
  commentId: P:B2R2.Architecture.MIPS32
  fullName: 'val B2R2.Architecture.MIPS32: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS32: Architecture'
- uid: B2R2.Architecture.MIPS32R2
  name: 'val MIPS32R2: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS32R2
  commentId: P:B2R2.Architecture.MIPS32R2
  fullName: 'val B2R2.Architecture.MIPS32R2: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS32R2: Architecture'
- uid: B2R2.Architecture.MIPS32R6
  name: 'val MIPS32R6: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS32R6
  commentId: P:B2R2.Architecture.MIPS32R6
  fullName: 'val B2R2.Architecture.MIPS32R6: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS32R6: Architecture'
- uid: B2R2.Architecture.MIPS4
  name: 'val MIPS4: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS4
  commentId: P:B2R2.Architecture.MIPS4
  fullName: 'val B2R2.Architecture.MIPS4: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS4: Architecture'
- uid: B2R2.Architecture.MIPS5
  name: 'val MIPS5: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS5
  commentId: P:B2R2.Architecture.MIPS5
  fullName: 'val B2R2.Architecture.MIPS5: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS5: Architecture'
- uid: B2R2.Architecture.MIPS64
  name: 'val MIPS64: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS64
  commentId: P:B2R2.Architecture.MIPS64
  fullName: 'val B2R2.Architecture.MIPS64: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS64: Architecture'
- uid: B2R2.Architecture.MIPS64R2
  name: 'val MIPS64R2: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS64R2
  commentId: P:B2R2.Architecture.MIPS64R2
  fullName: 'val B2R2.Architecture.MIPS64R2: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS64R2: Architecture'
- uid: B2R2.Architecture.MIPS64R6
  name: 'val MIPS64R6: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_MIPS64R6
  commentId: P:B2R2.Architecture.MIPS64R6
  fullName: 'val B2R2.Architecture.MIPS64R6: B2R2.Architecture'
  nameWithType: 'val Architecture.MIPS64R6: Architecture'
- uid: B2R2.Architecture.UnknownISA
  name: 'val UnknownISA: Architecture'
  href: api/B2R2.Architecture.html#B2R2_Architecture_UnknownISA
  commentId: P:B2R2.Architecture.UnknownISA
  fullName: 'val B2R2.Architecture.UnknownISA: B2R2.Architecture'
  nameWithType: 'val Architecture.UnknownISA: Architecture'
- uid: B2R2.ArchOperationMode
  name: ArchOperationMode
  href: api/B2R2.ArchOperationMode.html
  commentId: T:B2R2.ArchOperationMode
  fullName: B2R2.ArchOperationMode
  nameWithType: B2R2.ArchOperationMode
- uid: B2R2.ArchOperationMode.ARMMode
  name: 'val ARMMode: ArchOperationMode'
  href: api/B2R2.ArchOperationMode.html#B2R2_ArchOperationMode_ARMMode
  commentId: P:B2R2.ArchOperationMode.ARMMode
  fullName: 'val B2R2.ArchOperationMode.ARMMode: B2R2.ArchOperationMode'
  nameWithType: 'val ArchOperationMode.ARMMode: ArchOperationMode'
- uid: B2R2.ArchOperationMode.NoMode
  name: 'val NoMode: ArchOperationMode'
  href: api/B2R2.ArchOperationMode.html#B2R2_ArchOperationMode_NoMode
  commentId: P:B2R2.ArchOperationMode.NoMode
  fullName: 'val B2R2.ArchOperationMode.NoMode: B2R2.ArchOperationMode'
  nameWithType: 'val ArchOperationMode.NoMode: ArchOperationMode'
- uid: B2R2.ArchOperationMode.ThumbMode
  name: 'val ThumbMode: ArchOperationMode'
  href: api/B2R2.ArchOperationMode.html#B2R2_ArchOperationMode_ThumbMode
  commentId: P:B2R2.ArchOperationMode.ThumbMode
  fullName: 'val B2R2.ArchOperationMode.ThumbMode: B2R2.ArchOperationMode'
  nameWithType: 'val ArchOperationMode.ThumbMode: ArchOperationMode'
- uid: B2R2.ArchOperationModeModule
  name: ArchOperationMode (mod)
  href: api/B2R2.ArchOperationModeModule.html
  commentId: T:B2R2.ArchOperationModeModule
  fullName: B2R2.ArchOperationModeModule
  nameWithType: B2R2.ArchOperationModeModule
- uid: B2R2.ArchOperationModeModule.ofString(string)
  name: 'val ofString: string -> ArchOperationMode'
  href: api/B2R2.ArchOperationModeModule.html#B2R2_ArchOperationModeModule_ofString_string_
  commentId: M:B2R2.ofString(System.String)
  fullName: 'val B2R2.ArchOperationModeModule.ofString: string -> B2R2.ArchOperationMode'
  nameWithType: 'val ArchOperationMode.ofString: string -> ArchOperationMode'
- uid: B2R2.ArchOperationModeModule.ofString*
  name: ofString
  href: api/B2R2.ArchOperationModeModule.html#B2R2_ArchOperationModeModule_ofString_
  commentId: Overload:B2R2.ArchOperationModeModule.ofString*
  isSpec: "True"
  fullName: B2R2.ArchOperationModeModule.ofString
  nameWithType: ArchOperationMode.ofString
- uid: B2R2.ARMap
  name: ARMap (mod)
  href: api/B2R2.ARMap.html
  commentId: T:B2R2.ARMap
  fullName: B2R2.ARMap
  nameWithType: B2R2.ARMap
- uid: B2R2.ARMap.add(B2R2.AddrRange -> 'V -> B2R2.ARMap<'V>)
  name: "val add: AddrRange -> 'V -> ARMap<'V> -> ARMap<'V>"
  href: api/B2R2.ARMap.html#B2R2_ARMap_add_B2R2_AddrRange_____V____B2R2_ARMap__V__
  commentId: M:B2R2.Add``1(B2R2.AddrRange,``0,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.add: B2R2.AddrRange -> 'V -> B2R2.ARMap<'V> -> B2R2.ARMap<'V>"
  nameWithType: "val ARMap.add: AddrRange -> 'V -> ARMap<'V> -> ARMap<'V>"
- uid: B2R2.ARMap.add*
  name: add
  href: api/B2R2.ARMap.html#B2R2_ARMap_add_
  commentId: Overload:B2R2.ARMap.add*
  isSpec: "True"
  fullName: B2R2.ARMap.add
  nameWithType: ARMap.add
- uid: B2R2.ARMap.addRange(B2R2.Addr -> B2R2.Addr -> 'V -> B2R2.ARMap<'V>)
  name: "val addRange: Addr -> Addr -> 'V -> ARMap<'V> -> ARMap<'V>"
  href: api/B2R2.ARMap.html#B2R2_ARMap_addRange_B2R2_Addr____B2R2_Addr_____V____B2R2_ARMap__V__
  commentId: M:B2R2.AddRange``1(System.UInt64,System.UInt64,``0,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.addRange: B2R2.Addr -> B2R2.Addr -> 'V -> B2R2.ARMap<'V> -> B2R2.ARMap<'V>"
  nameWithType: "val ARMap.addRange: Addr -> Addr -> 'V -> ARMap<'V> -> ARMap<'V>"
- uid: B2R2.ARMap.addRange*
  name: addRange
  href: api/B2R2.ARMap.html#B2R2_ARMap_addRange_
  commentId: Overload:B2R2.ARMap.addRange*
  isSpec: "True"
  fullName: B2R2.ARMap.addRange
  nameWithType: ARMap.addRange
- uid: B2R2.ARMap.containsAddr(B2R2.Addr -> B2R2.ARMap<'V>)
  name: "val containsAddr: Addr -> ARMap<'V> -> bool"
  href: api/B2R2.ARMap.html#B2R2_ARMap_containsAddr_B2R2_Addr____B2R2_ARMap__V__
  commentId: M:B2R2.ContainsAddr``1(System.UInt64,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.containsAddr: B2R2.Addr -> B2R2.ARMap<'V> -> bool"
  nameWithType: "val ARMap.containsAddr: Addr -> ARMap<'V> -> bool"
- uid: B2R2.ARMap.containsAddr*
  name: containsAddr
  href: api/B2R2.ARMap.html#B2R2_ARMap_containsAddr_
  commentId: Overload:B2R2.ARMap.containsAddr*
  isSpec: "True"
  fullName: B2R2.ARMap.containsAddr
  nameWithType: ARMap.containsAddr
- uid: B2R2.ARMap.containsRange(B2R2.AddrRange -> B2R2.ARMap<'V>)
  name: "val containsRange: AddrRange -> ARMap<'V> -> bool"
  href: api/B2R2.ARMap.html#B2R2_ARMap_containsRange_B2R2_AddrRange____B2R2_ARMap__V__
  commentId: M:B2R2.ContainsRange``1(B2R2.AddrRange,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.containsRange: B2R2.AddrRange -> B2R2.ARMap<'V> -> bool"
  nameWithType: "val ARMap.containsRange: AddrRange -> ARMap<'V> -> bool"
- uid: B2R2.ARMap.containsRange*
  name: containsRange
  href: api/B2R2.ARMap.html#B2R2_ARMap_containsRange_
  commentId: Overload:B2R2.ARMap.containsRange*
  isSpec: "True"
  fullName: B2R2.ARMap.containsRange
  nameWithType: ARMap.containsRange
- uid: B2R2.ARMap.count(B2R2.ARMap<'V>)
  name: "val count: ARMap<'V> -> int"
  href: api/B2R2.ARMap.html#B2R2_ARMap_count_B2R2_ARMap__V__
  commentId: M:B2R2.Count``1(B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.count: B2R2.ARMap<'V> -> int"
  nameWithType: "val ARMap.count: ARMap<'V> -> int"
- uid: B2R2.ARMap.count*
  name: count
  href: api/B2R2.ARMap.html#B2R2_ARMap_count_
  commentId: Overload:B2R2.ARMap.count*
  isSpec: "True"
  fullName: B2R2.ARMap.count
  nameWithType: ARMap.count
- uid: B2R2.ARMap.empty()
  name: val empty
  href: api/B2R2.ARMap.html#B2R2_ARMap_empty__
  commentId: M:B2R2.Empty``1
  fullName: "val B2R2.ARMap.empty: B2R2.ARMap<'V>"
  nameWithType: "val ARMap.empty: ARMap<'V>"
- uid: B2R2.ARMap.find(B2R2.AddrRange -> B2R2.ARMap<'V>)
  name: "val find: AddrRange -> ARMap<'V> -> 'V"
  href: api/B2R2.ARMap.html#B2R2_ARMap_find_B2R2_AddrRange____B2R2_ARMap__V__
  commentId: M:B2R2.Find``1(B2R2.AddrRange,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.find: B2R2.AddrRange -> B2R2.ARMap<'V> -> 'V"
  nameWithType: "val ARMap.find: AddrRange -> ARMap<'V> -> 'V"
- uid: B2R2.ARMap.find*
  name: find
  href: api/B2R2.ARMap.html#B2R2_ARMap_find_
  commentId: Overload:B2R2.ARMap.find*
  isSpec: "True"
  fullName: B2R2.ARMap.find
  nameWithType: ARMap.find
- uid: B2R2.ARMap.findByAddr(B2R2.Addr -> B2R2.ARMap<'V>)
  name: "val findByAddr: Addr -> ARMap<'V> -> 'V"
  href: api/B2R2.ARMap.html#B2R2_ARMap_findByAddr_B2R2_Addr____B2R2_ARMap__V__
  commentId: M:B2R2.FindByAddr``1(System.UInt64,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.findByAddr: B2R2.Addr -> B2R2.ARMap<'V> -> 'V"
  nameWithType: "val ARMap.findByAddr: Addr -> ARMap<'V> -> 'V"
- uid: B2R2.ARMap.findByAddr*
  name: findByAddr
  href: api/B2R2.ARMap.html#B2R2_ARMap_findByAddr_
  commentId: Overload:B2R2.ARMap.findByAddr*
  isSpec: "True"
  fullName: B2R2.ARMap.findByAddr
  nameWithType: ARMap.findByAddr
- uid: B2R2.ARMap.fold('b -> B2R2.AddrRange -> 'V -> 'b -> 'b -> B2R2.ARMap<'V>)
  name: "val fold: 'b -> AddrRange -> 'V -> 'b -> 'b -> ARMap<'V> -> 'b"
  href: api/B2R2.ARMap.html#B2R2_ARMap_fold__b____B2R2_AddrRange_____V_____b_____b____B2R2_ARMap__V__
  commentId: M:B2R2.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{B2R2.AddrRange,Microsoft.FSharp.Core.FSharpFunc{``1,``0}}},``0,B2R2.ARMap{``1})
  fullName: "val B2R2.ARMap.fold: 'b -> B2R2.AddrRange -> 'V -> 'b -> 'b -> B2R2.ARMap<'V> -> 'b"
  nameWithType: "val ARMap.fold: 'b -> AddrRange -> 'V -> 'b -> 'b -> ARMap<'V> -> 'b"
- uid: B2R2.ARMap.fold*
  name: fold
  href: api/B2R2.ARMap.html#B2R2_ARMap_fold_
  commentId: Overload:B2R2.ARMap.fold*
  isSpec: "True"
  fullName: B2R2.ARMap.fold
  nameWithType: ARMap.fold
- uid: B2R2.ARMap.getOverlaps(B2R2.AddrRange -> B2R2.ARMap<'V>)
  name: "val getOverlaps: AddrRange -> ARMap<'V> -> AddrRange * 'V list"
  href: api/B2R2.ARMap.html#B2R2_ARMap_getOverlaps_B2R2_AddrRange____B2R2_ARMap__V__
  commentId: M:B2R2.GetOverlaps``1(B2R2.AddrRange,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.getOverlaps: B2R2.AddrRange -> B2R2.ARMap<'V> -> B2R2.AddrRange * 'V list"
  nameWithType: "val ARMap.getOverlaps: AddrRange -> ARMap<'V> -> AddrRange * 'V list"
- uid: B2R2.ARMap.getOverlaps*
  name: getOverlaps
  href: api/B2R2.ARMap.html#B2R2_ARMap_getOverlaps_
  commentId: Overload:B2R2.ARMap.getOverlaps*
  isSpec: "True"
  fullName: B2R2.ARMap.getOverlaps
  nameWithType: ARMap.getOverlaps
- uid: B2R2.ARMap.isEmpty(B2R2.ARMap<'V>)
  name: "val isEmpty: ARMap<'V> -> bool"
  href: api/B2R2.ARMap.html#B2R2_ARMap_isEmpty_B2R2_ARMap__V__
  commentId: M:B2R2.IsEmpty``1(B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.isEmpty: B2R2.ARMap<'V> -> bool"
  nameWithType: "val ARMap.isEmpty: ARMap<'V> -> bool"
- uid: B2R2.ARMap.isEmpty*
  name: isEmpty
  href: api/B2R2.ARMap.html#B2R2_ARMap_isEmpty_
  commentId: Overload:B2R2.ARMap.isEmpty*
  isSpec: "True"
  fullName: B2R2.ARMap.isEmpty
  nameWithType: ARMap.isEmpty
- uid: B2R2.ARMap.iter(B2R2.AddrRange -> 'V -> unit -> B2R2.ARMap<'V>)
  name: "val iter: AddrRange -> 'V -> unit -> ARMap<'V> -> unit"
  href: api/B2R2.ARMap.html#B2R2_ARMap_iter_B2R2_AddrRange_____V____unit____B2R2_ARMap__V__
  commentId: M:B2R2.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{B2R2.AddrRange,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.iter: B2R2.AddrRange -> 'V -> unit -> B2R2.ARMap<'V> -> unit"
  nameWithType: "val ARMap.iter: AddrRange -> 'V -> unit -> ARMap<'V> -> unit"
- uid: B2R2.ARMap.iter*
  name: iter
  href: api/B2R2.ARMap.html#B2R2_ARMap_iter_
  commentId: Overload:B2R2.ARMap.iter*
  isSpec: "True"
  fullName: B2R2.ARMap.iter
  nameWithType: ARMap.iter
- uid: B2R2.ARMap.remove(B2R2.AddrRange -> B2R2.ARMap<'V>)
  name: "val remove: AddrRange -> ARMap<'V> -> ARMap<'V>"
  href: api/B2R2.ARMap.html#B2R2_ARMap_remove_B2R2_AddrRange____B2R2_ARMap__V__
  commentId: M:B2R2.Remove``1(B2R2.AddrRange,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.remove: B2R2.AddrRange -> B2R2.ARMap<'V> -> B2R2.ARMap<'V>"
  nameWithType: "val ARMap.remove: AddrRange -> ARMap<'V> -> ARMap<'V>"
- uid: B2R2.ARMap.remove*
  name: remove
  href: api/B2R2.ARMap.html#B2R2_ARMap_remove_
  commentId: Overload:B2R2.ARMap.remove*
  isSpec: "True"
  fullName: B2R2.ARMap.remove
  nameWithType: ARMap.remove
- uid: B2R2.ARMap.removeAddr(B2R2.Addr -> B2R2.ARMap<'V>)
  name: "val removeAddr: Addr -> ARMap<'V> -> ARMap<'V>"
  href: api/B2R2.ARMap.html#B2R2_ARMap_removeAddr_B2R2_Addr____B2R2_ARMap__V__
  commentId: M:B2R2.RemoveAddr``1(System.UInt64,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.removeAddr: B2R2.Addr -> B2R2.ARMap<'V> -> B2R2.ARMap<'V>"
  nameWithType: "val ARMap.removeAddr: Addr -> ARMap<'V> -> ARMap<'V>"
- uid: B2R2.ARMap.removeAddr*
  name: removeAddr
  href: api/B2R2.ARMap.html#B2R2_ARMap_removeAddr_
  commentId: Overload:B2R2.ARMap.removeAddr*
  isSpec: "True"
  fullName: B2R2.ARMap.removeAddr
  nameWithType: ARMap.removeAddr
- uid: B2R2.ARMap.replace(B2R2.AddrRange -> 'V -> B2R2.ARMap<'V>)
  name: "val replace: AddrRange -> 'V -> ARMap<'V> -> ARMap<'V>"
  href: api/B2R2.ARMap.html#B2R2_ARMap_replace_B2R2_AddrRange_____V____B2R2_ARMap__V__
  commentId: M:B2R2.Replace``1(B2R2.AddrRange,``0,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.replace: B2R2.AddrRange -> 'V -> B2R2.ARMap<'V> -> B2R2.ARMap<'V>"
  nameWithType: "val ARMap.replace: AddrRange -> 'V -> ARMap<'V> -> ARMap<'V>"
- uid: B2R2.ARMap.replace*
  name: replace
  href: api/B2R2.ARMap.html#B2R2_ARMap_replace_
  commentId: Overload:B2R2.ARMap.replace*
  isSpec: "True"
  fullName: B2R2.ARMap.replace
  nameWithType: ARMap.replace
- uid: B2R2.ARMap.tryFind(B2R2.AddrRange -> B2R2.ARMap<'V>)
  name: "val tryFind: AddrRange -> ARMap<'V> -> 'V option"
  href: api/B2R2.ARMap.html#B2R2_ARMap_tryFind_B2R2_AddrRange____B2R2_ARMap__V__
  commentId: M:B2R2.TryFind``1(B2R2.AddrRange,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.tryFind: B2R2.AddrRange -> B2R2.ARMap<'V> -> 'V option"
  nameWithType: "val ARMap.tryFind: AddrRange -> ARMap<'V> -> 'V option"
- uid: B2R2.ARMap.tryFind*
  name: tryFind
  href: api/B2R2.ARMap.html#B2R2_ARMap_tryFind_
  commentId: Overload:B2R2.ARMap.tryFind*
  isSpec: "True"
  fullName: B2R2.ARMap.tryFind
  nameWithType: ARMap.tryFind
- uid: B2R2.ARMap.tryFindByAddr(B2R2.Addr -> B2R2.ARMap<'V>)
  name: "val tryFindByAddr: Addr -> ARMap<'V> -> 'V option"
  href: api/B2R2.ARMap.html#B2R2_ARMap_tryFindByAddr_B2R2_Addr____B2R2_ARMap__V__
  commentId: M:B2R2.TryFindByAddr``1(System.UInt64,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.tryFindByAddr: B2R2.Addr -> B2R2.ARMap<'V> -> 'V option"
  nameWithType: "val ARMap.tryFindByAddr: Addr -> ARMap<'V> -> 'V option"
- uid: B2R2.ARMap.tryFindByAddr*
  name: tryFindByAddr
  href: api/B2R2.ARMap.html#B2R2_ARMap_tryFindByAddr_
  commentId: Overload:B2R2.ARMap.tryFindByAddr*
  isSpec: "True"
  fullName: B2R2.ARMap.tryFindByAddr
  nameWithType: ARMap.tryFindByAddr
- uid: B2R2.ARMap.tryFindKey(B2R2.Addr -> B2R2.ARMap<'V>)
  name: "val tryFindKey: Addr -> ARMap<'V> -> AddrRange option"
  href: api/B2R2.ARMap.html#B2R2_ARMap_tryFindKey_B2R2_Addr____B2R2_ARMap__V__
  commentId: M:B2R2.TryFindKey``1(System.UInt64,B2R2.ARMap{``0})
  fullName: "val B2R2.ARMap.tryFindKey: B2R2.Addr -> B2R2.ARMap<'V> -> B2R2.AddrRange option"
  nameWithType: "val ARMap.tryFindKey: Addr -> ARMap<'V> -> AddrRange option"
- uid: B2R2.ARMap.tryFindKey*
  name: tryFindKey
  href: api/B2R2.ARMap.html#B2R2_ARMap_tryFindKey_
  commentId: Overload:B2R2.ARMap.tryFindKey*
  isSpec: "True"
  fullName: B2R2.ARMap.tryFindKey
  nameWithType: ARMap.tryFindKey
- uid: B2R2.ARMap`1
  name: ARMap<'V>
  href: api/B2R2.ARMap-1.html
  commentId: T:B2R2.ARMap`1
  fullName: B2R2.ARMap`1
  nameWithType: B2R2.ARMap`1
- uid: B2R2.Array
  name: Array (mod)
  href: api/B2R2.Array.html
  commentId: T:B2R2.Array
  fullName: B2R2.Array
  nameWithType: B2R2.Array
- uid: B2R2.Array.foldi('?66392 -> int -> '?66393 -> '?66392 -> '?66392 -> '?66393 [])
  name: "val foldi: '?66392 -> int -> '?66393 -> '?66392 -> '?66392 -> '?66393 [] -> '?66392 * int"
  href: api/B2R2.Array.html#B2R2_Array_foldi___66392____int______66393______66392______66392______66393____
  commentId: M:B2R2.foldi``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``1,``0}}},``0,``1[])
  fullName: "val B2R2.Array.foldi: '?66392 -> int -> '?66393 -> '?66392 -> '?66392 -> '?66393 [] -> '?66392 * int"
  nameWithType: "val Array.foldi: '?66392 -> int -> '?66393 -> '?66392 -> '?66392 -> '?66393 [] -> '?66392 * int"
- uid: B2R2.Array.foldi*
  name: foldi
  href: api/B2R2.Array.html#B2R2_Array_foldi_
  commentId: Overload:B2R2.Array.foldi*
  isSpec: "True"
  fullName: B2R2.Array.foldi
  nameWithType: Array.foldi
- uid: B2R2.Attribution
  name: Attribution (mod)
  href: api/B2R2.Attribution.html
  commentId: T:B2R2.Attribution
  fullName: B2R2.Attribution
  nameWithType: B2R2.Attribution
- uid: B2R2.Attribution.copyright()
  name: val copyright
  href: api/B2R2.Attribution.html#B2R2_Attribution_copyright__
  commentId: P:B2R2.copyright
  fullName: 'val B2R2.Attribution.copyright: string'
  nameWithType: 'val Attribution.copyright: string'
- uid: B2R2.BigInteger
  name: BigInteger (mod)
  href: api/B2R2.BigInteger.html
  commentId: T:B2R2.BigInteger
  fullName: B2R2.BigInteger
  nameWithType: B2R2.BigInteger
- uid: B2R2.BigInteger.getMask(int)
  name: 'val getMask: int -> BigInteger'
  href: api/B2R2.BigInteger.html#B2R2_BigInteger_getMask_int_
  commentId: M:B2R2.getMask(System.Int32)
  fullName: 'val B2R2.BigInteger.getMask: int -> System.Numerics.BigInteger'
  nameWithType: 'val BigInteger.getMask: int -> BigInteger'
- uid: B2R2.BigInteger.getMask*
  name: getMask
  href: api/B2R2.BigInteger.html#B2R2_BigInteger_getMask_
  commentId: Overload:B2R2.BigInteger.getMask*
  isSpec: "True"
  fullName: B2R2.BigInteger.getMask
  nameWithType: BigInteger.getMask
- uid: B2R2.BigInteger.mask128()
  name: val mask128
  href: api/B2R2.BigInteger.html#B2R2_BigInteger_mask128__
  commentId: P:B2R2.mask128
  fullName: 'val B2R2.BigInteger.mask128: System.Numerics.BigInteger'
  nameWithType: 'val BigInteger.mask128: BigInteger'
- uid: B2R2.BigInteger.mask256()
  name: val mask256
  href: api/B2R2.BigInteger.html#B2R2_BigInteger_mask256__
  commentId: P:B2R2.mask256
  fullName: 'val B2R2.BigInteger.mask256: System.Numerics.BigInteger'
  nameWithType: 'val BigInteger.mask256: BigInteger'
- uid: B2R2.BigInteger.mask512()
  name: val mask512
  href: api/B2R2.BigInteger.html#B2R2_BigInteger_mask512__
  commentId: P:B2R2.mask512
  fullName: 'val B2R2.BigInteger.mask512: System.Numerics.BigInteger'
  nameWithType: 'val BigInteger.mask512: BigInteger'
- uid: B2R2.BinFile
  name: B2R2.BinFile
  href: api/B2R2.BinFile.html
  commentId: N:B2R2.BinFile
  fullName: B2R2.BinFile
  nameWithType: B2R2.BinFile
- uid: B2R2.BinFile.ELFFileInfo
  name: ELFFileInfo
  href: api/B2R2.BinFile.ELFFileInfo.html
  commentId: T:B2R2.BinFile.ELFFileInfo
  fullName: B2R2.BinFile.ELFFileInfo
  nameWithType: B2R2.BinFile.ELFFileInfo
- uid: B2R2.BinFile.ELFFileInfo.#ctor(byte [] * string)
  name: 'new: byte [] * string -> ELFFileInfo'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo__ctor_byte______string_
  commentId: M:B2R2.BinFile.ELFFileInfo.#ctor(System.Byte[],System.String)
  fullName: 'new: byte [] * string -> B2R2.BinFile.ELFFileInfo'
  nameWithType: 'new: byte [] * string -> ELFFileInfo'
- uid: B2R2.BinFile.ELFFileInfo.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo__ctor_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.#ctor*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo
  nameWithType: ELFFileInfo.( .ctor )
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.EntryPoint(unit)
  name: 'override property EntryPoint: Addr'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_EntryPoint_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.EntryPoint
  fullName: 'override property B2R2.BinFile.ELFFileInfo.EntryPoint: B2R2.Addr'
  nameWithType: 'override property ELFFileInfo.EntryPoint: Addr'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  name: EntryPoint
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_EntryPoint_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.EntryPoint
  nameWithType: ELFFileInfo.EntryPoint
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FileFormat(unit)
  name: 'override property FileFormat: FileFormat'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FileFormat_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.FileFormat
  fullName: 'override property B2R2.BinFile.ELFFileInfo.FileFormat: B2R2.FileFormat'
  nameWithType: 'override property ELFFileInfo.FileFormat: FileFormat'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  name: FileFormat
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FileFormat_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.FileFormat
  nameWithType: ELFFileInfo.FileFormat
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FilePath(unit)
  name: 'override property FilePath: string'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FilePath_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.FilePath
  fullName: 'override property B2R2.BinFile.ELFFileInfo.FilePath: string'
  nameWithType: 'override property ELFFileInfo.FilePath: string'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FilePath*
  name: FilePath
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FilePath_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FilePath*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.FilePath
  nameWithType: ELFFileInfo.FilePath
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FileType(unit)
  name: 'override property FileType: FileType'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FileType_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.FileType
  fullName: 'override property B2R2.BinFile.ELFFileInfo.FileType: B2R2.BinFile.FileType'
  nameWithType: 'override property ELFFileInfo.FileType: FileType'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FileType*
  name: FileType
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FileType_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FileType*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.FileType
  nameWithType: ELFFileInfo.FileType
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress(B2R2.Addr)
  name: 'override member FindSymbolChunkStartAddress: Addr -> Addr'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.ELFFileInfo.FindSymbolChunkStartAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.ELFFileInfo.FindSymbolChunkStartAddress: B2R2.Addr -> B2R2.Addr'
  nameWithType: 'override member ELFFileInfo.FindSymbolChunkStartAddress: Addr -> Addr'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  name: FindSymbolChunkStartAddress
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.FindSymbolChunkStartAddress
  nameWithType: ELFFileInfo.FindSymbolChunkStartAddress
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols(unit)
  name: 'override member GetDynamicSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_unit_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetDynamicSymbols
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetDynamicSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member ELFFileInfo.GetDynamicSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  name: GetDynamicSymbols
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.GetDynamicSymbols
  nameWithType: ELFFileInfo.GetDynamicSymbols
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries(unit)
  name: 'override member GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_unit_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetLinkageTableEntries
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetLinkageTableEntries: unit -> seq<B2R2.BinFile.LinkageTableEntry>'
  nameWithType: 'override member ELFFileInfo.GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  name: GetLinkageTableEntries
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.GetLinkageTableEntries
  nameWithType: ELFFileInfo.GetLinkageTableEntries
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSections(B2R2.Addr)
  name: 'override member GetSections: Addr -> seq<Section>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSections_B2R2_Addr_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetSections(System.UInt64)
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetSections: B2R2.Addr -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member ELFFileInfo.GetSections: Addr -> seq<Section>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSections(unit)
  name: 'override member GetSections: unit -> seq<Section>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSections_unit_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetSections
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetSections: unit -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member ELFFileInfo.GetSections: unit -> seq<Section>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSections*
  name: GetSections
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSections_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSections*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.GetSections
  nameWithType: ELFFileInfo.GetSections
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName(string)
  name: 'override member GetSectionsByName: string -> seq<Section>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_string_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetSectionsByName(System.String)
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetSectionsByName: string -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member ELFFileInfo.GetSectionsByName: string -> seq<Section>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  name: GetSectionsByName
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.GetSectionsByName
  nameWithType: ELFFileInfo.GetSectionsByName
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSegments(unit)
  name: 'override member GetSegments: unit -> seq<Segment>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSegments_unit_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetSegments
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetSegments: unit -> seq<B2R2.BinFile.Segment>'
  nameWithType: 'override member ELFFileInfo.GetSegments: unit -> seq<Segment>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  name: GetSegments
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSegments_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.GetSegments
  nameWithType: ELFFileInfo.GetSegments
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols(unit)
  name: 'override member GetStaticSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_unit_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetStaticSymbols
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetStaticSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member ELFFileInfo.GetStaticSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  name: GetStaticSymbols
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.GetStaticSymbols
  nameWithType: ELFFileInfo.GetStaticSymbols
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSymbols(unit)
  name: 'override member GetSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSymbols_unit_
  commentId: M:B2R2.BinFile.ELFFileInfo.GetSymbols
  fullName: 'override member B2R2.BinFile.ELFFileInfo.GetSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member ELFFileInfo.GetSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  name: GetSymbols
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_GetSymbols_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.GetSymbols
  nameWithType: ELFFileInfo.GetSymbols
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.IsStripped(unit)
  name: 'override property IsStripped: bool'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_IsStripped_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.IsStripped
  fullName: 'override property B2R2.BinFile.ELFFileInfo.IsStripped: bool'
  nameWithType: 'override property ELFFileInfo.IsStripped: bool'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  name: IsStripped
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_IsStripped_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.IsStripped
  nameWithType: ELFFileInfo.IsStripped
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.IsValidAddr(B2R2.Addr)
  name: 'override member IsValidAddr: Addr -> bool'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_B2R2_Addr_
  commentId: M:B2R2.BinFile.ELFFileInfo.IsValidAddr(System.UInt64)
  fullName: 'override member B2R2.BinFile.ELFFileInfo.IsValidAddr: B2R2.Addr -> bool'
  nameWithType: 'override member ELFFileInfo.IsValidAddr: Addr -> bool'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  name: IsValidAddr
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.IsValidAddr
  nameWithType: ELFFileInfo.IsValidAddr
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.NXEnabled(unit)
  name: 'override property NXEnabled: bool'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_NXEnabled_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.NXEnabled
  fullName: 'override property B2R2.BinFile.ELFFileInfo.NXEnabled: bool'
  nameWithType: 'override property ELFFileInfo.NXEnabled: bool'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  name: NXEnabled
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_NXEnabled_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.NXEnabled
  nameWithType: ELFFileInfo.NXEnabled
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TextStartAddr(unit)
  name: 'override property TextStartAddr: Addr'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.TextStartAddr
  fullName: 'override property B2R2.BinFile.ELFFileInfo.TextStartAddr: B2R2.Addr'
  nameWithType: 'override property ELFFileInfo.TextStartAddr: Addr'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  name: TextStartAddr
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.TextStartAddr
  nameWithType: ELFFileInfo.TextStartAddr
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TranslateAddress(B2R2.Addr)
  name: 'override member TranslateAddress: Addr -> int'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.ELFFileInfo.TranslateAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.ELFFileInfo.TranslateAddress: B2R2.Addr -> int'
  nameWithType: 'override member ELFFileInfo.TranslateAddress: Addr -> int'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  name: TranslateAddress
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.TranslateAddress
  nameWithType: ELFFileInfo.TranslateAddress
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName(B2R2.Addr * string byref)
  name: 'override member TryFindFunctionSymbolName: Addr * string byref -> bool'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_B2R2_Addr___string_byref_
  commentId: M:B2R2.BinFile.ELFFileInfo.TryFindFunctionSymbolName(System.UInt64,System.String@)
  fullName: 'override member B2R2.BinFile.ELFFileInfo.TryFindFunctionSymbolName: B2R2.Addr * string byref -> bool'
  nameWithType: 'override member ELFFileInfo.TryFindFunctionSymbolName: Addr * string byref -> bool'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  name: TryFindFunctionSymbolName
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.TryFindFunctionSymbolName
  nameWithType: ELFFileInfo.TryFindFunctionSymbolName
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.WordSize(unit)
  name: 'override property WordSize: WordSize'
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_WordSize_unit_
  commentId: P:B2R2.BinFile.ELFFileInfo.WordSize
  fullName: 'override property B2R2.BinFile.ELFFileInfo.WordSize: B2R2.WordSize'
  nameWithType: 'override property ELFFileInfo.WordSize: WordSize'
- uid: B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.WordSize*
  name: WordSize
  href: api/B2R2.BinFile.ELFFileInfo.html#B2R2_BinFile_ELFFileInfo_B2R2_BinFile_FileInfo_WordSize_
  commentId: Overload:B2R2.BinFile.ELFFileInfo.B2R2.BinFile.FileInfo.WordSize*
  isSpec: "True"
  fullName: B2R2.BinFile.ELFFileInfo.WordSize
  nameWithType: ELFFileInfo.WordSize
- uid: B2R2.BinFile.FileFormatMismatchException
  name: FileFormatMismatchException
  href: api/B2R2.BinFile.FileFormatMismatchException.html
  commentId: T:B2R2.BinFile.FileFormatMismatchException
  fullName: B2R2.BinFile.FileFormatMismatchException
  nameWithType: B2R2.BinFile.FileFormatMismatchException
- uid: B2R2.BinFile.FileInfo
  name: FileInfo
  href: api/B2R2.BinFile.FileInfo.html
  commentId: T:B2R2.BinFile.FileInfo
  fullName: B2R2.BinFile.FileInfo
  nameWithType: B2R2.BinFile.FileInfo
- uid: B2R2.BinFile.FileInfo.#ctor(unit)
  name: 'new: unit -> FileInfo'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo__ctor_unit_
  commentId: M:B2R2.BinFile.FileInfo.#ctor
  fullName: 'new: unit -> B2R2.BinFile.FileInfo'
  nameWithType: 'new: unit -> FileInfo'
- uid: B2R2.BinFile.FileInfo.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo__ctor_
  commentId: Overload:B2R2.BinFile.FileInfo.#ctor*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo
  nameWithType: FileInfo.( .ctor )
- uid: B2R2.BinFile.FileInfo.EntryPoint(unit)
  name: 'abstract property EntryPoint: Addr'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_EntryPoint_unit_
  commentId: P:B2R2.BinFile.FileInfo.EntryPoint
  fullName: 'abstract property B2R2.BinFile.FileInfo.EntryPoint: B2R2.Addr'
  nameWithType: 'abstract property FileInfo.EntryPoint: Addr'
- uid: B2R2.BinFile.FileInfo.EntryPoint*
  name: EntryPoint
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_EntryPoint_
  commentId: Overload:B2R2.BinFile.FileInfo.EntryPoint*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.EntryPoint
  nameWithType: FileInfo.EntryPoint
- uid: B2R2.BinFile.FileInfo.FileFormat(unit)
  name: 'abstract property FileFormat: FileFormat'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FileFormat_unit_
  commentId: P:B2R2.BinFile.FileInfo.FileFormat
  fullName: 'abstract property B2R2.BinFile.FileInfo.FileFormat: B2R2.FileFormat'
  nameWithType: 'abstract property FileInfo.FileFormat: FileFormat'
- uid: B2R2.BinFile.FileInfo.FileFormat*
  name: FileFormat
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FileFormat_
  commentId: Overload:B2R2.BinFile.FileInfo.FileFormat*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.FileFormat
  nameWithType: FileInfo.FileFormat
- uid: B2R2.BinFile.FileInfo.FilePath(unit)
  name: 'abstract property FilePath: string'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FilePath_unit_
  commentId: P:B2R2.BinFile.FileInfo.FilePath
  fullName: 'abstract property B2R2.BinFile.FileInfo.FilePath: string'
  nameWithType: 'abstract property FileInfo.FilePath: string'
- uid: B2R2.BinFile.FileInfo.FilePath*
  name: FilePath
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FilePath_
  commentId: Overload:B2R2.BinFile.FileInfo.FilePath*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.FilePath
  nameWithType: FileInfo.FilePath
- uid: B2R2.BinFile.FileInfo.FileType(unit)
  name: 'abstract property FileType: FileType'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FileType_unit_
  commentId: P:B2R2.BinFile.FileInfo.FileType
  fullName: 'abstract property B2R2.BinFile.FileInfo.FileType: B2R2.BinFile.FileType'
  nameWithType: 'abstract property FileInfo.FileType: FileType'
- uid: B2R2.BinFile.FileInfo.FileType*
  name: FileType
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FileType_
  commentId: Overload:B2R2.BinFile.FileInfo.FileType*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.FileType
  nameWithType: FileInfo.FileType
- uid: B2R2.BinFile.FileInfo.FileTypeToString(B2R2.BinFile.FileType)
  name: 'static member FileTypeToString: FileType -> string'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FileTypeToString_B2R2_BinFile_FileType_
  commentId: M:B2R2.BinFile.FileInfo.FileTypeToString(B2R2.BinFile.FileType)
  fullName: 'static member B2R2.BinFile.FileInfo.FileTypeToString: B2R2.BinFile.FileType -> string'
  nameWithType: 'static member FileInfo.FileTypeToString: FileType -> string'
- uid: B2R2.BinFile.FileInfo.FileTypeToString*
  name: FileTypeToString
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FileTypeToString_
  commentId: Overload:B2R2.BinFile.FileInfo.FileTypeToString*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.FileTypeToString
  nameWithType: FileInfo.FileTypeToString
- uid: B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress(B2R2.Addr)
  name: 'abstract member FindSymbolChunkStartAddress: Addr -> Addr'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress(System.UInt64)
  fullName: 'abstract member B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress: B2R2.Addr -> B2R2.Addr'
  nameWithType: 'abstract member FileInfo.FindSymbolChunkStartAddress: Addr -> Addr'
- uid: B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  name: FindSymbolChunkStartAddress
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_
  commentId: Overload:B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress
  nameWithType: FileInfo.FindSymbolChunkStartAddress
- uid: B2R2.BinFile.FileInfo.GetDynamicSymbols(unit)
  name: 'abstract member GetDynamicSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetDynamicSymbols_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetDynamicSymbols
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetDynamicSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'abstract member FileInfo.GetDynamicSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.FileInfo.GetDynamicSymbols*
  name: GetDynamicSymbols
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetDynamicSymbols_
  commentId: Overload:B2R2.BinFile.FileInfo.GetDynamicSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetDynamicSymbols
  nameWithType: FileInfo.GetDynamicSymbols
- uid: B2R2.BinFile.FileInfo.GetExecutableSections(unit)
  name: 'member GetExecutableSections: unit -> seq<Section>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetExecutableSections_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetExecutableSections
  fullName: 'member B2R2.BinFile.FileInfo.GetExecutableSections: unit -> seq<B2R2.BinFile.Section>'
  nameWithType: 'member FileInfo.GetExecutableSections: unit -> seq<Section>'
- uid: B2R2.BinFile.FileInfo.GetExecutableSections*
  name: GetExecutableSections
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetExecutableSections_
  commentId: Overload:B2R2.BinFile.FileInfo.GetExecutableSections*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetExecutableSections
  nameWithType: FileInfo.GetExecutableSections
- uid: B2R2.BinFile.FileInfo.GetFunctionAddresses(unit)
  name: 'member GetFunctionAddresses: unit -> seq<Addr>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetFunctionAddresses_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetFunctionAddresses
  fullName: 'member B2R2.BinFile.FileInfo.GetFunctionAddresses: unit -> seq<B2R2.Addr>'
  nameWithType: 'member FileInfo.GetFunctionAddresses: unit -> seq<Addr>'
- uid: B2R2.BinFile.FileInfo.GetFunctionAddresses*
  name: GetFunctionAddresses
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetFunctionAddresses_
  commentId: Overload:B2R2.BinFile.FileInfo.GetFunctionAddresses*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetFunctionAddresses
  nameWithType: FileInfo.GetFunctionAddresses
- uid: B2R2.BinFile.FileInfo.GetLinkageTableEntries(unit)
  name: 'abstract member GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetLinkageTableEntries_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetLinkageTableEntries
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetLinkageTableEntries: unit -> seq<B2R2.BinFile.LinkageTableEntry>'
  nameWithType: 'abstract member FileInfo.GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
- uid: B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  name: GetLinkageTableEntries
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetLinkageTableEntries_
  commentId: Overload:B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetLinkageTableEntries
  nameWithType: FileInfo.GetLinkageTableEntries
- uid: B2R2.BinFile.FileInfo.GetSections(B2R2.Addr)
  name: 'abstract member GetSections: Addr -> seq<Section>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSections_B2R2_Addr_
  commentId: M:B2R2.BinFile.FileInfo.GetSections(System.UInt64)
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetSections: B2R2.Addr -> seq<B2R2.BinFile.Section>'
  nameWithType: 'abstract member FileInfo.GetSections: Addr -> seq<Section>'
- uid: B2R2.BinFile.FileInfo.GetSections(unit)
  name: 'abstract member GetSections: unit -> seq<Section>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSections_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetSections
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetSections: unit -> seq<B2R2.BinFile.Section>'
  nameWithType: 'abstract member FileInfo.GetSections: unit -> seq<Section>'
- uid: B2R2.BinFile.FileInfo.GetSections*
  name: GetSections
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSections_
  commentId: Overload:B2R2.BinFile.FileInfo.GetSections*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetSections
  nameWithType: FileInfo.GetSections
- uid: B2R2.BinFile.FileInfo.GetSectionsByName(string)
  name: 'abstract member GetSectionsByName: string -> seq<Section>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSectionsByName_string_
  commentId: M:B2R2.BinFile.FileInfo.GetSectionsByName(System.String)
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetSectionsByName: string -> seq<B2R2.BinFile.Section>'
  nameWithType: 'abstract member FileInfo.GetSectionsByName: string -> seq<Section>'
- uid: B2R2.BinFile.FileInfo.GetSectionsByName*
  name: GetSectionsByName
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSectionsByName_
  commentId: Overload:B2R2.BinFile.FileInfo.GetSectionsByName*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetSectionsByName
  nameWithType: FileInfo.GetSectionsByName
- uid: B2R2.BinFile.FileInfo.GetSegments(B2R2.Addr)
  name: 'member GetSegments: Addr -> seq<Segment>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSegments_B2R2_Addr_
  commentId: M:B2R2.BinFile.FileInfo.GetSegments(System.UInt64)
  fullName: 'member B2R2.BinFile.FileInfo.GetSegments: B2R2.Addr -> seq<B2R2.BinFile.Segment>'
  nameWithType: 'member FileInfo.GetSegments: Addr -> seq<Segment>'
- uid: B2R2.BinFile.FileInfo.GetSegments(B2R2.BinFile.Permission)
  name: 'member GetSegments: Permission -> seq<Segment>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSegments_B2R2_BinFile_Permission_
  commentId: M:B2R2.BinFile.FileInfo.GetSegments(B2R2.BinFile.Permission)
  fullName: 'member B2R2.BinFile.FileInfo.GetSegments: B2R2.BinFile.Permission -> seq<B2R2.BinFile.Segment>'
  nameWithType: 'member FileInfo.GetSegments: Permission -> seq<Segment>'
- uid: B2R2.BinFile.FileInfo.GetSegments(unit)
  name: 'abstract member GetSegments: unit -> seq<Segment>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSegments_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetSegments
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetSegments: unit -> seq<B2R2.BinFile.Segment>'
  nameWithType: 'abstract member FileInfo.GetSegments: unit -> seq<Segment>'
- uid: B2R2.BinFile.FileInfo.GetSegments*
  name: GetSegments
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSegments_
  commentId: Overload:B2R2.BinFile.FileInfo.GetSegments*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetSegments
  nameWithType: FileInfo.GetSegments
- uid: B2R2.BinFile.FileInfo.GetStaticSymbols(unit)
  name: 'abstract member GetStaticSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetStaticSymbols_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetStaticSymbols
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetStaticSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'abstract member FileInfo.GetStaticSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.FileInfo.GetStaticSymbols*
  name: GetStaticSymbols
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetStaticSymbols_
  commentId: Overload:B2R2.BinFile.FileInfo.GetStaticSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetStaticSymbols
  nameWithType: FileInfo.GetStaticSymbols
- uid: B2R2.BinFile.FileInfo.GetSymbols(unit)
  name: 'abstract member GetSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSymbols_unit_
  commentId: M:B2R2.BinFile.FileInfo.GetSymbols
  fullName: 'abstract member B2R2.BinFile.FileInfo.GetSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'abstract member FileInfo.GetSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.FileInfo.GetSymbols*
  name: GetSymbols
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_GetSymbols_
  commentId: Overload:B2R2.BinFile.FileInfo.GetSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.GetSymbols
  nameWithType: FileInfo.GetSymbols
- uid: B2R2.BinFile.FileInfo.IsStripped(unit)
  name: 'abstract property IsStripped: bool'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_IsStripped_unit_
  commentId: P:B2R2.BinFile.FileInfo.IsStripped
  fullName: 'abstract property B2R2.BinFile.FileInfo.IsStripped: bool'
  nameWithType: 'abstract property FileInfo.IsStripped: bool'
- uid: B2R2.BinFile.FileInfo.IsStripped*
  name: IsStripped
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_IsStripped_
  commentId: Overload:B2R2.BinFile.FileInfo.IsStripped*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.IsStripped
  nameWithType: FileInfo.IsStripped
- uid: B2R2.BinFile.FileInfo.IsValidAddr(B2R2.Addr)
  name: 'abstract member IsValidAddr: Addr -> bool'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_IsValidAddr_B2R2_Addr_
  commentId: M:B2R2.BinFile.FileInfo.IsValidAddr(System.UInt64)
  fullName: 'abstract member B2R2.BinFile.FileInfo.IsValidAddr: B2R2.Addr -> bool'
  nameWithType: 'abstract member FileInfo.IsValidAddr: Addr -> bool'
- uid: B2R2.BinFile.FileInfo.IsValidAddr*
  name: IsValidAddr
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_IsValidAddr_
  commentId: Overload:B2R2.BinFile.FileInfo.IsValidAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.IsValidAddr
  nameWithType: FileInfo.IsValidAddr
- uid: B2R2.BinFile.FileInfo.NXEnabled(unit)
  name: 'abstract property NXEnabled: bool'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_NXEnabled_unit_
  commentId: P:B2R2.BinFile.FileInfo.NXEnabled
  fullName: 'abstract property B2R2.BinFile.FileInfo.NXEnabled: bool'
  nameWithType: 'abstract property FileInfo.NXEnabled: bool'
- uid: B2R2.BinFile.FileInfo.NXEnabled*
  name: NXEnabled
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_NXEnabled_
  commentId: Overload:B2R2.BinFile.FileInfo.NXEnabled*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.NXEnabled
  nameWithType: FileInfo.NXEnabled
- uid: B2R2.BinFile.FileInfo.PermissionToString(B2R2.BinFile.Permission)
  name: 'static member PermissionToString: Permission -> string'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_PermissionToString_B2R2_BinFile_Permission_
  commentId: M:B2R2.BinFile.FileInfo.PermissionToString(B2R2.BinFile.Permission)
  fullName: 'static member B2R2.BinFile.FileInfo.PermissionToString: B2R2.BinFile.Permission -> string'
  nameWithType: 'static member FileInfo.PermissionToString: Permission -> string'
- uid: B2R2.BinFile.FileInfo.PermissionToString*
  name: PermissionToString
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_PermissionToString_
  commentId: Overload:B2R2.BinFile.FileInfo.PermissionToString*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.PermissionToString
  nameWithType: FileInfo.PermissionToString
- uid: B2R2.BinFile.FileInfo.TextStartAddr(unit)
  name: 'abstract property TextStartAddr: Addr'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_TextStartAddr_unit_
  commentId: P:B2R2.BinFile.FileInfo.TextStartAddr
  fullName: 'abstract property B2R2.BinFile.FileInfo.TextStartAddr: B2R2.Addr'
  nameWithType: 'abstract property FileInfo.TextStartAddr: Addr'
- uid: B2R2.BinFile.FileInfo.TextStartAddr*
  name: TextStartAddr
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_TextStartAddr_
  commentId: Overload:B2R2.BinFile.FileInfo.TextStartAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.TextStartAddr
  nameWithType: FileInfo.TextStartAddr
- uid: B2R2.BinFile.FileInfo.TranslateAddress(B2R2.Addr)
  name: 'abstract member TranslateAddress: Addr -> int'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_TranslateAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.FileInfo.TranslateAddress(System.UInt64)
  fullName: 'abstract member B2R2.BinFile.FileInfo.TranslateAddress: B2R2.Addr -> int'
  nameWithType: 'abstract member FileInfo.TranslateAddress: Addr -> int'
- uid: B2R2.BinFile.FileInfo.TranslateAddress*
  name: TranslateAddress
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_TranslateAddress_
  commentId: Overload:B2R2.BinFile.FileInfo.TranslateAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.TranslateAddress
  nameWithType: FileInfo.TranslateAddress
- uid: B2R2.BinFile.FileInfo.TryFindFunctionSymbolName(B2R2.Addr * string byref)
  name: 'abstract member TryFindFunctionSymbolName: Addr * string byref -> bool'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_B2R2_Addr___string_byref_
  commentId: M:B2R2.BinFile.FileInfo.TryFindFunctionSymbolName(System.UInt64,System.String@)
  fullName: 'abstract member B2R2.BinFile.FileInfo.TryFindFunctionSymbolName: B2R2.Addr * string byref -> bool'
  nameWithType: 'abstract member FileInfo.TryFindFunctionSymbolName: Addr * string byref -> bool'
- uid: B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  name: TryFindFunctionSymbolName
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_
  commentId: Overload:B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.TryFindFunctionSymbolName
  nameWithType: FileInfo.TryFindFunctionSymbolName
- uid: B2R2.BinFile.FileInfo.WordSize(unit)
  name: 'abstract property WordSize: WordSize'
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_WordSize_unit_
  commentId: P:B2R2.BinFile.FileInfo.WordSize
  fullName: 'abstract property B2R2.BinFile.FileInfo.WordSize: B2R2.WordSize'
  nameWithType: 'abstract property FileInfo.WordSize: WordSize'
- uid: B2R2.BinFile.FileInfo.WordSize*
  name: WordSize
  href: api/B2R2.BinFile.FileInfo.html#B2R2_BinFile_FileInfo_WordSize_
  commentId: Overload:B2R2.BinFile.FileInfo.WordSize*
  isSpec: "True"
  fullName: B2R2.BinFile.FileInfo.WordSize
  nameWithType: FileInfo.WordSize
- uid: B2R2.BinFile.FileType
  name: FileType
  href: api/B2R2.BinFile.FileType.html
  commentId: T:B2R2.BinFile.FileType
  fullName: B2R2.BinFile.FileType
  nameWithType: B2R2.BinFile.FileType
- uid: B2R2.BinFile.FileType.CoreFile
  name: 'val CoreFile: FileType'
  href: api/B2R2.BinFile.FileType.html#B2R2_BinFile_FileType_CoreFile
  commentId: P:B2R2.BinFile.FileType.CoreFile
  fullName: 'val B2R2.BinFile.FileType.CoreFile: B2R2.BinFile.FileType'
  nameWithType: 'val FileType.CoreFile: FileType'
- uid: B2R2.BinFile.FileType.ExecutableFile
  name: 'val ExecutableFile: FileType'
  href: api/B2R2.BinFile.FileType.html#B2R2_BinFile_FileType_ExecutableFile
  commentId: P:B2R2.BinFile.FileType.ExecutableFile
  fullName: 'val B2R2.BinFile.FileType.ExecutableFile: B2R2.BinFile.FileType'
  nameWithType: 'val FileType.ExecutableFile: FileType'
- uid: B2R2.BinFile.FileType.LibFile
  name: 'val LibFile: FileType'
  href: api/B2R2.BinFile.FileType.html#B2R2_BinFile_FileType_LibFile
  commentId: P:B2R2.BinFile.FileType.LibFile
  fullName: 'val B2R2.BinFile.FileType.LibFile: B2R2.BinFile.FileType'
  nameWithType: 'val FileType.LibFile: FileType'
- uid: B2R2.BinFile.FileType.ObjFile
  name: 'val ObjFile: FileType'
  href: api/B2R2.BinFile.FileType.html#B2R2_BinFile_FileType_ObjFile
  commentId: P:B2R2.BinFile.FileType.ObjFile
  fullName: 'val B2R2.BinFile.FileType.ObjFile: B2R2.BinFile.FileType'
  nameWithType: 'val FileType.ObjFile: FileType'
- uid: B2R2.BinFile.FileType.UnknownFile
  name: 'val UnknownFile: FileType'
  href: api/B2R2.BinFile.FileType.html#B2R2_BinFile_FileType_UnknownFile
  commentId: P:B2R2.BinFile.FileType.UnknownFile
  fullName: 'val B2R2.BinFile.FileType.UnknownFile: B2R2.BinFile.FileType'
  nameWithType: 'val FileType.UnknownFile: FileType'
- uid: B2R2.BinFile.FormatDetector
  name: FormatDetector (mod)
  href: api/B2R2.BinFile.FormatDetector.html
  commentId: T:B2R2.BinFile.FormatDetector
  fullName: B2R2.BinFile.FormatDetector
  nameWithType: B2R2.BinFile.FormatDetector
- uid: B2R2.BinFile.FormatDetector.detect(string)
  name: 'val detect: string -> FileFormat * ISA'
  href: api/B2R2.BinFile.FormatDetector.html#B2R2_BinFile_FormatDetector_detect_string_
  commentId: M:B2R2.BinFile.Detect(System.String)
  fullName: 'val B2R2.BinFile.FormatDetector.detect: string -> B2R2.FileFormat * B2R2.ISA'
  nameWithType: 'val FormatDetector.detect: string -> FileFormat * ISA'
- uid: B2R2.BinFile.FormatDetector.detect*
  name: detect
  href: api/B2R2.BinFile.FormatDetector.html#B2R2_BinFile_FormatDetector_detect_
  commentId: Overload:B2R2.BinFile.FormatDetector.detect*
  isSpec: "True"
  fullName: B2R2.BinFile.FormatDetector.detect
  nameWithType: FormatDetector.detect
- uid: B2R2.BinFile.InvalidAddrReadException
  name: InvalidAddrReadException
  href: api/B2R2.BinFile.InvalidAddrReadException.html
  commentId: T:B2R2.BinFile.InvalidAddrReadException
  fullName: B2R2.BinFile.InvalidAddrReadException
  nameWithType: B2R2.BinFile.InvalidAddrReadException
- uid: B2R2.BinFile.LinkageTableEntry
  name: LinkageTableEntry (rec)
  href: api/B2R2.BinFile.LinkageTableEntry.html
  commentId: T:B2R2.BinFile.LinkageTableEntry
  fullName: B2R2.BinFile.LinkageTableEntry
  nameWithType: B2R2.BinFile.LinkageTableEntry
- uid: B2R2.BinFile.LinkageTableEntry.FuncName
  name: 'val FuncName: string'
  href: api/B2R2.BinFile.LinkageTableEntry.html#B2R2_BinFile_LinkageTableEntry_FuncName
  commentId: P:B2R2.BinFile.LinkageTableEntry.FuncName
  fullName: 'val B2R2.BinFile.LinkageTableEntry.FuncName: string'
  nameWithType: 'val LinkageTableEntry.FuncName: string'
- uid: B2R2.BinFile.LinkageTableEntry.LibraryName
  name: 'val LibraryName: string'
  href: api/B2R2.BinFile.LinkageTableEntry.html#B2R2_BinFile_LinkageTableEntry_LibraryName
  commentId: P:B2R2.BinFile.LinkageTableEntry.LibraryName
  fullName: 'val B2R2.BinFile.LinkageTableEntry.LibraryName: string'
  nameWithType: 'val LinkageTableEntry.LibraryName: string'
- uid: B2R2.BinFile.LinkageTableEntry.TableAddress
  name: 'val TableAddress: Addr'
  href: api/B2R2.BinFile.LinkageTableEntry.html#B2R2_BinFile_LinkageTableEntry_TableAddress
  commentId: P:B2R2.BinFile.LinkageTableEntry.TableAddress
  fullName: 'val B2R2.BinFile.LinkageTableEntry.TableAddress: B2R2.Addr'
  nameWithType: 'val LinkageTableEntry.TableAddress: Addr'
- uid: B2R2.BinFile.LinkageTableEntry.TrampolineAddress
  name: 'val TrampolineAddress: Addr'
  href: api/B2R2.BinFile.LinkageTableEntry.html#B2R2_BinFile_LinkageTableEntry_TrampolineAddress
  commentId: P:B2R2.BinFile.LinkageTableEntry.TrampolineAddress
  fullName: 'val B2R2.BinFile.LinkageTableEntry.TrampolineAddress: B2R2.Addr'
  nameWithType: 'val LinkageTableEntry.TrampolineAddress: Addr'
- uid: B2R2.BinFile.MachFileInfo
  name: MachFileInfo
  href: api/B2R2.BinFile.MachFileInfo.html
  commentId: T:B2R2.BinFile.MachFileInfo
  fullName: B2R2.BinFile.MachFileInfo
  nameWithType: B2R2.BinFile.MachFileInfo
- uid: B2R2.BinFile.MachFileInfo.#ctor(byte [] * string)
  name: 'new: byte [] * string -> MachFileInfo'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo__ctor_byte______string_
  commentId: M:B2R2.BinFile.MachFileInfo.#ctor(System.Byte[],System.String)
  fullName: 'new: byte [] * string -> B2R2.BinFile.MachFileInfo'
  nameWithType: 'new: byte [] * string -> MachFileInfo'
- uid: B2R2.BinFile.MachFileInfo.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo__ctor_
  commentId: Overload:B2R2.BinFile.MachFileInfo.#ctor*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo
  nameWithType: MachFileInfo.( .ctor )
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.EntryPoint(unit)
  name: 'override property EntryPoint: Addr'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_EntryPoint_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.EntryPoint
  fullName: 'override property B2R2.BinFile.MachFileInfo.EntryPoint: B2R2.Addr'
  nameWithType: 'override property MachFileInfo.EntryPoint: Addr'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  name: EntryPoint
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_EntryPoint_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.EntryPoint
  nameWithType: MachFileInfo.EntryPoint
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FileFormat(unit)
  name: 'override property FileFormat: FileFormat'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FileFormat_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.FileFormat
  fullName: 'override property B2R2.BinFile.MachFileInfo.FileFormat: B2R2.FileFormat'
  nameWithType: 'override property MachFileInfo.FileFormat: FileFormat'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  name: FileFormat
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FileFormat_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.FileFormat
  nameWithType: MachFileInfo.FileFormat
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FilePath(unit)
  name: 'override property FilePath: string'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FilePath_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.FilePath
  fullName: 'override property B2R2.BinFile.MachFileInfo.FilePath: string'
  nameWithType: 'override property MachFileInfo.FilePath: string'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FilePath*
  name: FilePath
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FilePath_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FilePath*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.FilePath
  nameWithType: MachFileInfo.FilePath
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FileType(unit)
  name: 'override property FileType: FileType'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FileType_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.FileType
  fullName: 'override property B2R2.BinFile.MachFileInfo.FileType: B2R2.BinFile.FileType'
  nameWithType: 'override property MachFileInfo.FileType: FileType'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FileType*
  name: FileType
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FileType_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FileType*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.FileType
  nameWithType: MachFileInfo.FileType
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress(B2R2.Addr)
  name: 'override member FindSymbolChunkStartAddress: Addr -> Addr'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.MachFileInfo.FindSymbolChunkStartAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.MachFileInfo.FindSymbolChunkStartAddress: B2R2.Addr -> B2R2.Addr'
  nameWithType: 'override member MachFileInfo.FindSymbolChunkStartAddress: Addr -> Addr'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  name: FindSymbolChunkStartAddress
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.FindSymbolChunkStartAddress
  nameWithType: MachFileInfo.FindSymbolChunkStartAddress
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols(unit)
  name: 'override member GetDynamicSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_unit_
  commentId: M:B2R2.BinFile.MachFileInfo.GetDynamicSymbols
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetDynamicSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member MachFileInfo.GetDynamicSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  name: GetDynamicSymbols
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.GetDynamicSymbols
  nameWithType: MachFileInfo.GetDynamicSymbols
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries(unit)
  name: 'override member GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_unit_
  commentId: M:B2R2.BinFile.MachFileInfo.GetLinkageTableEntries
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetLinkageTableEntries: unit -> seq<B2R2.BinFile.LinkageTableEntry>'
  nameWithType: 'override member MachFileInfo.GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  name: GetLinkageTableEntries
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.GetLinkageTableEntries
  nameWithType: MachFileInfo.GetLinkageTableEntries
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSections(B2R2.Addr)
  name: 'override member GetSections: Addr -> seq<Section>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSections_B2R2_Addr_
  commentId: M:B2R2.BinFile.MachFileInfo.GetSections(System.UInt64)
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetSections: B2R2.Addr -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member MachFileInfo.GetSections: Addr -> seq<Section>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSections(unit)
  name: 'override member GetSections: unit -> seq<Section>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSections_unit_
  commentId: M:B2R2.BinFile.MachFileInfo.GetSections
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetSections: unit -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member MachFileInfo.GetSections: unit -> seq<Section>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSections*
  name: GetSections
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSections_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSections*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.GetSections
  nameWithType: MachFileInfo.GetSections
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName(string)
  name: 'override member GetSectionsByName: string -> seq<Section>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_string_
  commentId: M:B2R2.BinFile.MachFileInfo.GetSectionsByName(System.String)
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetSectionsByName: string -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member MachFileInfo.GetSectionsByName: string -> seq<Section>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  name: GetSectionsByName
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.GetSectionsByName
  nameWithType: MachFileInfo.GetSectionsByName
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSegments(unit)
  name: 'override member GetSegments: unit -> seq<Segment>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSegments_unit_
  commentId: M:B2R2.BinFile.MachFileInfo.GetSegments
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetSegments: unit -> seq<B2R2.BinFile.Segment>'
  nameWithType: 'override member MachFileInfo.GetSegments: unit -> seq<Segment>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  name: GetSegments
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSegments_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.GetSegments
  nameWithType: MachFileInfo.GetSegments
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols(unit)
  name: 'override member GetStaticSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_unit_
  commentId: M:B2R2.BinFile.MachFileInfo.GetStaticSymbols
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetStaticSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member MachFileInfo.GetStaticSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  name: GetStaticSymbols
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.GetStaticSymbols
  nameWithType: MachFileInfo.GetStaticSymbols
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSymbols(unit)
  name: 'override member GetSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSymbols_unit_
  commentId: M:B2R2.BinFile.MachFileInfo.GetSymbols
  fullName: 'override member B2R2.BinFile.MachFileInfo.GetSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member MachFileInfo.GetSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  name: GetSymbols
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_GetSymbols_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.GetSymbols
  nameWithType: MachFileInfo.GetSymbols
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.IsStripped(unit)
  name: 'override property IsStripped: bool'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_IsStripped_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.IsStripped
  fullName: 'override property B2R2.BinFile.MachFileInfo.IsStripped: bool'
  nameWithType: 'override property MachFileInfo.IsStripped: bool'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  name: IsStripped
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_IsStripped_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.IsStripped
  nameWithType: MachFileInfo.IsStripped
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.IsValidAddr(B2R2.Addr)
  name: 'override member IsValidAddr: Addr -> bool'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_B2R2_Addr_
  commentId: M:B2R2.BinFile.MachFileInfo.IsValidAddr(System.UInt64)
  fullName: 'override member B2R2.BinFile.MachFileInfo.IsValidAddr: B2R2.Addr -> bool'
  nameWithType: 'override member MachFileInfo.IsValidAddr: Addr -> bool'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  name: IsValidAddr
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.IsValidAddr
  nameWithType: MachFileInfo.IsValidAddr
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.NXEnabled(unit)
  name: 'override property NXEnabled: bool'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_NXEnabled_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.NXEnabled
  fullName: 'override property B2R2.BinFile.MachFileInfo.NXEnabled: bool'
  nameWithType: 'override property MachFileInfo.NXEnabled: bool'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  name: NXEnabled
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_NXEnabled_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.NXEnabled
  nameWithType: MachFileInfo.NXEnabled
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TextStartAddr(unit)
  name: 'override property TextStartAddr: Addr'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.TextStartAddr
  fullName: 'override property B2R2.BinFile.MachFileInfo.TextStartAddr: B2R2.Addr'
  nameWithType: 'override property MachFileInfo.TextStartAddr: Addr'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  name: TextStartAddr
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.TextStartAddr
  nameWithType: MachFileInfo.TextStartAddr
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TranslateAddress(B2R2.Addr)
  name: 'override member TranslateAddress: Addr -> int'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.MachFileInfo.TranslateAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.MachFileInfo.TranslateAddress: B2R2.Addr -> int'
  nameWithType: 'override member MachFileInfo.TranslateAddress: Addr -> int'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  name: TranslateAddress
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.TranslateAddress
  nameWithType: MachFileInfo.TranslateAddress
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName(B2R2.Addr * string byref)
  name: 'override member TryFindFunctionSymbolName: Addr * string byref -> bool'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_B2R2_Addr___string_byref_
  commentId: M:B2R2.BinFile.MachFileInfo.TryFindFunctionSymbolName(System.UInt64,System.String@)
  fullName: 'override member B2R2.BinFile.MachFileInfo.TryFindFunctionSymbolName: B2R2.Addr * string byref -> bool'
  nameWithType: 'override member MachFileInfo.TryFindFunctionSymbolName: Addr * string byref -> bool'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  name: TryFindFunctionSymbolName
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.TryFindFunctionSymbolName
  nameWithType: MachFileInfo.TryFindFunctionSymbolName
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.WordSize(unit)
  name: 'override property WordSize: WordSize'
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_WordSize_unit_
  commentId: P:B2R2.BinFile.MachFileInfo.WordSize
  fullName: 'override property B2R2.BinFile.MachFileInfo.WordSize: B2R2.WordSize'
  nameWithType: 'override property MachFileInfo.WordSize: WordSize'
- uid: B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.WordSize*
  name: WordSize
  href: api/B2R2.BinFile.MachFileInfo.html#B2R2_BinFile_MachFileInfo_B2R2_BinFile_FileInfo_WordSize_
  commentId: Overload:B2R2.BinFile.MachFileInfo.B2R2.BinFile.FileInfo.WordSize*
  isSpec: "True"
  fullName: B2R2.BinFile.MachFileInfo.WordSize
  nameWithType: MachFileInfo.WordSize
- uid: B2R2.BinFile.PEFileInfo
  name: PEFileInfo
  href: api/B2R2.BinFile.PEFileInfo.html
  commentId: T:B2R2.BinFile.PEFileInfo
  fullName: B2R2.BinFile.PEFileInfo
  nameWithType: B2R2.BinFile.PEFileInfo
- uid: B2R2.BinFile.PEFileInfo.#ctor(byte [] * string * byte [] option)
  name: 'new: byte [] * string * byte [] option -> PEFileInfo'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo__ctor_byte______string___byte____option_
  commentId: M:B2R2.BinFile.PEFileInfo.#ctor(System.Byte[],System.String,Microsoft.FSharp.Core.FSharpOption{System.Byte[]})
  fullName: 'new: byte [] * string * byte [] option -> B2R2.BinFile.PEFileInfo'
  nameWithType: 'new: byte [] * string * byte [] option -> PEFileInfo'
- uid: B2R2.BinFile.PEFileInfo.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo__ctor_
  commentId: Overload:B2R2.BinFile.PEFileInfo.#ctor*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo
  nameWithType: PEFileInfo.( .ctor )
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.EntryPoint(unit)
  name: 'override property EntryPoint: Addr'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_EntryPoint_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.EntryPoint
  fullName: 'override property B2R2.BinFile.PEFileInfo.EntryPoint: B2R2.Addr'
  nameWithType: 'override property PEFileInfo.EntryPoint: Addr'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  name: EntryPoint
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_EntryPoint_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.EntryPoint
  nameWithType: PEFileInfo.EntryPoint
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FileFormat(unit)
  name: 'override property FileFormat: FileFormat'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FileFormat_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.FileFormat
  fullName: 'override property B2R2.BinFile.PEFileInfo.FileFormat: B2R2.FileFormat'
  nameWithType: 'override property PEFileInfo.FileFormat: FileFormat'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  name: FileFormat
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FileFormat_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.FileFormat
  nameWithType: PEFileInfo.FileFormat
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FilePath(unit)
  name: 'override property FilePath: string'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FilePath_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.FilePath
  fullName: 'override property B2R2.BinFile.PEFileInfo.FilePath: string'
  nameWithType: 'override property PEFileInfo.FilePath: string'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FilePath*
  name: FilePath
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FilePath_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FilePath*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.FilePath
  nameWithType: PEFileInfo.FilePath
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FileType(unit)
  name: 'override property FileType: FileType'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FileType_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.FileType
  fullName: 'override property B2R2.BinFile.PEFileInfo.FileType: B2R2.BinFile.FileType'
  nameWithType: 'override property PEFileInfo.FileType: FileType'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FileType*
  name: FileType
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FileType_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FileType*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.FileType
  nameWithType: PEFileInfo.FileType
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress(B2R2.Addr)
  name: 'override member FindSymbolChunkStartAddress: Addr -> Addr'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.PEFileInfo.FindSymbolChunkStartAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.PEFileInfo.FindSymbolChunkStartAddress: B2R2.Addr -> B2R2.Addr'
  nameWithType: 'override member PEFileInfo.FindSymbolChunkStartAddress: Addr -> Addr'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  name: FindSymbolChunkStartAddress
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.FindSymbolChunkStartAddress
  nameWithType: PEFileInfo.FindSymbolChunkStartAddress
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols(unit)
  name: 'override member GetDynamicSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_unit_
  commentId: M:B2R2.BinFile.PEFileInfo.GetDynamicSymbols
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetDynamicSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member PEFileInfo.GetDynamicSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  name: GetDynamicSymbols
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.GetDynamicSymbols
  nameWithType: PEFileInfo.GetDynamicSymbols
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries(unit)
  name: 'override member GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_unit_
  commentId: M:B2R2.BinFile.PEFileInfo.GetLinkageTableEntries
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetLinkageTableEntries: unit -> seq<B2R2.BinFile.LinkageTableEntry>'
  nameWithType: 'override member PEFileInfo.GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  name: GetLinkageTableEntries
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.GetLinkageTableEntries
  nameWithType: PEFileInfo.GetLinkageTableEntries
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSections(B2R2.Addr)
  name: 'override member GetSections: Addr -> seq<Section>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSections_B2R2_Addr_
  commentId: M:B2R2.BinFile.PEFileInfo.GetSections(System.UInt64)
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetSections: B2R2.Addr -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member PEFileInfo.GetSections: Addr -> seq<Section>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSections(unit)
  name: 'override member GetSections: unit -> seq<Section>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSections_unit_
  commentId: M:B2R2.BinFile.PEFileInfo.GetSections
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetSections: unit -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member PEFileInfo.GetSections: unit -> seq<Section>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSections*
  name: GetSections
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSections_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSections*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.GetSections
  nameWithType: PEFileInfo.GetSections
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName(string)
  name: 'override member GetSectionsByName: string -> seq<Section>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_string_
  commentId: M:B2R2.BinFile.PEFileInfo.GetSectionsByName(System.String)
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetSectionsByName: string -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member PEFileInfo.GetSectionsByName: string -> seq<Section>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  name: GetSectionsByName
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.GetSectionsByName
  nameWithType: PEFileInfo.GetSectionsByName
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSegments(unit)
  name: 'override member GetSegments: unit -> seq<Segment>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSegments_unit_
  commentId: M:B2R2.BinFile.PEFileInfo.GetSegments
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetSegments: unit -> seq<B2R2.BinFile.Segment>'
  nameWithType: 'override member PEFileInfo.GetSegments: unit -> seq<Segment>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  name: GetSegments
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSegments_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.GetSegments
  nameWithType: PEFileInfo.GetSegments
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols(unit)
  name: 'override member GetStaticSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_unit_
  commentId: M:B2R2.BinFile.PEFileInfo.GetStaticSymbols
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetStaticSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member PEFileInfo.GetStaticSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  name: GetStaticSymbols
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.GetStaticSymbols
  nameWithType: PEFileInfo.GetStaticSymbols
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSymbols(unit)
  name: 'override member GetSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSymbols_unit_
  commentId: M:B2R2.BinFile.PEFileInfo.GetSymbols
  fullName: 'override member B2R2.BinFile.PEFileInfo.GetSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member PEFileInfo.GetSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  name: GetSymbols
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_GetSymbols_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.GetSymbols
  nameWithType: PEFileInfo.GetSymbols
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.IsStripped(unit)
  name: 'override property IsStripped: bool'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_IsStripped_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.IsStripped
  fullName: 'override property B2R2.BinFile.PEFileInfo.IsStripped: bool'
  nameWithType: 'override property PEFileInfo.IsStripped: bool'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  name: IsStripped
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_IsStripped_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.IsStripped
  nameWithType: PEFileInfo.IsStripped
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.IsValidAddr(B2R2.Addr)
  name: 'override member IsValidAddr: Addr -> bool'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_B2R2_Addr_
  commentId: M:B2R2.BinFile.PEFileInfo.IsValidAddr(System.UInt64)
  fullName: 'override member B2R2.BinFile.PEFileInfo.IsValidAddr: B2R2.Addr -> bool'
  nameWithType: 'override member PEFileInfo.IsValidAddr: Addr -> bool'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  name: IsValidAddr
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.IsValidAddr
  nameWithType: PEFileInfo.IsValidAddr
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.NXEnabled(unit)
  name: 'override property NXEnabled: bool'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_NXEnabled_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.NXEnabled
  fullName: 'override property B2R2.BinFile.PEFileInfo.NXEnabled: bool'
  nameWithType: 'override property PEFileInfo.NXEnabled: bool'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  name: NXEnabled
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_NXEnabled_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.NXEnabled
  nameWithType: PEFileInfo.NXEnabled
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TextStartAddr(unit)
  name: 'override property TextStartAddr: Addr'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.TextStartAddr
  fullName: 'override property B2R2.BinFile.PEFileInfo.TextStartAddr: B2R2.Addr'
  nameWithType: 'override property PEFileInfo.TextStartAddr: Addr'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  name: TextStartAddr
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.TextStartAddr
  nameWithType: PEFileInfo.TextStartAddr
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TranslateAddress(B2R2.Addr)
  name: 'override member TranslateAddress: Addr -> int'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.PEFileInfo.TranslateAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.PEFileInfo.TranslateAddress: B2R2.Addr -> int'
  nameWithType: 'override member PEFileInfo.TranslateAddress: Addr -> int'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  name: TranslateAddress
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.TranslateAddress
  nameWithType: PEFileInfo.TranslateAddress
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName(B2R2.Addr * string byref)
  name: 'override member TryFindFunctionSymbolName: Addr * string byref -> bool'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_B2R2_Addr___string_byref_
  commentId: M:B2R2.BinFile.PEFileInfo.TryFindFunctionSymbolName(System.UInt64,System.String@)
  fullName: 'override member B2R2.BinFile.PEFileInfo.TryFindFunctionSymbolName: B2R2.Addr * string byref -> bool'
  nameWithType: 'override member PEFileInfo.TryFindFunctionSymbolName: Addr * string byref -> bool'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  name: TryFindFunctionSymbolName
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.TryFindFunctionSymbolName
  nameWithType: PEFileInfo.TryFindFunctionSymbolName
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.WordSize(unit)
  name: 'override property WordSize: WordSize'
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_WordSize_unit_
  commentId: P:B2R2.BinFile.PEFileInfo.WordSize
  fullName: 'override property B2R2.BinFile.PEFileInfo.WordSize: B2R2.WordSize'
  nameWithType: 'override property PEFileInfo.WordSize: WordSize'
- uid: B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.WordSize*
  name: WordSize
  href: api/B2R2.BinFile.PEFileInfo.html#B2R2_BinFile_PEFileInfo_B2R2_BinFile_FileInfo_WordSize_
  commentId: Overload:B2R2.BinFile.PEFileInfo.B2R2.BinFile.FileInfo.WordSize*
  isSpec: "True"
  fullName: B2R2.BinFile.PEFileInfo.WordSize
  nameWithType: PEFileInfo.WordSize
- uid: B2R2.BinFile.Permission
  name: Permission
  href: api/B2R2.BinFile.Permission.html
  commentId: T:B2R2.BinFile.Permission
  fullName: B2R2.BinFile.Permission
  nameWithType: B2R2.BinFile.Permission
- uid: B2R2.BinFile.Permission.Executable
  name: 'val Executable: Permission'
  href: api/B2R2.BinFile.Permission.html#B2R2_BinFile_Permission_Executable
  commentId: P:B2R2.BinFile.Permission.Executable
  fullName: 'val B2R2.BinFile.Permission.Executable: B2R2.BinFile.Permission'
  nameWithType: 'val Permission.Executable: Permission'
- uid: B2R2.BinFile.Permission.Readable
  name: 'val Readable: Permission'
  href: api/B2R2.BinFile.Permission.html#B2R2_BinFile_Permission_Readable
  commentId: P:B2R2.BinFile.Permission.Readable
  fullName: 'val B2R2.BinFile.Permission.Readable: B2R2.BinFile.Permission'
  nameWithType: 'val Permission.Readable: Permission'
- uid: B2R2.BinFile.Permission.Writable
  name: 'val Writable: Permission'
  href: api/B2R2.BinFile.Permission.html#B2R2_BinFile_Permission_Writable
  commentId: P:B2R2.BinFile.Permission.Writable
  fullName: 'val B2R2.BinFile.Permission.Writable: B2R2.BinFile.Permission'
  nameWithType: 'val Permission.Writable: Permission'
- uid: B2R2.BinFile.RawFileInfo
  name: RawFileInfo
  href: api/B2R2.BinFile.RawFileInfo.html
  commentId: T:B2R2.BinFile.RawFileInfo
  fullName: B2R2.BinFile.RawFileInfo
  nameWithType: B2R2.BinFile.RawFileInfo
- uid: B2R2.BinFile.RawFileInfo.#ctor(byte [] * B2R2.Addr)
  name: 'new: byte [] * Addr -> RawFileInfo'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo__ctor_byte______B2R2_Addr_
  commentId: M:B2R2.BinFile.RawFileInfo.#ctor(System.Byte[],System.UInt64)
  fullName: 'new: byte [] * B2R2.Addr -> B2R2.BinFile.RawFileInfo'
  nameWithType: 'new: byte [] * Addr -> RawFileInfo'
- uid: B2R2.BinFile.RawFileInfo.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo__ctor_
  commentId: Overload:B2R2.BinFile.RawFileInfo.#ctor*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo
  nameWithType: RawFileInfo.( .ctor )
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.EntryPoint(unit)
  name: 'override property EntryPoint: Addr'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_EntryPoint_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.EntryPoint
  fullName: 'override property B2R2.BinFile.RawFileInfo.EntryPoint: B2R2.Addr'
  nameWithType: 'override property RawFileInfo.EntryPoint: Addr'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  name: EntryPoint
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_EntryPoint_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.EntryPoint*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.EntryPoint
  nameWithType: RawFileInfo.EntryPoint
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FileFormat(unit)
  name: 'override property FileFormat: FileFormat'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FileFormat_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.FileFormat
  fullName: 'override property B2R2.BinFile.RawFileInfo.FileFormat: B2R2.FileFormat'
  nameWithType: 'override property RawFileInfo.FileFormat: FileFormat'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  name: FileFormat
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FileFormat_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FileFormat*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.FileFormat
  nameWithType: RawFileInfo.FileFormat
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FilePath(unit)
  name: 'override property FilePath: string'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FilePath_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.FilePath
  fullName: 'override property B2R2.BinFile.RawFileInfo.FilePath: string'
  nameWithType: 'override property RawFileInfo.FilePath: string'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FilePath*
  name: FilePath
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FilePath_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FilePath*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.FilePath
  nameWithType: RawFileInfo.FilePath
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FileType(unit)
  name: 'override property FileType: FileType'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FileType_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.FileType
  fullName: 'override property B2R2.BinFile.RawFileInfo.FileType: B2R2.BinFile.FileType'
  nameWithType: 'override property RawFileInfo.FileType: FileType'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FileType*
  name: FileType
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FileType_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FileType*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.FileType
  nameWithType: RawFileInfo.FileType
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress(B2R2.Addr)
  name: 'override member FindSymbolChunkStartAddress: Addr -> Addr'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.RawFileInfo.FindSymbolChunkStartAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.RawFileInfo.FindSymbolChunkStartAddress: B2R2.Addr -> B2R2.Addr'
  nameWithType: 'override member RawFileInfo.FindSymbolChunkStartAddress: Addr -> Addr'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  name: FindSymbolChunkStartAddress
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_FindSymbolChunkStartAddress_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.FindSymbolChunkStartAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.FindSymbolChunkStartAddress
  nameWithType: RawFileInfo.FindSymbolChunkStartAddress
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols(unit)
  name: 'override member GetDynamicSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_unit_
  commentId: M:B2R2.BinFile.RawFileInfo.GetDynamicSymbols
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetDynamicSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member RawFileInfo.GetDynamicSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  name: GetDynamicSymbols
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetDynamicSymbols_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetDynamicSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.GetDynamicSymbols
  nameWithType: RawFileInfo.GetDynamicSymbols
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries(unit)
  name: 'override member GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_unit_
  commentId: M:B2R2.BinFile.RawFileInfo.GetLinkageTableEntries
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetLinkageTableEntries: unit -> seq<B2R2.BinFile.LinkageTableEntry>'
  nameWithType: 'override member RawFileInfo.GetLinkageTableEntries: unit -> seq<LinkageTableEntry>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  name: GetLinkageTableEntries
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetLinkageTableEntries_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetLinkageTableEntries*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.GetLinkageTableEntries
  nameWithType: RawFileInfo.GetLinkageTableEntries
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSections(B2R2.Addr)
  name: 'override member GetSections: Addr -> seq<Section>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSections_B2R2_Addr_
  commentId: M:B2R2.BinFile.RawFileInfo.GetSections(System.UInt64)
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetSections: B2R2.Addr -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member RawFileInfo.GetSections: Addr -> seq<Section>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSections(unit)
  name: 'override member GetSections: unit -> seq<Section>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSections_unit_
  commentId: M:B2R2.BinFile.RawFileInfo.GetSections
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetSections: unit -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member RawFileInfo.GetSections: unit -> seq<Section>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSections*
  name: GetSections
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSections_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSections*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.GetSections
  nameWithType: RawFileInfo.GetSections
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName(string)
  name: 'override member GetSectionsByName: string -> seq<Section>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_string_
  commentId: M:B2R2.BinFile.RawFileInfo.GetSectionsByName(System.String)
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetSectionsByName: string -> seq<B2R2.BinFile.Section>'
  nameWithType: 'override member RawFileInfo.GetSectionsByName: string -> seq<Section>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  name: GetSectionsByName
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSectionsByName_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSectionsByName*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.GetSectionsByName
  nameWithType: RawFileInfo.GetSectionsByName
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSegments(unit)
  name: 'override member GetSegments: unit -> seq<Segment>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSegments_unit_
  commentId: M:B2R2.BinFile.RawFileInfo.GetSegments
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetSegments: unit -> seq<B2R2.BinFile.Segment>'
  nameWithType: 'override member RawFileInfo.GetSegments: unit -> seq<Segment>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  name: GetSegments
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSegments_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSegments*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.GetSegments
  nameWithType: RawFileInfo.GetSegments
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols(unit)
  name: 'override member GetStaticSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_unit_
  commentId: M:B2R2.BinFile.RawFileInfo.GetStaticSymbols
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetStaticSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member RawFileInfo.GetStaticSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  name: GetStaticSymbols
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetStaticSymbols_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetStaticSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.GetStaticSymbols
  nameWithType: RawFileInfo.GetStaticSymbols
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSymbols(unit)
  name: 'override member GetSymbols: unit -> seq<Symbol>'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSymbols_unit_
  commentId: M:B2R2.BinFile.RawFileInfo.GetSymbols
  fullName: 'override member B2R2.BinFile.RawFileInfo.GetSymbols: unit -> seq<B2R2.BinFile.Symbol>'
  nameWithType: 'override member RawFileInfo.GetSymbols: unit -> seq<Symbol>'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  name: GetSymbols
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_GetSymbols_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.GetSymbols*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.GetSymbols
  nameWithType: RawFileInfo.GetSymbols
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.IsStripped(unit)
  name: 'override property IsStripped: bool'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_IsStripped_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.IsStripped
  fullName: 'override property B2R2.BinFile.RawFileInfo.IsStripped: bool'
  nameWithType: 'override property RawFileInfo.IsStripped: bool'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  name: IsStripped
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_IsStripped_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.IsStripped*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.IsStripped
  nameWithType: RawFileInfo.IsStripped
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.IsValidAddr(B2R2.Addr)
  name: 'override member IsValidAddr: Addr -> bool'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_B2R2_Addr_
  commentId: M:B2R2.BinFile.RawFileInfo.IsValidAddr(System.UInt64)
  fullName: 'override member B2R2.BinFile.RawFileInfo.IsValidAddr: B2R2.Addr -> bool'
  nameWithType: 'override member RawFileInfo.IsValidAddr: Addr -> bool'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  name: IsValidAddr
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_IsValidAddr_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.IsValidAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.IsValidAddr
  nameWithType: RawFileInfo.IsValidAddr
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.NXEnabled(unit)
  name: 'override property NXEnabled: bool'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_NXEnabled_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.NXEnabled
  fullName: 'override property B2R2.BinFile.RawFileInfo.NXEnabled: bool'
  nameWithType: 'override property RawFileInfo.NXEnabled: bool'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  name: NXEnabled
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_NXEnabled_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.NXEnabled*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.NXEnabled
  nameWithType: RawFileInfo.NXEnabled
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TextStartAddr(unit)
  name: 'override property TextStartAddr: Addr'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.TextStartAddr
  fullName: 'override property B2R2.BinFile.RawFileInfo.TextStartAddr: B2R2.Addr'
  nameWithType: 'override property RawFileInfo.TextStartAddr: Addr'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  name: TextStartAddr
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_TextStartAddr_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TextStartAddr*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.TextStartAddr
  nameWithType: RawFileInfo.TextStartAddr
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TranslateAddress(B2R2.Addr)
  name: 'override member TranslateAddress: Addr -> int'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_B2R2_Addr_
  commentId: M:B2R2.BinFile.RawFileInfo.TranslateAddress(System.UInt64)
  fullName: 'override member B2R2.BinFile.RawFileInfo.TranslateAddress: B2R2.Addr -> int'
  nameWithType: 'override member RawFileInfo.TranslateAddress: Addr -> int'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  name: TranslateAddress
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_TranslateAddress_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TranslateAddress*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.TranslateAddress
  nameWithType: RawFileInfo.TranslateAddress
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName(B2R2.Addr * string byref)
  name: 'override member TryFindFunctionSymbolName: Addr * string byref -> bool'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_B2R2_Addr___string_byref_
  commentId: M:B2R2.BinFile.RawFileInfo.TryFindFunctionSymbolName(System.UInt64,System.String@)
  fullName: 'override member B2R2.BinFile.RawFileInfo.TryFindFunctionSymbolName: B2R2.Addr * string byref -> bool'
  nameWithType: 'override member RawFileInfo.TryFindFunctionSymbolName: Addr * string byref -> bool'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  name: TryFindFunctionSymbolName
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_TryFindFunctionSymbolName_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.TryFindFunctionSymbolName*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.TryFindFunctionSymbolName
  nameWithType: RawFileInfo.TryFindFunctionSymbolName
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.WordSize(unit)
  name: 'override property WordSize: WordSize'
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_WordSize_unit_
  commentId: P:B2R2.BinFile.RawFileInfo.WordSize
  fullName: 'override property B2R2.BinFile.RawFileInfo.WordSize: B2R2.WordSize'
  nameWithType: 'override property RawFileInfo.WordSize: WordSize'
- uid: B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.WordSize*
  name: WordSize
  href: api/B2R2.BinFile.RawFileInfo.html#B2R2_BinFile_RawFileInfo_B2R2_BinFile_FileInfo_WordSize_
  commentId: Overload:B2R2.BinFile.RawFileInfo.B2R2.BinFile.FileInfo.WordSize*
  isSpec: "True"
  fullName: B2R2.BinFile.RawFileInfo.WordSize
  nameWithType: RawFileInfo.WordSize
- uid: B2R2.BinFile.Section
  name: Section (rec)
  href: api/B2R2.BinFile.Section.html
  commentId: T:B2R2.BinFile.Section
  fullName: B2R2.BinFile.Section
  nameWithType: B2R2.BinFile.Section
- uid: B2R2.BinFile.Section.Address
  name: 'val Address: Addr'
  href: api/B2R2.BinFile.Section.html#B2R2_BinFile_Section_Address
  commentId: P:B2R2.BinFile.Section.Address
  fullName: 'val B2R2.BinFile.Section.Address: B2R2.Addr'
  nameWithType: 'val Section.Address: Addr'
- uid: B2R2.BinFile.Section.Kind
  name: 'val Kind: SectionKind'
  href: api/B2R2.BinFile.Section.html#B2R2_BinFile_Section_Kind
  commentId: P:B2R2.BinFile.Section.Kind
  fullName: 'val B2R2.BinFile.Section.Kind: B2R2.BinFile.SectionKind'
  nameWithType: 'val Section.Kind: SectionKind'
- uid: B2R2.BinFile.Section.Name
  name: 'val Name: string'
  href: api/B2R2.BinFile.Section.html#B2R2_BinFile_Section_Name
  commentId: P:B2R2.BinFile.Section.Name
  fullName: 'val B2R2.BinFile.Section.Name: string'
  nameWithType: 'val Section.Name: string'
- uid: B2R2.BinFile.Section.Size
  name: 'val Size: uint64'
  href: api/B2R2.BinFile.Section.html#B2R2_BinFile_Section_Size
  commentId: P:B2R2.BinFile.Section.Size
  fullName: 'val B2R2.BinFile.Section.Size: uint64'
  nameWithType: 'val Section.Size: uint64'
- uid: B2R2.BinFile.Section.ToAddrRange(unit)
  name: 'member ToAddrRange: unit -> AddrRange'
  href: api/B2R2.BinFile.Section.html#B2R2_BinFile_Section_ToAddrRange_unit_
  commentId: M:B2R2.BinFile.Section.ToAddrRange
  fullName: 'member B2R2.BinFile.Section.ToAddrRange: unit -> B2R2.AddrRange'
  nameWithType: 'member Section.ToAddrRange: unit -> AddrRange'
- uid: B2R2.BinFile.Section.ToAddrRange*
  name: ToAddrRange
  href: api/B2R2.BinFile.Section.html#B2R2_BinFile_Section_ToAddrRange_
  commentId: Overload:B2R2.BinFile.Section.ToAddrRange*
  isSpec: "True"
  fullName: B2R2.BinFile.Section.ToAddrRange
  nameWithType: Section.ToAddrRange
- uid: B2R2.BinFile.SectionKind
  name: SectionKind
  href: api/B2R2.BinFile.SectionKind.html
  commentId: T:B2R2.BinFile.SectionKind
  fullName: B2R2.BinFile.SectionKind
  nameWithType: B2R2.BinFile.SectionKind
- uid: B2R2.BinFile.SectionKind.ExecutableSection
  name: 'val ExecutableSection: SectionKind'
  href: api/B2R2.BinFile.SectionKind.html#B2R2_BinFile_SectionKind_ExecutableSection
  commentId: P:B2R2.BinFile.SectionKind.ExecutableSection
  fullName: 'val B2R2.BinFile.SectionKind.ExecutableSection: B2R2.BinFile.SectionKind'
  nameWithType: 'val SectionKind.ExecutableSection: SectionKind'
- uid: B2R2.BinFile.SectionKind.ExtraSection
  name: 'val ExtraSection: SectionKind'
  href: api/B2R2.BinFile.SectionKind.html#B2R2_BinFile_SectionKind_ExtraSection
  commentId: P:B2R2.BinFile.SectionKind.ExtraSection
  fullName: 'val B2R2.BinFile.SectionKind.ExtraSection: B2R2.BinFile.SectionKind'
  nameWithType: 'val SectionKind.ExtraSection: SectionKind'
- uid: B2R2.BinFile.SectionKind.LinkageTableSection
  name: 'val LinkageTableSection: SectionKind'
  href: api/B2R2.BinFile.SectionKind.html#B2R2_BinFile_SectionKind_LinkageTableSection
  commentId: P:B2R2.BinFile.SectionKind.LinkageTableSection
  fullName: 'val B2R2.BinFile.SectionKind.LinkageTableSection: B2R2.BinFile.SectionKind'
  nameWithType: 'val SectionKind.LinkageTableSection: SectionKind'
- uid: B2R2.BinFile.SectionKind.WritableSection
  name: 'val WritableSection: SectionKind'
  href: api/B2R2.BinFile.SectionKind.html#B2R2_BinFile_SectionKind_WritableSection
  commentId: P:B2R2.BinFile.SectionKind.WritableSection
  fullName: 'val B2R2.BinFile.SectionKind.WritableSection: B2R2.BinFile.SectionKind'
  nameWithType: 'val SectionKind.WritableSection: SectionKind'
- uid: B2R2.BinFile.Segment
  name: Segment (rec)
  href: api/B2R2.BinFile.Segment.html
  commentId: T:B2R2.BinFile.Segment
  fullName: B2R2.BinFile.Segment
  nameWithType: B2R2.BinFile.Segment
- uid: B2R2.BinFile.Segment.Address
  name: 'val Address: Addr'
  href: api/B2R2.BinFile.Segment.html#B2R2_BinFile_Segment_Address
  commentId: P:B2R2.BinFile.Segment.Address
  fullName: 'val B2R2.BinFile.Segment.Address: B2R2.Addr'
  nameWithType: 'val Segment.Address: Addr'
- uid: B2R2.BinFile.Segment.Permission
  name: 'val Permission: Permission'
  href: api/B2R2.BinFile.Segment.html#B2R2_BinFile_Segment_Permission
  commentId: P:B2R2.BinFile.Segment.Permission
  fullName: 'val B2R2.BinFile.Segment.Permission: B2R2.BinFile.Permission'
  nameWithType: 'val Segment.Permission: Permission'
- uid: B2R2.BinFile.Segment.Size
  name: 'val Size: uint64'
  href: api/B2R2.BinFile.Segment.html#B2R2_BinFile_Segment_Size
  commentId: P:B2R2.BinFile.Segment.Size
  fullName: 'val B2R2.BinFile.Segment.Size: uint64'
  nameWithType: 'val Segment.Size: uint64'
- uid: B2R2.BinFile.Symbol
  name: Symbol (rec)
  href: api/B2R2.BinFile.Symbol.html
  commentId: T:B2R2.BinFile.Symbol
  fullName: B2R2.BinFile.Symbol
  nameWithType: B2R2.BinFile.Symbol
- uid: B2R2.BinFile.Symbol.Address
  name: 'val Address: Addr'
  href: api/B2R2.BinFile.Symbol.html#B2R2_BinFile_Symbol_Address
  commentId: P:B2R2.BinFile.Symbol.Address
  fullName: 'val B2R2.BinFile.Symbol.Address: B2R2.Addr'
  nameWithType: 'val Symbol.Address: Addr'
- uid: B2R2.BinFile.Symbol.Kind
  name: 'val Kind: SymbolKind'
  href: api/B2R2.BinFile.Symbol.html#B2R2_BinFile_Symbol_Kind
  commentId: P:B2R2.BinFile.Symbol.Kind
  fullName: 'val B2R2.BinFile.Symbol.Kind: B2R2.BinFile.SymbolKind'
  nameWithType: 'val Symbol.Kind: SymbolKind'
- uid: B2R2.BinFile.Symbol.LibraryName
  name: 'val LibraryName: string'
  href: api/B2R2.BinFile.Symbol.html#B2R2_BinFile_Symbol_LibraryName
  commentId: P:B2R2.BinFile.Symbol.LibraryName
  fullName: 'val B2R2.BinFile.Symbol.LibraryName: string'
  nameWithType: 'val Symbol.LibraryName: string'
- uid: B2R2.BinFile.Symbol.Name
  name: 'val Name: string'
  href: api/B2R2.BinFile.Symbol.html#B2R2_BinFile_Symbol_Name
  commentId: P:B2R2.BinFile.Symbol.Name
  fullName: 'val B2R2.BinFile.Symbol.Name: string'
  nameWithType: 'val Symbol.Name: string'
- uid: B2R2.BinFile.Symbol.Target
  name: 'val Target: TargetKind'
  href: api/B2R2.BinFile.Symbol.html#B2R2_BinFile_Symbol_Target
  commentId: P:B2R2.BinFile.Symbol.Target
  fullName: 'val B2R2.BinFile.Symbol.Target: B2R2.BinFile.TargetKind'
  nameWithType: 'val Symbol.Target: TargetKind'
- uid: B2R2.BinFile.SymbolKind
  name: SymbolKind
  href: api/B2R2.BinFile.SymbolKind.html
  commentId: T:B2R2.BinFile.SymbolKind
  fullName: B2R2.BinFile.SymbolKind
  nameWithType: B2R2.BinFile.SymbolKind
- uid: B2R2.BinFile.SymbolKind.ExternFunctionType
  name: 'val ExternFunctionType: SymbolKind'
  href: api/B2R2.BinFile.SymbolKind.html#B2R2_BinFile_SymbolKind_ExternFunctionType
  commentId: P:B2R2.BinFile.SymbolKind.ExternFunctionType
  fullName: 'val B2R2.BinFile.SymbolKind.ExternFunctionType: B2R2.BinFile.SymbolKind'
  nameWithType: 'val SymbolKind.ExternFunctionType: SymbolKind'
- uid: B2R2.BinFile.SymbolKind.FileType
  name: 'val FileType: SymbolKind'
  href: api/B2R2.BinFile.SymbolKind.html#B2R2_BinFile_SymbolKind_FileType
  commentId: P:B2R2.BinFile.SymbolKind.FileType
  fullName: 'val B2R2.BinFile.SymbolKind.FileType: B2R2.BinFile.SymbolKind'
  nameWithType: 'val SymbolKind.FileType: SymbolKind'
- uid: B2R2.BinFile.SymbolKind.FunctionType
  name: 'val FunctionType: SymbolKind'
  href: api/B2R2.BinFile.SymbolKind.html#B2R2_BinFile_SymbolKind_FunctionType
  commentId: P:B2R2.BinFile.SymbolKind.FunctionType
  fullName: 'val B2R2.BinFile.SymbolKind.FunctionType: B2R2.BinFile.SymbolKind'
  nameWithType: 'val SymbolKind.FunctionType: SymbolKind'
- uid: B2R2.BinFile.SymbolKind.NoType
  name: 'val NoType: SymbolKind'
  href: api/B2R2.BinFile.SymbolKind.html#B2R2_BinFile_SymbolKind_NoType
  commentId: P:B2R2.BinFile.SymbolKind.NoType
  fullName: 'val B2R2.BinFile.SymbolKind.NoType: B2R2.BinFile.SymbolKind'
  nameWithType: 'val SymbolKind.NoType: SymbolKind'
- uid: B2R2.BinFile.SymbolKind.ObjectType
  name: 'val ObjectType: SymbolKind'
  href: api/B2R2.BinFile.SymbolKind.html#B2R2_BinFile_SymbolKind_ObjectType
  commentId: P:B2R2.BinFile.SymbolKind.ObjectType
  fullName: 'val B2R2.BinFile.SymbolKind.ObjectType: B2R2.BinFile.SymbolKind'
  nameWithType: 'val SymbolKind.ObjectType: SymbolKind'
- uid: B2R2.BinFile.SymbolKind.SectionType
  name: 'val SectionType: SymbolKind'
  href: api/B2R2.BinFile.SymbolKind.html#B2R2_BinFile_SymbolKind_SectionType
  commentId: P:B2R2.BinFile.SymbolKind.SectionType
  fullName: 'val B2R2.BinFile.SymbolKind.SectionType: B2R2.BinFile.SymbolKind'
  nameWithType: 'val SymbolKind.SectionType: SymbolKind'
- uid: B2R2.BinFile.TargetKind
  name: TargetKind
  href: api/B2R2.BinFile.TargetKind.html
  commentId: T:B2R2.BinFile.TargetKind
  fullName: B2R2.BinFile.TargetKind
  nameWithType: B2R2.BinFile.TargetKind
- uid: B2R2.BinFile.TargetKind.DynamicSymbol
  name: 'val DynamicSymbol: TargetKind'
  href: api/B2R2.BinFile.TargetKind.html#B2R2_BinFile_TargetKind_DynamicSymbol
  commentId: P:B2R2.BinFile.TargetKind.DynamicSymbol
  fullName: 'val B2R2.BinFile.TargetKind.DynamicSymbol: B2R2.BinFile.TargetKind'
  nameWithType: 'val TargetKind.DynamicSymbol: TargetKind'
- uid: B2R2.BinFile.TargetKind.StaticSymbol
  name: 'val StaticSymbol: TargetKind'
  href: api/B2R2.BinFile.TargetKind.html#B2R2_BinFile_TargetKind_StaticSymbol
  commentId: P:B2R2.BinFile.TargetKind.StaticSymbol
  fullName: 'val B2R2.BinFile.TargetKind.StaticSymbol: B2R2.BinFile.TargetKind'
  nameWithType: 'val TargetKind.StaticSymbol: TargetKind'
- uid: B2R2.BinGraph
  name: B2R2.BinGraph
  href: api/B2R2.BinGraph.html
  commentId: N:B2R2.BinGraph
  fullName: B2R2.BinGraph
  nameWithType: B2R2.BinGraph
- uid: B2R2.BinGraph.Algorithms
  name: Algorithms (mod)
  href: api/B2R2.BinGraph.Algorithms.html
  commentId: T:B2R2.BinGraph.Algorithms
  fullName: B2R2.BinGraph.Algorithms
  nameWithType: B2R2.BinGraph.Algorithms
- uid: B2R2.BinGraph.Algorithms.kahnTopologicalSort(B2R2.BinGraph.SimpleDiGraph<'?31728,'?31729>)
  name: "val kahnTopologicalSort: SimpleDiGraph<'?31728,'?31729> -> '?31728 list"
  href: api/B2R2.BinGraph.Algorithms.html#B2R2_BinGraph_Algorithms_kahnTopologicalSort_B2R2_BinGraph_SimpleDiGraph___31728___31729__
  commentId: M:B2R2.BinGraph.kahnTopologicalSort``2(B2R2.BinGraph.SimpleDiGraph{``0,``1})
  fullName: "val B2R2.BinGraph.Algorithms.kahnTopologicalSort: B2R2.BinGraph.SimpleDiGraph<'?31728,'?31729> -> '?31728 list"
  nameWithType: "val Algorithms.kahnTopologicalSort: SimpleDiGraph<'?31728,'?31729> -> '?31728 list"
- uid: B2R2.BinGraph.Algorithms.kahnTopologicalSort*
  name: kahnTopologicalSort
  href: api/B2R2.BinGraph.Algorithms.html#B2R2_BinGraph_Algorithms_kahnTopologicalSort_
  commentId: Overload:B2R2.BinGraph.Algorithms.kahnTopologicalSort*
  isSpec: "True"
  fullName: B2R2.BinGraph.Algorithms.kahnTopologicalSort
  nameWithType: Algorithms.kahnTopologicalSort
- uid: B2R2.BinGraph.BinEssence
  name: BinEssence (rec)
  href: api/B2R2.BinGraph.BinEssence.html
  commentId: T:B2R2.BinGraph.BinEssence
  fullName: B2R2.BinGraph.BinEssence
  nameWithType: B2R2.BinGraph.BinEssence
- uid: B2R2.BinGraph.BinEssence.BinHandler
  name: 'val BinHandler: BinHandler'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_BinHandler
  commentId: P:B2R2.BinGraph.BinEssence.BinHandler
  fullName: 'val B2R2.BinGraph.BinEssence.BinHandler: B2R2.FrontEnd.BinHandler'
  nameWithType: 'val BinEssence.BinHandler: BinHandler'
- uid: B2R2.BinGraph.BinEssence.CFGBuilder
  name: 'val CFGBuilder: CFGBuilder'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_CFGBuilder
  commentId: P:B2R2.BinGraph.BinEssence.CFGBuilder
  fullName: 'val B2R2.BinGraph.BinEssence.CFGBuilder: B2R2.BinGraph.CFGBuilder'
  nameWithType: 'val BinEssence.CFGBuilder: CFGBuilder'
- uid: B2R2.BinGraph.BinEssence.DisasmVertexToDOT(B2R2.BinGraph.DisasmVertex)
  name: 'static member DisasmVertexToDOT: DisasmVertex -> string'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_DisasmVertexToDOT_B2R2_BinGraph_DisasmVertex_
  commentId: M:B2R2.BinGraph.BinEssence.DisasmVertexToDOT(B2R2.BinGraph.Vertex{B2R2.BinGraph.DisassemblyBBL})
  fullName: 'static member B2R2.BinGraph.BinEssence.DisasmVertexToDOT: B2R2.BinGraph.DisasmVertex -> string'
  nameWithType: 'static member BinEssence.DisasmVertexToDOT: DisasmVertex -> string'
- uid: B2R2.BinGraph.BinEssence.DisasmVertexToDOT*
  name: DisasmVertexToDOT
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_DisasmVertexToDOT_
  commentId: Overload:B2R2.BinGraph.BinEssence.DisasmVertexToDOT*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.DisasmVertexToDOT
  nameWithType: BinEssence.DisasmVertexToDOT
- uid: B2R2.BinGraph.BinEssence.EdgeToDOT(B2R2.BinGraph.Edge<'?31601>)
  name: "static member EdgeToDOT: Edge<'?31601> -> string"
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_EdgeToDOT_B2R2_BinGraph_Edge___31601__
  commentId: M:B2R2.BinGraph.BinEssence.EdgeToDOT``1(B2R2.BinGraph.Edge{``0})
  fullName: "static member B2R2.BinGraph.BinEssence.EdgeToDOT: B2R2.BinGraph.Edge<'?31601> -> string"
  nameWithType: "static member BinEssence.EdgeToDOT: Edge<'?31601> -> string"
- uid: B2R2.BinGraph.BinEssence.EdgeToDOT*
  name: EdgeToDOT
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_EdgeToDOT_
  commentId: Overload:B2R2.BinGraph.BinEssence.EdgeToDOT*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.EdgeToDOT
  nameWithType: BinEssence.EdgeToDOT
- uid: B2R2.BinGraph.BinEssence.FindFuncByEntry(B2R2.Addr -> B2R2.BinGraph.BinEssence)
  name: 'static member FindFuncByEntry: Addr -> BinEssence -> Function'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_FindFuncByEntry_B2R2_Addr____B2R2_BinGraph_BinEssence_
  commentId: M:B2R2.BinGraph.BinEssence.FindFuncByEntry(System.UInt64,B2R2.BinGraph.BinEssence)
  fullName: 'static member B2R2.BinGraph.BinEssence.FindFuncByEntry: B2R2.Addr -> B2R2.BinGraph.BinEssence -> B2R2.BinGraph.Function'
  nameWithType: 'static member BinEssence.FindFuncByEntry: Addr -> BinEssence -> Function'
- uid: B2R2.BinGraph.BinEssence.FindFuncByEntry*
  name: FindFuncByEntry
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_FindFuncByEntry_
  commentId: Overload:B2R2.BinGraph.BinEssence.FindFuncByEntry*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.FindFuncByEntry
  nameWithType: BinEssence.FindFuncByEntry
- uid: B2R2.BinGraph.BinEssence.Functions
  name: 'val Functions: Funcs'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_Functions
  commentId: P:B2R2.BinGraph.BinEssence.Functions
  fullName: 'val B2R2.BinGraph.BinEssence.Functions: B2R2.BinGraph.Funcs'
  nameWithType: 'val BinEssence.Functions: Funcs'
- uid: B2R2.BinGraph.BinEssence.Init('?31600 -> B2R2.FrontEnd.BinHandler)
  name: "static member Init: '?31600 -> BinHandler -> BinEssence"
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_Init___31600____B2R2_FrontEnd_BinHandler_
  commentId: M:B2R2.BinGraph.BinEssence.Init``1(``0,B2R2.FrontEnd.BinHandler)
  fullName: "static member B2R2.BinGraph.BinEssence.Init: '?31600 -> B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.BinEssence"
  nameWithType: "static member BinEssence.Init: '?31600 -> BinHandler -> BinEssence"
- uid: B2R2.BinGraph.BinEssence.Init*
  name: Init
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_Init_
  commentId: Overload:B2R2.BinGraph.BinEssence.Init*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.Init
  nameWithType: BinEssence.Init
- uid: B2R2.BinGraph.BinEssence.IrVertexToDOT(B2R2.BinGraph.IRVertex)
  name: 'static member IrVertexToDOT: IRVertex -> string'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_IrVertexToDOT_B2R2_BinGraph_IRVertex_
  commentId: M:B2R2.BinGraph.BinEssence.IrVertexToDOT(B2R2.BinGraph.Vertex{B2R2.BinGraph.IRBBL})
  fullName: 'static member B2R2.BinGraph.BinEssence.IrVertexToDOT: B2R2.BinGraph.IRVertex -> string'
  nameWithType: 'static member BinEssence.IrVertexToDOT: IRVertex -> string'
- uid: B2R2.BinGraph.BinEssence.IrVertexToDOT*
  name: IrVertexToDOT
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_IrVertexToDOT_
  commentId: Overload:B2R2.BinGraph.BinEssence.IrVertexToDOT*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.IrVertexToDOT
  nameWithType: BinEssence.IrVertexToDOT
- uid: B2R2.BinGraph.BinEssence.ShowDisasmDOT(string -> B2R2.BinGraph.CFG<B2R2.BinGraph.DisassemblyBBL>)
  name: 'static member ShowDisasmDOT: string -> CFG<DisassemblyBBL> -> unit'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_ShowDisasmDOT_string____B2R2_BinGraph_CFG_B2R2_BinGraph_DisassemblyBBL__
  commentId: M:B2R2.BinGraph.BinEssence.ShowDisasmDOT(System.String,B2R2.BinGraph.DiGraph{B2R2.BinGraph.DisassemblyBBL,B2R2.BinGraph.CFGEdge})
  fullName: 'static member B2R2.BinGraph.BinEssence.ShowDisasmDOT: string -> B2R2.BinGraph.CFG<B2R2.BinGraph.DisassemblyBBL> -> unit'
  nameWithType: 'static member BinEssence.ShowDisasmDOT: string -> CFG<DisassemblyBBL> -> unit'
- uid: B2R2.BinGraph.BinEssence.ShowDisasmDOT*
  name: ShowDisasmDOT
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_ShowDisasmDOT_
  commentId: Overload:B2R2.BinGraph.BinEssence.ShowDisasmDOT*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.ShowDisasmDOT
  nameWithType: BinEssence.ShowDisasmDOT
- uid: B2R2.BinGraph.BinEssence.ShowDot(B2R2.BinGraph.BinEssence)
  name: 'static member ShowDot: BinEssence -> unit'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_ShowDot_B2R2_BinGraph_BinEssence_
  commentId: M:B2R2.BinGraph.BinEssence.ShowDot(B2R2.BinGraph.BinEssence)
  fullName: 'static member B2R2.BinGraph.BinEssence.ShowDot: B2R2.BinGraph.BinEssence -> unit'
  nameWithType: 'static member BinEssence.ShowDot: BinEssence -> unit'
- uid: B2R2.BinGraph.BinEssence.ShowDot*
  name: ShowDot
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_ShowDot_
  commentId: Overload:B2R2.BinGraph.BinEssence.ShowDot*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.ShowDot
  nameWithType: BinEssence.ShowDot
- uid: B2R2.BinGraph.BinEssence.ShowIRDOT(string -> B2R2.BinGraph.CFG<B2R2.BinGraph.IRBBL>)
  name: 'static member ShowIRDOT: string -> CFG<IRBBL> -> unit'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_ShowIRDOT_string____B2R2_BinGraph_CFG_B2R2_BinGraph_IRBBL__
  commentId: M:B2R2.BinGraph.BinEssence.ShowIRDOT(System.String,B2R2.BinGraph.DiGraph{B2R2.BinGraph.IRBBL,B2R2.BinGraph.CFGEdge})
  fullName: 'static member B2R2.BinGraph.BinEssence.ShowIRDOT: string -> B2R2.BinGraph.CFG<B2R2.BinGraph.IRBBL> -> unit'
  nameWithType: 'static member BinEssence.ShowIRDOT: string -> CFG<IRBBL> -> unit'
- uid: B2R2.BinGraph.BinEssence.ShowIRDOT*
  name: ShowIRDOT
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_ShowIRDOT_
  commentId: Overload:B2R2.BinGraph.BinEssence.ShowIRDOT*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.ShowIRDOT
  nameWithType: BinEssence.ShowIRDOT
- uid: B2R2.BinGraph.BinEssence.TryFindFuncByEntry(B2R2.Addr -> B2R2.BinGraph.BinEssence)
  name: 'static member TryFindFuncByEntry: Addr -> BinEssence -> Function option'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_TryFindFuncByEntry_B2R2_Addr____B2R2_BinGraph_BinEssence_
  commentId: M:B2R2.BinGraph.BinEssence.TryFindFuncByEntry(System.UInt64,B2R2.BinGraph.BinEssence)
  fullName: 'static member B2R2.BinGraph.BinEssence.TryFindFuncByEntry: B2R2.Addr -> B2R2.BinGraph.BinEssence -> B2R2.BinGraph.Function option'
  nameWithType: 'static member BinEssence.TryFindFuncByEntry: Addr -> BinEssence -> Function option'
- uid: B2R2.BinGraph.BinEssence.TryFindFuncByEntry*
  name: TryFindFuncByEntry
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_TryFindFuncByEntry_
  commentId: Overload:B2R2.BinGraph.BinEssence.TryFindFuncByEntry*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.TryFindFuncByEntry
  nameWithType: BinEssence.TryFindFuncByEntry
- uid: B2R2.BinGraph.BinEssence.TryFindFuncByName(string -> B2R2.BinGraph.BinEssence)
  name: 'static member TryFindFuncByName: string -> BinEssence -> Function option'
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_TryFindFuncByName_string____B2R2_BinGraph_BinEssence_
  commentId: M:B2R2.BinGraph.BinEssence.TryFindFuncByName(System.String,B2R2.BinGraph.BinEssence)
  fullName: 'static member B2R2.BinGraph.BinEssence.TryFindFuncByName: string -> B2R2.BinGraph.BinEssence -> B2R2.BinGraph.Function option'
  nameWithType: 'static member BinEssence.TryFindFuncByName: string -> BinEssence -> Function option'
- uid: B2R2.BinGraph.BinEssence.TryFindFuncByName*
  name: TryFindFuncByName
  href: api/B2R2.BinGraph.BinEssence.html#B2R2_BinGraph_BinEssence_TryFindFuncByName_
  commentId: Overload:B2R2.BinGraph.BinEssence.TryFindFuncByName*
  isSpec: "True"
  fullName: B2R2.BinGraph.BinEssence.TryFindFuncByName
  nameWithType: BinEssence.TryFindFuncByName
- uid: B2R2.BinGraph.Boundary
  name: Boundary (mod)
  href: api/B2R2.BinGraph.Boundary.html
  commentId: T:B2R2.BinGraph.Boundary
  fullName: B2R2.BinGraph.Boundary
  nameWithType: B2R2.BinGraph.Boundary
- uid: B2R2.BinGraph.Boundary.addBranchTarget(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28994 -> B2R2.Addr list -> B2R2.FrontEnd.Instruction -> bool)
  name: "val addBranchTarget: BinHandler -> CFGBuilder -> '?28994 -> Addr list -> Instruction -> bool -> CFGBuilder * '?28994 * Addr list"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_addBranchTarget_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______28994____B2R2_Addr_list____B2R2_FrontEnd_Instruction____bool_
  commentId: M:B2R2.BinGraph.addBranchTarget``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0,Microsoft.FSharp.Collections.FSharpList{System.UInt64},B2R2.FrontEnd.Instruction,System.Boolean)
  fullName: "val B2R2.BinGraph.Boundary.addBranchTarget: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28994 -> B2R2.Addr list -> B2R2.FrontEnd.Instruction -> bool -> B2R2.BinGraph.CFGBuilder * '?28994 * B2R2.Addr list"
  nameWithType: "val Boundary.addBranchTarget: BinHandler -> CFGBuilder -> '?28994 -> Addr list -> Instruction -> bool -> CFGBuilder * '?28994 * Addr list"
- uid: B2R2.BinGraph.Boundary.addBranchTarget*
  name: addBranchTarget
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_addBranchTarget_
  commentId: Overload:B2R2.BinGraph.Boundary.addBranchTarget*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.addBranchTarget
  nameWithType: Boundary.addBranchTarget
- uid: B2R2.BinGraph.Boundary.checkDummyLeader(unit)
  name: 'val checkDummyLeader: unit -> bool'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_checkDummyLeader_unit_
  commentId: M:B2R2.BinGraph.checkDummyLeader
  fullName: 'val B2R2.BinGraph.Boundary.checkDummyLeader: unit -> bool'
  nameWithType: 'val Boundary.checkDummyLeader: unit -> bool'
- uid: B2R2.BinGraph.Boundary.checkDummyLeader*
  name: checkDummyLeader
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_checkDummyLeader_
  commentId: Overload:B2R2.BinGraph.Boundary.checkDummyLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.checkDummyLeader
  nameWithType: Boundary.checkDummyLeader
- uid: B2R2.BinGraph.Boundary.collectEntry(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28995 -> B2R2.Addr list -> B2R2.FrontEnd.Instruction)
  name: "val collectEntry: BinHandler -> CFGBuilder -> '?28995 -> Addr list -> Instruction -> CFGBuilder * '?28995 * Addr list"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_collectEntry_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______28995____B2R2_Addr_list____B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.collectEntry``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0,Microsoft.FSharp.Collections.FSharpList{System.UInt64},B2R2.FrontEnd.Instruction)
  fullName: "val B2R2.BinGraph.Boundary.collectEntry: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28995 -> B2R2.Addr list -> B2R2.FrontEnd.Instruction -> B2R2.BinGraph.CFGBuilder * '?28995 * B2R2.Addr list"
  nameWithType: "val Boundary.collectEntry: BinHandler -> CFGBuilder -> '?28995 -> Addr list -> Instruction -> CFGBuilder * '?28995 * Addr list"
- uid: B2R2.BinGraph.Boundary.collectEntry*
  name: collectEntry
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_collectEntry_
  commentId: Overload:B2R2.BinGraph.Boundary.collectEntry*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.collectEntry
  nameWithType: Boundary.collectEntry
- uid: B2R2.BinGraph.Boundary.findDisasmLeaders(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?29000 -> B2R2.Addr list)
  name: "val findDisasmLeaders: BinHandler -> CFGBuilder -> '?29000 -> Addr list -> CFGBuilder * '?29000"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_findDisasmLeaders_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______29000____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.findDisasmLeaders``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0,Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: "val B2R2.BinGraph.Boundary.findDisasmLeaders: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?29000 -> B2R2.Addr list -> B2R2.BinGraph.CFGBuilder * '?29000"
  nameWithType: "val Boundary.findDisasmLeaders: BinHandler -> CFGBuilder -> '?29000 -> Addr list -> CFGBuilder * '?29000"
- uid: B2R2.BinGraph.Boundary.findDisasmLeaders*
  name: findDisasmLeaders
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_findDisasmLeaders_
  commentId: Overload:B2R2.BinGraph.Boundary.findDisasmLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.findDisasmLeaders
  nameWithType: Boundary.findDisasmLeaders
- uid: B2R2.BinGraph.Boundary.findEntriesByPattern('?28991 -> '?28992 -> '?28993)
  name: "val findEntriesByPattern: '?28991 -> '?28992 -> '?28993 -> '?28992 * '?28993"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_findEntriesByPattern___28991______28992______28993_
  commentId: M:B2R2.BinGraph.findEntriesByPattern``3(``0,``1,``2)
  fullName: "val B2R2.BinGraph.Boundary.findEntriesByPattern: '?28991 -> '?28992 -> '?28993 -> '?28992 * '?28993"
  nameWithType: "val Boundary.findEntriesByPattern: '?28991 -> '?28992 -> '?28993 -> '?28992 * '?28993"
- uid: B2R2.BinGraph.Boundary.findEntriesByPattern*
  name: findEntriesByPattern
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_findEntriesByPattern_
  commentId: Overload:B2R2.BinGraph.Boundary.findEntriesByPattern*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.findEntriesByPattern
  nameWithType: Boundary.findEntriesByPattern
- uid: B2R2.BinGraph.Boundary.findIRLeaders(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.Addr list)
  name: 'val findIRLeaders: BinHandler -> CFGBuilder -> Addr list -> CFGBuilder'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_findIRLeaders_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.findIRLeaders(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: 'val B2R2.BinGraph.Boundary.findIRLeaders: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.Addr list -> B2R2.BinGraph.CFGBuilder'
  nameWithType: 'val Boundary.findIRLeaders: BinHandler -> CFGBuilder -> Addr list -> CFGBuilder'
- uid: B2R2.BinGraph.Boundary.findIRLeaders*
  name: findIRLeaders
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_findIRLeaders_
  commentId: Overload:B2R2.BinGraph.Boundary.findIRLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.findIRLeaders
  nameWithType: Boundary.findIRLeaders
- uid: B2R2.BinGraph.Boundary.getInitialEntries(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28990)
  name: "val getInitialEntries: BinHandler -> CFGBuilder -> '?28990 -> CFGBuilder * '?28990"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_getInitialEntries_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______28990_
  commentId: M:B2R2.BinGraph.getInitialEntries``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0)
  fullName: "val B2R2.BinGraph.Boundary.getInitialEntries: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28990 -> B2R2.BinGraph.CFGBuilder * '?28990"
  nameWithType: "val Boundary.getInitialEntries: BinHandler -> CFGBuilder -> '?28990 -> CFGBuilder * '?28990"
- uid: B2R2.BinGraph.Boundary.getInitialEntries*
  name: getInitialEntries
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_getInitialEntries_
  commentId: Overload:B2R2.BinGraph.Boundary.getInitialEntries*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.getInitialEntries
  nameWithType: Boundary.getInitialEntries
- uid: B2R2.BinGraph.Boundary.givePPointToStmt(B2R2.BinIR.LowUIR.Stmt list)
  name: 'val givePPointToStmt: Stmt list -> Addr * int * Stmt list'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_givePPointToStmt_B2R2_BinIR_LowUIR_Stmt_list_
  commentId: M:B2R2.BinGraph.givePPointToStmt(Microsoft.FSharp.Collections.FSharpList{B2R2.BinIR.LowUIR.Stmt})
  fullName: 'val B2R2.BinGraph.Boundary.givePPointToStmt: B2R2.BinIR.LowUIR.Stmt list -> B2R2.Addr * int * B2R2.BinIR.LowUIR.Stmt list'
  nameWithType: 'val Boundary.givePPointToStmt: Stmt list -> Addr * int * Stmt list'
- uid: B2R2.BinGraph.Boundary.givePPointToStmt*
  name: givePPointToStmt
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_givePPointToStmt_
  commentId: Overload:B2R2.BinGraph.Boundary.givePPointToStmt*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.givePPointToStmt
  nameWithType: Boundary.givePPointToStmt
- uid: B2R2.BinGraph.Boundary.givePPointToStmtFold(B2R2.Addr * int * B2R2.Addr * int * B2R2.BinIR.LowUIR.Stmt list -> B2R2.BinIR.LowUIR.Stmt)
  name: 'val givePPointToStmtFold: Addr * int * Addr * int * Stmt list -> Stmt -> Addr * int * Addr * int * Stmt list'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_givePPointToStmtFold_B2R2_Addr___int___B2R2_Addr___int___B2R2_BinIR_LowUIR_Stmt_list____B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinGraph.givePPointToStmtFold(System.UInt64,System.Int32,Microsoft.FSharp.Collections.FSharpList{System.Tuple{System.Tuple{System.UInt64,System.Int32},B2R2.BinIR.LowUIR.Stmt}},B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinGraph.Boundary.givePPointToStmtFold: B2R2.Addr * int * B2R2.Addr * int * B2R2.BinIR.LowUIR.Stmt list -> B2R2.BinIR.LowUIR.Stmt -> B2R2.Addr * int * B2R2.Addr * int * B2R2.BinIR.LowUIR.Stmt list'
  nameWithType: 'val Boundary.givePPointToStmtFold: Addr * int * Addr * int * Stmt list -> Stmt -> Addr * int * Addr * int * Stmt list'
- uid: B2R2.BinGraph.Boundary.givePPointToStmtFold*
  name: givePPointToStmtFold
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_givePPointToStmtFold_
  commentId: Overload:B2R2.BinGraph.Boundary.givePPointToStmtFold*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.givePPointToStmtFold
  nameWithType: Boundary.givePPointToStmtFold
- uid: B2R2.BinGraph.Boundary.identifyBoundaries(B2R2.FrontEnd.BinHandler -> 'b option -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.Funcs)
  name: "val identifyBoundaries: BinHandler -> 'b option -> CFGBuilder -> Funcs -> CFGBuilder * Funcs"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_identifyBoundaries_B2R2_FrontEnd_BinHandler_____b_option____B2R2_BinGraph_CFGBuilder____B2R2_BinGraph_Funcs_
  commentId: M:B2R2.BinGraph.identifyBoundaries``1(B2R2.FrontEnd.BinHandler,Microsoft.FSharp.Core.FSharpOption{``0},B2R2.BinGraph.CFGBuilder,System.Collections.Generic.Dictionary{System.UInt64,B2R2.BinGraph.Function})
  fullName: "val B2R2.BinGraph.Boundary.identifyBoundaries: B2R2.FrontEnd.BinHandler -> 'b option -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.Funcs -> B2R2.BinGraph.CFGBuilder * B2R2.BinGraph.Funcs"
  nameWithType: "val Boundary.identifyBoundaries: BinHandler -> 'b option -> CFGBuilder -> Funcs -> CFGBuilder * Funcs"
- uid: B2R2.BinGraph.Boundary.identifyBoundaries*
  name: identifyBoundaries
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_identifyBoundaries_
  commentId: Overload:B2R2.BinGraph.Boundary.identifyBoundaries*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.identifyBoundaries
  nameWithType: Boundary.identifyBoundaries
- uid: B2R2.BinGraph.Boundary.identifyDisasmBoundary(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.Funcs)
  name: 'val identifyDisasmBoundary: BinHandler -> CFGBuilder -> Funcs -> CFGBuilder * Funcs'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_identifyDisasmBoundary_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_BinGraph_Funcs_
  commentId: M:B2R2.BinGraph.identifyDisasmBoundary(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,System.Collections.Generic.Dictionary{System.UInt64,B2R2.BinGraph.Function})
  fullName: 'val B2R2.BinGraph.Boundary.identifyDisasmBoundary: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.Funcs -> B2R2.BinGraph.CFGBuilder * B2R2.BinGraph.Funcs'
  nameWithType: 'val Boundary.identifyDisasmBoundary: BinHandler -> CFGBuilder -> Funcs -> CFGBuilder * Funcs'
- uid: B2R2.BinGraph.Boundary.identifyDisasmBoundary*
  name: identifyDisasmBoundary
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_identifyDisasmBoundary_
  commentId: Overload:B2R2.BinGraph.Boundary.identifyDisasmBoundary*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.identifyDisasmBoundary
  nameWithType: Boundary.identifyDisasmBoundary
- uid: B2R2.BinGraph.Boundary.identifyIRBoundary(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?29002)
  name: "val identifyIRBoundary: BinHandler -> CFGBuilder -> '?29002 -> CFGBuilder * '?29002"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_identifyIRBoundary_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______29002_
  commentId: M:B2R2.BinGraph.identifyIRBoundary``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0)
  fullName: "val B2R2.BinGraph.Boundary.identifyIRBoundary: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?29002 -> B2R2.BinGraph.CFGBuilder * '?29002"
  nameWithType: "val Boundary.identifyIRBoundary: BinHandler -> CFGBuilder -> '?29002 -> CFGBuilder * '?29002"
- uid: B2R2.BinGraph.Boundary.identifyIRBoundary*
  name: identifyIRBoundary
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_identifyIRBoundary_
  commentId: Overload:B2R2.BinGraph.Boundary.identifyIRBoundary*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.identifyIRBoundary
  nameWithType: Boundary.identifyIRBoundary
- uid: B2R2.BinGraph.Boundary.initFunction(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.Funcs -> B2R2.Addr)
  name: 'val initFunction: BinHandler -> Funcs -> Addr -> unit'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_initFunction_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_Funcs____B2R2_Addr_
  commentId: M:B2R2.BinGraph.initFunction(B2R2.FrontEnd.BinHandler,System.Collections.Generic.Dictionary{System.UInt64,B2R2.BinGraph.Function},System.UInt64)
  fullName: 'val B2R2.BinGraph.Boundary.initFunction: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.Funcs -> B2R2.Addr -> unit'
  nameWithType: 'val Boundary.initFunction: BinHandler -> Funcs -> Addr -> unit'
- uid: B2R2.BinGraph.Boundary.initFunction*
  name: initFunction
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_initFunction_
  commentId: Overload:B2R2.BinGraph.Boundary.initFunction*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.initFunction
  nameWithType: Boundary.initFunction
- uid: B2R2.BinGraph.Boundary.isExit(B2R2.FrontEnd.BinHandler -> B2R2.FrontEnd.Instruction)
  name: 'val isExit: BinHandler -> Instruction -> bool'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_isExit_B2R2_FrontEnd_BinHandler____B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.isExit(B2R2.FrontEnd.BinHandler,B2R2.FrontEnd.Instruction)
  fullName: 'val B2R2.BinGraph.Boundary.isExit: B2R2.FrontEnd.BinHandler -> B2R2.FrontEnd.Instruction -> bool'
  nameWithType: 'val Boundary.isExit: BinHandler -> Instruction -> bool'
- uid: B2R2.BinGraph.Boundary.isExit*
  name: isExit
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_isExit_
  commentId: Overload:B2R2.BinGraph.Boundary.isExit*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.isExit
  nameWithType: Boundary.isExit
- uid: B2R2.BinGraph.Boundary.isExitCall(B2R2.FrontEnd.BinHandler -> B2R2.FrontEnd.Instruction)
  name: 'val isExitCall: BinHandler -> Instruction -> bool'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_isExitCall_B2R2_FrontEnd_BinHandler____B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.isExitCall(B2R2.FrontEnd.BinHandler,B2R2.FrontEnd.Instruction)
  fullName: 'val B2R2.BinGraph.Boundary.isExitCall: B2R2.FrontEnd.BinHandler -> B2R2.FrontEnd.Instruction -> bool'
  nameWithType: 'val Boundary.isExitCall: BinHandler -> Instruction -> bool'
- uid: B2R2.BinGraph.Boundary.isExitCall*
  name: isExitCall
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_isExitCall_
  commentId: Overload:B2R2.BinGraph.Boundary.isExitCall*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.isExitCall
  nameWithType: Boundary.isExitCall
- uid: B2R2.BinGraph.Boundary.isInnerLeader('?29001 * '?29001 -> '?29001)
  name: "val isInnerLeader: '?29001 * '?29001 -> '?29001 -> bool"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_isInnerLeader___29001_____29001______29001_
  commentId: M:B2R2.BinGraph.isInnerLeader``1(``0,``0,``0)
  fullName: "val B2R2.BinGraph.Boundary.isInnerLeader: '?29001 * '?29001 -> '?29001 -> bool"
  nameWithType: "val Boundary.isInnerLeader: '?29001 * '?29001 -> '?29001 -> bool"
- uid: B2R2.BinGraph.Boundary.isInnerLeader*
  name: isInnerLeader
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_isInnerLeader_
  commentId: Overload:B2R2.BinGraph.Boundary.isInnerLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.isInnerLeader
  nameWithType: Boundary.isInnerLeader
- uid: B2R2.BinGraph.Boundary.liftIRBlk(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.Addr -> B2R2.Addr list)
  name: 'val liftIRBlk: BinHandler -> CFGBuilder -> Addr -> Addr list -> Addr * int * Stmt list * Addr'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_liftIRBlk_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_Addr____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.liftIRBlk(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,System.UInt64,Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: 'val B2R2.BinGraph.Boundary.liftIRBlk: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.Addr -> B2R2.Addr list -> B2R2.Addr * int * B2R2.BinIR.LowUIR.Stmt list * B2R2.Addr'
  nameWithType: 'val Boundary.liftIRBlk: BinHandler -> CFGBuilder -> Addr -> Addr list -> Addr * int * Stmt list * Addr'
- uid: B2R2.BinGraph.Boundary.liftIRBlk*
  name: liftIRBlk
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_liftIRBlk_
  commentId: Overload:B2R2.BinGraph.Boundary.liftIRBlk*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.liftIRBlk
  nameWithType: Boundary.liftIRBlk
- uid: B2R2.BinGraph.Boundary.parseBlk(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.Addr)
  name: 'val parseBlk: BinHandler -> CFGBuilder -> Addr -> Result<Instruction list,Instruction list>'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_parseBlk_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_Addr_
  commentId: M:B2R2.BinGraph.parseBlk(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,System.UInt64)
  fullName: 'val B2R2.BinGraph.Boundary.parseBlk: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.Addr -> Result<B2R2.FrontEnd.Instruction list,B2R2.FrontEnd.Instruction list>'
  nameWithType: 'val Boundary.parseBlk: BinHandler -> CFGBuilder -> Addr -> Result<Instruction list,Instruction list>'
- uid: B2R2.BinGraph.Boundary.parseBlk*
  name: parseBlk
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_parseBlk_
  commentId: Overload:B2R2.BinGraph.Boundary.parseBlk*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.parseBlk
  nameWithType: Boundary.parseBlk
- uid: B2R2.BinGraph.Boundary.parseDisasmBlk(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28998 -> B2R2.Addr -> B2R2.Addr list)
  name: "val parseDisasmBlk: BinHandler -> CFGBuilder -> '?28998 -> Addr -> Addr list -> CFGBuilder * '?28998 * Addr list"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_parseDisasmBlk_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______28998____B2R2_Addr____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.parseDisasmBlk``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0,System.UInt64,Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: "val B2R2.BinGraph.Boundary.parseDisasmBlk: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28998 -> B2R2.Addr -> B2R2.Addr list -> B2R2.BinGraph.CFGBuilder * '?28998 * B2R2.Addr list"
  nameWithType: "val Boundary.parseDisasmBlk: BinHandler -> CFGBuilder -> '?28998 -> Addr -> Addr list -> CFGBuilder * '?28998 * Addr list"
- uid: B2R2.BinGraph.Boundary.parseDisasmBlk*
  name: parseDisasmBlk
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_parseDisasmBlk_
  commentId: Overload:B2R2.BinGraph.Boundary.parseDisasmBlk*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.parseDisasmBlk
  nameWithType: Boundary.parseDisasmBlk
- uid: B2R2.BinGraph.Boundary.scanDisasmLeaders(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28999 -> B2R2.Addr list)
  name: "val scanDisasmLeaders: BinHandler -> CFGBuilder -> '?28999 -> Addr list -> CFGBuilder * '?28999"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_scanDisasmLeaders_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______28999____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.scanDisasmLeaders``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0,Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: "val B2R2.BinGraph.Boundary.scanDisasmLeaders: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28999 -> B2R2.Addr list -> B2R2.BinGraph.CFGBuilder * '?28999"
  nameWithType: "val Boundary.scanDisasmLeaders: BinHandler -> CFGBuilder -> '?28999 -> Addr list -> CFGBuilder * '?28999"
- uid: B2R2.BinGraph.Boundary.scanDisasmLeaders*
  name: scanDisasmLeaders
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_scanDisasmLeaders_
  commentId: Overload:B2R2.BinGraph.Boundary.scanDisasmLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.scanDisasmLeaders
  nameWithType: Boundary.scanDisasmLeaders
- uid: B2R2.BinGraph.Boundary.scanInstrs(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28996 -> B2R2.Addr list -> '?28997 list)
  name: "val scanInstrs: BinHandler -> CFGBuilder -> '?28996 -> Addr list -> '?28997 list -> CFGBuilder * '?28996 * Addr list"
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_scanInstrs_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder______28996____B2R2_Addr_list______28997_list_
  commentId: M:B2R2.BinGraph.scanInstrs``2(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,``0,Microsoft.FSharp.Collections.FSharpList{System.UInt64},Microsoft.FSharp.Collections.FSharpList{``1})
  fullName: "val B2R2.BinGraph.Boundary.scanInstrs: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> '?28996 -> B2R2.Addr list -> '?28997 list -> B2R2.BinGraph.CFGBuilder * '?28996 * B2R2.Addr list"
  nameWithType: "val Boundary.scanInstrs: BinHandler -> CFGBuilder -> '?28996 -> Addr list -> '?28997 list -> CFGBuilder * '?28996 * Addr list"
- uid: B2R2.BinGraph.Boundary.scanInstrs*
  name: scanInstrs
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_scanInstrs_
  commentId: Overload:B2R2.BinGraph.Boundary.scanInstrs*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.scanInstrs
  nameWithType: Boundary.scanInstrs
- uid: B2R2.BinGraph.Boundary.scanIRLeaders(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> uint64 * int * uint64 * int -> B2R2.BinGraph.PPoint * B2R2.BinIR.LowUIR.Stmt list)
  name: 'val scanIRLeaders: BinHandler -> CFGBuilder -> uint64 * int * uint64 * int -> PPoint * Stmt list -> CFGBuilder'
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_scanIRLeaders_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____uint64___int___uint64___int____B2R2_BinGraph_PPoint___B2R2_BinIR_LowUIR_Stmt_list_
  commentId: M:B2R2.BinGraph.scanIRLeaders(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,System.Tuple{System.UInt64,System.Int32},System.Tuple{System.UInt64,System.Int32},Microsoft.FSharp.Collections.FSharpList{System.Tuple{System.Tuple{System.UInt64,System.Int32},B2R2.BinIR.LowUIR.Stmt}})
  fullName: 'val B2R2.BinGraph.Boundary.scanIRLeaders: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> uint64 * int * uint64 * int -> B2R2.BinGraph.PPoint * B2R2.BinIR.LowUIR.Stmt list -> B2R2.BinGraph.CFGBuilder'
  nameWithType: 'val Boundary.scanIRLeaders: BinHandler -> CFGBuilder -> uint64 * int * uint64 * int -> PPoint * Stmt list -> CFGBuilder'
- uid: B2R2.BinGraph.Boundary.scanIRLeaders*
  name: scanIRLeaders
  href: api/B2R2.BinGraph.Boundary.html#B2R2_BinGraph_Boundary_scanIRLeaders_
  commentId: Overload:B2R2.BinGraph.Boundary.scanIRLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.Boundary.scanIRLeaders
  nameWithType: Boundary.scanIRLeaders
- uid: B2R2.BinGraph.CFG
  name: CFG<'a> (abrv)
  href: api/B2R2.BinGraph.CFG.html
  commentId: T:B2R2.BinGraph.CFG`1
  fullName: B2R2.BinGraph.CFG
  nameWithType: B2R2.BinGraph.CFG
- uid: B2R2.BinGraph.CFGBuilder
  name: CFGBuilder
  href: api/B2R2.BinGraph.CFGBuilder.html
  commentId: T:B2R2.BinGraph.CFGBuilder
  fullName: B2R2.BinGraph.CFGBuilder
  nameWithType: B2R2.BinGraph.CFGBuilder
- uid: B2R2.BinGraph.CFGBuilder.#ctor(unit)
  name: 'new: unit -> CFGBuilder'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder__ctor_unit_
  commentId: M:B2R2.BinGraph.CFGBuilder.#ctor
  fullName: 'new: unit -> B2R2.BinGraph.CFGBuilder'
  nameWithType: 'new: unit -> CFGBuilder'
- uid: B2R2.BinGraph.CFGBuilder.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder__ctor_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder
  nameWithType: CFGBuilder.( .ctor )
- uid: B2R2.BinGraph.CFGBuilder.AddDisasmLeader(B2R2.Addr)
  name: 'member AddDisasmLeader: Addr -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddDisasmLeader_B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.AddDisasmLeader(System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.AddDisasmLeader: B2R2.Addr -> unit'
  nameWithType: 'member CFGBuilder.AddDisasmLeader: Addr -> unit'
- uid: B2R2.BinGraph.CFGBuilder.AddDisasmLeader*
  name: AddDisasmLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.AddDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.AddDisasmLeader
  nameWithType: CFGBuilder.AddDisasmLeader
- uid: B2R2.BinGraph.CFGBuilder.AddInstr(B2R2.FrontEnd.Instruction)
  name: 'member AddInstr: Instruction -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddInstr_B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.CFGBuilder.AddInstr(B2R2.FrontEnd.Instruction)
  fullName: 'member B2R2.BinGraph.CFGBuilder.AddInstr: B2R2.FrontEnd.Instruction -> unit'
  nameWithType: 'member CFGBuilder.AddInstr: Instruction -> unit'
- uid: B2R2.BinGraph.CFGBuilder.AddInstr*
  name: AddInstr
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddInstr_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.AddInstr*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.AddInstr
  nameWithType: CFGBuilder.AddInstr
- uid: B2R2.BinGraph.CFGBuilder.AddIRLeader(B2R2.BinGraph.PPoint)
  name: 'member AddIRLeader: PPoint -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddIRLeader_B2R2_BinGraph_PPoint_
  commentId: M:B2R2.BinGraph.CFGBuilder.AddIRLeader(System.Tuple{System.UInt64,System.Int32})
  fullName: 'member B2R2.BinGraph.CFGBuilder.AddIRLeader: B2R2.BinGraph.PPoint -> unit'
  nameWithType: 'member CFGBuilder.AddIRLeader: PPoint -> unit'
- uid: B2R2.BinGraph.CFGBuilder.AddIRLeader*
  name: AddIRLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddIRLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.AddIRLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.AddIRLeader
  nameWithType: CFGBuilder.AddIRLeader
- uid: B2R2.BinGraph.CFGBuilder.AddLabel(B2R2.Addr * int -> B2R2.BinIR.Symbol)
  name: 'member AddLabel: Addr * int -> Symbol -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddLabel_B2R2_Addr___int____B2R2_BinIR_Symbol_
  commentId: M:B2R2.BinGraph.CFGBuilder.AddLabel(System.UInt64,System.Int32,System.Tuple{System.String,System.Int32})
  fullName: 'member B2R2.BinGraph.CFGBuilder.AddLabel: B2R2.Addr * int -> B2R2.BinIR.Symbol -> unit'
  nameWithType: 'member CFGBuilder.AddLabel: Addr * int -> Symbol -> unit'
- uid: B2R2.BinGraph.CFGBuilder.AddLabel*
  name: AddLabel
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddLabel_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.AddLabel*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.AddLabel
  nameWithType: CFGBuilder.AddLabel
- uid: B2R2.BinGraph.CFGBuilder.AddStmt(B2R2.BinGraph.PPoint -> B2R2.BinIR.LowUIR.Stmt)
  name: 'member AddStmt: PPoint -> Stmt -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddStmt_B2R2_BinGraph_PPoint____B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinGraph.CFGBuilder.AddStmt(System.Tuple{System.UInt64,System.Int32},B2R2.BinIR.LowUIR.Stmt)
  fullName: 'member B2R2.BinGraph.CFGBuilder.AddStmt: B2R2.BinGraph.PPoint -> B2R2.BinIR.LowUIR.Stmt -> unit'
  nameWithType: 'member CFGBuilder.AddStmt: PPoint -> Stmt -> unit'
- uid: B2R2.BinGraph.CFGBuilder.AddStmt*
  name: AddStmt
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_AddStmt_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.AddStmt*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.AddStmt
  nameWithType: CFGBuilder.AddStmt
- uid: B2R2.BinGraph.CFGBuilder.DisasmEnd(unit)
  name: 'property DisasmEnd: Addr'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_DisasmEnd_unit_
  commentId: P:B2R2.BinGraph.CFGBuilder.DisasmEnd
  fullName: 'property B2R2.BinGraph.CFGBuilder.DisasmEnd: B2R2.Addr'
  nameWithType: 'property CFGBuilder.DisasmEnd: Addr'
- uid: B2R2.BinGraph.CFGBuilder.DisasmEnd*
  name: DisasmEnd
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_DisasmEnd_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.DisasmEnd*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.DisasmEnd
  nameWithType: CFGBuilder.DisasmEnd
- uid: B2R2.BinGraph.CFGBuilder.DisasmLeaders(unit)
  name: 'property DisasmLeaders: Dictionary<Addr,Addr option * bool>'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_DisasmLeaders_unit_
  commentId: P:B2R2.BinGraph.CFGBuilder.DisasmLeaders
  fullName: 'property B2R2.BinGraph.CFGBuilder.DisasmLeaders: System.Collections.Generic.Dictionary<B2R2.Addr,B2R2.Addr option * bool>'
  nameWithType: 'property CFGBuilder.DisasmLeaders: Dictionary<Addr,Addr option * bool>'
- uid: B2R2.BinGraph.CFGBuilder.DisasmLeaders*
  name: DisasmLeaders
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_DisasmLeaders_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.DisasmLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.DisasmLeaders
  nameWithType: CFGBuilder.DisasmLeaders
- uid: B2R2.BinGraph.CFGBuilder.ExistDisasmLeader(B2R2.Addr)
  name: 'member ExistDisasmLeader: Addr -> bool'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_ExistDisasmLeader_B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.ExistDisasmLeader(System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.ExistDisasmLeader: B2R2.Addr -> bool'
  nameWithType: 'member CFGBuilder.ExistDisasmLeader: Addr -> bool'
- uid: B2R2.BinGraph.CFGBuilder.ExistDisasmLeader*
  name: ExistDisasmLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_ExistDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.ExistDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.ExistDisasmLeader
  nameWithType: CFGBuilder.ExistDisasmLeader
- uid: B2R2.BinGraph.CFGBuilder.FindPPointByLabel(B2R2.Addr -> B2R2.BinIR.Symbol)
  name: 'member FindPPointByLabel: Addr -> Symbol -> Addr * int'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_FindPPointByLabel_B2R2_Addr____B2R2_BinIR_Symbol_
  commentId: M:B2R2.BinGraph.CFGBuilder.FindPPointByLabel(System.UInt64,System.Tuple{System.String,System.Int32})
  fullName: 'member B2R2.BinGraph.CFGBuilder.FindPPointByLabel: B2R2.Addr -> B2R2.BinIR.Symbol -> B2R2.Addr * int'
  nameWithType: 'member CFGBuilder.FindPPointByLabel: Addr -> Symbol -> Addr * int'
- uid: B2R2.BinGraph.CFGBuilder.FindPPointByLabel*
  name: FindPPointByLabel
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_FindPPointByLabel_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.FindPPointByLabel*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.FindPPointByLabel
  nameWithType: CFGBuilder.FindPPointByLabel
- uid: B2R2.BinGraph.CFGBuilder.GetDisasmLeaders(unit)
  name: 'member GetDisasmLeaders: unit -> Addr list'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetDisasmLeaders_unit_
  commentId: M:B2R2.BinGraph.CFGBuilder.GetDisasmLeaders
  fullName: 'member B2R2.BinGraph.CFGBuilder.GetDisasmLeaders: unit -> B2R2.Addr list'
  nameWithType: 'member CFGBuilder.GetDisasmLeaders: unit -> Addr list'
- uid: B2R2.BinGraph.CFGBuilder.GetDisasmLeaders*
  name: GetDisasmLeaders
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetDisasmLeaders_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.GetDisasmLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.GetDisasmLeaders
  nameWithType: CFGBuilder.GetDisasmLeaders
- uid: B2R2.BinGraph.CFGBuilder.GetInstr(B2R2.Addr)
  name: 'member GetInstr: Addr -> Instruction'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetInstr_B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.GetInstr(System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.GetInstr: B2R2.Addr -> B2R2.FrontEnd.Instruction'
  nameWithType: 'member CFGBuilder.GetInstr: Addr -> Instruction'
- uid: B2R2.BinGraph.CFGBuilder.GetInstr*
  name: GetInstr
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetInstr_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.GetInstr*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.GetInstr
  nameWithType: CFGBuilder.GetInstr
- uid: B2R2.BinGraph.CFGBuilder.GetIRLeaders(unit)
  name: 'member GetIRLeaders: unit -> PPoint list'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetIRLeaders_unit_
  commentId: M:B2R2.BinGraph.CFGBuilder.GetIRLeaders
  fullName: 'member B2R2.BinGraph.CFGBuilder.GetIRLeaders: unit -> B2R2.BinGraph.PPoint list'
  nameWithType: 'member CFGBuilder.GetIRLeaders: unit -> PPoint list'
- uid: B2R2.BinGraph.CFGBuilder.GetIRLeaders*
  name: GetIRLeaders
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetIRLeaders_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.GetIRLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.GetIRLeaders
  nameWithType: CFGBuilder.GetIRLeaders
- uid: B2R2.BinGraph.CFGBuilder.GetLiftableByIRLeader(B2R2.BinGraph.PPoint)
  name: 'member GetLiftableByIRLeader: PPoint -> bool'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetLiftableByIRLeader_B2R2_BinGraph_PPoint_
  commentId: M:B2R2.BinGraph.CFGBuilder.GetLiftableByIRLeader(System.Tuple{System.UInt64,System.Int32})
  fullName: 'member B2R2.BinGraph.CFGBuilder.GetLiftableByIRLeader: B2R2.BinGraph.PPoint -> bool'
  nameWithType: 'member CFGBuilder.GetLiftableByIRLeader: PPoint -> bool'
- uid: B2R2.BinGraph.CFGBuilder.GetLiftableByIRLeader*
  name: GetLiftableByIRLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetLiftableByIRLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.GetLiftableByIRLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.GetLiftableByIRLeader
  nameWithType: CFGBuilder.GetLiftableByIRLeader
- uid: B2R2.BinGraph.CFGBuilder.GetParsableByDisasmLeader(B2R2.Addr)
  name: 'member GetParsableByDisasmLeader: Addr -> bool'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetParsableByDisasmLeader_B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.GetParsableByDisasmLeader(System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.GetParsableByDisasmLeader: B2R2.Addr -> bool'
  nameWithType: 'member CFGBuilder.GetParsableByDisasmLeader: Addr -> bool'
- uid: B2R2.BinGraph.CFGBuilder.GetParsableByDisasmLeader*
  name: GetParsableByDisasmLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetParsableByDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.GetParsableByDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.GetParsableByDisasmLeader
  nameWithType: CFGBuilder.GetParsableByDisasmLeader
- uid: B2R2.BinGraph.CFGBuilder.GetStmt(B2R2.BinGraph.PPoint)
  name: 'member GetStmt: PPoint -> Stmt'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetStmt_B2R2_BinGraph_PPoint_
  commentId: M:B2R2.BinGraph.CFGBuilder.GetStmt(System.Tuple{System.UInt64,System.Int32})
  fullName: 'member B2R2.BinGraph.CFGBuilder.GetStmt: B2R2.BinGraph.PPoint -> B2R2.BinIR.LowUIR.Stmt'
  nameWithType: 'member CFGBuilder.GetStmt: PPoint -> Stmt'
- uid: B2R2.BinGraph.CFGBuilder.GetStmt*
  name: GetStmt
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_GetStmt_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.GetStmt*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.GetStmt
  nameWithType: CFGBuilder.GetStmt
- uid: B2R2.BinGraph.CFGBuilder.InstrMap(unit)
  name: 'property InstrMap: Dictionary<Addr,Instruction>'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_InstrMap_unit_
  commentId: P:B2R2.BinGraph.CFGBuilder.InstrMap
  fullName: 'property B2R2.BinGraph.CFGBuilder.InstrMap: System.Collections.Generic.Dictionary<B2R2.Addr,B2R2.FrontEnd.Instruction>'
  nameWithType: 'property CFGBuilder.InstrMap: Dictionary<Addr,Instruction>'
- uid: B2R2.BinGraph.CFGBuilder.InstrMap*
  name: InstrMap
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_InstrMap_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.InstrMap*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.InstrMap
  nameWithType: CFGBuilder.InstrMap
- uid: B2R2.BinGraph.CFGBuilder.IRLeaders(unit)
  name: 'property IRLeaders: Dictionary<PPoint,Addr option * bool>'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_IRLeaders_unit_
  commentId: P:B2R2.BinGraph.CFGBuilder.IRLeaders
  fullName: 'property B2R2.BinGraph.CFGBuilder.IRLeaders: System.Collections.Generic.Dictionary<B2R2.BinGraph.PPoint,B2R2.Addr option * bool>'
  nameWithType: 'property CFGBuilder.IRLeaders: Dictionary<PPoint,Addr option * bool>'
- uid: B2R2.BinGraph.CFGBuilder.IRLeaders*
  name: IRLeaders
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_IRLeaders_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.IRLeaders*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.IRLeaders
  nameWithType: CFGBuilder.IRLeaders
- uid: B2R2.BinGraph.CFGBuilder.IsInteresting(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: 'member IsInteresting: BinHandler -> Addr -> bool'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_IsInteresting_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.IsInteresting(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.IsInteresting: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> bool'
  nameWithType: 'member CFGBuilder.IsInteresting: BinHandler -> Addr -> bool'
- uid: B2R2.BinGraph.CFGBuilder.IsInteresting*
  name: IsInteresting
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_IsInteresting_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.IsInteresting*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.IsInteresting
  nameWithType: CFGBuilder.IsInteresting
- uid: B2R2.BinGraph.CFGBuilder.LabelMap(unit)
  name: 'property LabelMap: Dictionary<Addr * Symbol,int>'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_LabelMap_unit_
  commentId: P:B2R2.BinGraph.CFGBuilder.LabelMap
  fullName: 'property B2R2.BinGraph.CFGBuilder.LabelMap: System.Collections.Generic.Dictionary<B2R2.Addr * B2R2.BinIR.Symbol,int>'
  nameWithType: 'property CFGBuilder.LabelMap: Dictionary<Addr * Symbol,int>'
- uid: B2R2.BinGraph.CFGBuilder.LabelMap*
  name: LabelMap
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_LabelMap_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.LabelMap*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.LabelMap
  nameWithType: CFGBuilder.LabelMap
- uid: B2R2.BinGraph.CFGBuilder.StmtMap(unit)
  name: 'property StmtMap: Dictionary<PPoint,Stmt>'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_StmtMap_unit_
  commentId: P:B2R2.BinGraph.CFGBuilder.StmtMap
  fullName: 'property B2R2.BinGraph.CFGBuilder.StmtMap: System.Collections.Generic.Dictionary<B2R2.BinGraph.PPoint,B2R2.BinIR.LowUIR.Stmt>'
  nameWithType: 'property CFGBuilder.StmtMap: Dictionary<PPoint,Stmt>'
- uid: B2R2.BinGraph.CFGBuilder.StmtMap*
  name: StmtMap
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_StmtMap_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.StmtMap*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.StmtMap
  nameWithType: CFGBuilder.StmtMap
- uid: B2R2.BinGraph.CFGBuilder.TryGetEntryByDisasmLeader(B2R2.Addr)
  name: 'member TryGetEntryByDisasmLeader: Addr -> Addr option option'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_TryGetEntryByDisasmLeader_B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.TryGetEntryByDisasmLeader(System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.TryGetEntryByDisasmLeader: B2R2.Addr -> B2R2.Addr option option'
  nameWithType: 'member CFGBuilder.TryGetEntryByDisasmLeader: Addr -> Addr option option'
- uid: B2R2.BinGraph.CFGBuilder.TryGetEntryByDisasmLeader*
  name: TryGetEntryByDisasmLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_TryGetEntryByDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.TryGetEntryByDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.TryGetEntryByDisasmLeader
  nameWithType: CFGBuilder.TryGetEntryByDisasmLeader
- uid: B2R2.BinGraph.CFGBuilder.TryGetEntryByIRLeader(B2R2.BinGraph.PPoint)
  name: 'member TryGetEntryByIRLeader: PPoint -> Addr option option'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_TryGetEntryByIRLeader_B2R2_BinGraph_PPoint_
  commentId: M:B2R2.BinGraph.CFGBuilder.TryGetEntryByIRLeader(System.Tuple{System.UInt64,System.Int32})
  fullName: 'member B2R2.BinGraph.CFGBuilder.TryGetEntryByIRLeader: B2R2.BinGraph.PPoint -> B2R2.Addr option option'
  nameWithType: 'member CFGBuilder.TryGetEntryByIRLeader: PPoint -> Addr option option'
- uid: B2R2.BinGraph.CFGBuilder.TryGetEntryByIRLeader*
  name: TryGetEntryByIRLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_TryGetEntryByIRLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.TryGetEntryByIRLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.TryGetEntryByIRLeader
  nameWithType: CFGBuilder.TryGetEntryByIRLeader
- uid: B2R2.BinGraph.CFGBuilder.UpdateEntryOfDisasmLeader(B2R2.Addr -> B2R2.Addr)
  name: 'member UpdateEntryOfDisasmLeader: Addr -> Addr -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateEntryOfDisasmLeader_B2R2_Addr____B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.UpdateEntryOfDisasmLeader(System.UInt64,System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.UpdateEntryOfDisasmLeader: B2R2.Addr -> B2R2.Addr -> unit'
  nameWithType: 'member CFGBuilder.UpdateEntryOfDisasmLeader: Addr -> Addr -> unit'
- uid: B2R2.BinGraph.CFGBuilder.UpdateEntryOfDisasmLeader*
  name: UpdateEntryOfDisasmLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateEntryOfDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.UpdateEntryOfDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.UpdateEntryOfDisasmLeader
  nameWithType: CFGBuilder.UpdateEntryOfDisasmLeader
- uid: B2R2.BinGraph.CFGBuilder.UpdateEntryOfIRLeader(B2R2.BinGraph.PPoint -> B2R2.Addr)
  name: 'member UpdateEntryOfIRLeader: PPoint -> Addr -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateEntryOfIRLeader_B2R2_BinGraph_PPoint____B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.UpdateEntryOfIRLeader(System.Tuple{System.UInt64,System.Int32},System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.UpdateEntryOfIRLeader: B2R2.BinGraph.PPoint -> B2R2.Addr -> unit'
  nameWithType: 'member CFGBuilder.UpdateEntryOfIRLeader: PPoint -> Addr -> unit'
- uid: B2R2.BinGraph.CFGBuilder.UpdateEntryOfIRLeader*
  name: UpdateEntryOfIRLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateEntryOfIRLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.UpdateEntryOfIRLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.UpdateEntryOfIRLeader
  nameWithType: CFGBuilder.UpdateEntryOfIRLeader
- uid: B2R2.BinGraph.CFGBuilder.UpdateLiftableOfIRLeader(B2R2.BinGraph.PPoint)
  name: 'member UpdateLiftableOfIRLeader: PPoint -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateLiftableOfIRLeader_B2R2_BinGraph_PPoint_
  commentId: M:B2R2.BinGraph.CFGBuilder.UpdateLiftableOfIRLeader(System.Tuple{System.UInt64,System.Int32})
  fullName: 'member B2R2.BinGraph.CFGBuilder.UpdateLiftableOfIRLeader: B2R2.BinGraph.PPoint -> unit'
  nameWithType: 'member CFGBuilder.UpdateLiftableOfIRLeader: PPoint -> unit'
- uid: B2R2.BinGraph.CFGBuilder.UpdateLiftableOfIRLeader*
  name: UpdateLiftableOfIRLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateLiftableOfIRLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.UpdateLiftableOfIRLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.UpdateLiftableOfIRLeader
  nameWithType: CFGBuilder.UpdateLiftableOfIRLeader
- uid: B2R2.BinGraph.CFGBuilder.UpdateParsableOfDisasmLeader(B2R2.Addr)
  name: 'member UpdateParsableOfDisasmLeader: Addr -> unit'
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateParsableOfDisasmLeader_B2R2_Addr_
  commentId: M:B2R2.BinGraph.CFGBuilder.UpdateParsableOfDisasmLeader(System.UInt64)
  fullName: 'member B2R2.BinGraph.CFGBuilder.UpdateParsableOfDisasmLeader: B2R2.Addr -> unit'
  nameWithType: 'member CFGBuilder.UpdateParsableOfDisasmLeader: Addr -> unit'
- uid: B2R2.BinGraph.CFGBuilder.UpdateParsableOfDisasmLeader*
  name: UpdateParsableOfDisasmLeader
  href: api/B2R2.BinGraph.CFGBuilder.html#B2R2_BinGraph_CFGBuilder_UpdateParsableOfDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGBuilder.UpdateParsableOfDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGBuilder.UpdateParsableOfDisasmLeader
  nameWithType: CFGBuilder.UpdateParsableOfDisasmLeader
- uid: B2R2.BinGraph.CFGEdge
  name: CFGEdge (union)
  href: api/B2R2.BinGraph.CFGEdge.html
  commentId: T:B2R2.BinGraph.CFGEdge
  fullName: B2R2.BinGraph.CFGEdge
  nameWithType: B2R2.BinGraph.CFGEdge
- uid: B2R2.BinGraph.CFGEdge.CJmpFalseEdge
  name: CJmpFalseEdge
  href: api/B2R2.BinGraph.CFGEdge.html#B2R2_BinGraph_CFGEdge_CJmpFalseEdge
  commentId: T:B2R2.BinGraph.CFGEdge.CJmpFalseEdge
  fullName: B2R2.BinGraph.CFGEdge.CJmpFalseEdge
  nameWithType: CFGEdge.CJmpFalseEdge
- uid: B2R2.BinGraph.CFGEdge.CJmpTrueEdge
  name: CJmpTrueEdge
  href: api/B2R2.BinGraph.CFGEdge.html#B2R2_BinGraph_CFGEdge_CJmpTrueEdge
  commentId: T:B2R2.BinGraph.CFGEdge.CJmpTrueEdge
  fullName: B2R2.BinGraph.CFGEdge.CJmpTrueEdge
  nameWithType: CFGEdge.CJmpTrueEdge
- uid: B2R2.BinGraph.CFGEdge.JmpEdge
  name: JmpEdge
  href: api/B2R2.BinGraph.CFGEdge.html#B2R2_BinGraph_CFGEdge_JmpEdge
  commentId: T:B2R2.BinGraph.CFGEdge.JmpEdge
  fullName: B2R2.BinGraph.CFGEdge.JmpEdge
  nameWithType: CFGEdge.JmpEdge
- uid: B2R2.BinGraph.CFGUtils
  name: CFGUtils (mod)
  href: api/B2R2.BinGraph.CFGUtils.html
  commentId: T:B2R2.BinGraph.CFGUtils
  fullName: B2R2.BinGraph.CFGUtils
  nameWithType: B2R2.BinGraph.CFGUtils
- uid: B2R2.BinGraph.CFGUtils.accumulateBBLs(Map<'?31171,'?31172> -> '?31171 -> Result<'?31172,unit>)
  name: "val accumulateBBLs: Map<'?31171,'?31172> -> '?31171 -> Result<'?31172,unit> -> Map<'?31171,'?31172>"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_accumulateBBLs_Map___31171___31172_______31171____Result___31172_unit__
  commentId: M:B2R2.BinGraph.accumulateBBLs``2(Microsoft.FSharp.Collections.FSharpMap{``0,``1},``0,Microsoft.FSharp.Core.FSharpResult{``1,Microsoft.FSharp.Core.Unit})
  fullName: "val B2R2.BinGraph.CFGUtils.accumulateBBLs: Map<'?31171,'?31172> -> '?31171 -> Result<'?31172,unit> -> Map<'?31171,'?31172>"
  nameWithType: "val CFGUtils.accumulateBBLs: Map<'?31171,'?31172> -> '?31171 -> Result<'?31172,unit> -> Map<'?31171,'?31172>"
- uid: B2R2.BinGraph.CFGUtils.accumulateBBLs*
  name: accumulateBBLs
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_accumulateBBLs_
  commentId: Overload:B2R2.BinGraph.CFGUtils.accumulateBBLs*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.accumulateBBLs
  nameWithType: CFGUtils.accumulateBBLs
- uid: B2R2.BinGraph.CFGUtils.addDisasmLeader(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31174> -> B2R2.BinGraph.DisasmCFG -> B2R2.Addr -> B2R2.Addr -> B2R2.Addr option)
  name: "val addDisasmLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr,'?31174> -> DisasmCFG -> Addr -> Addr -> Addr option -> Vertex<DisassemblyBBL> * Addr * CFGEdge option list option"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_addDisasmLeader_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____Set_B2R2_Addr_____Map_B2R2_Addr___31174_____B2R2_BinGraph_DisasmCFG____B2R2_Addr____B2R2_Addr____B2R2_Addr_option_
  commentId: M:B2R2.BinGraph.addDisasmLeader``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``0},B2R2.BinGraph.RangedDiGraph{B2R2.BinGraph.DisassemblyBBL,B2R2.BinGraph.CFGEdge},System.UInt64,System.UInt64,Microsoft.FSharp.Core.FSharpOption{System.UInt64})
  fullName: "val B2R2.BinGraph.CFGUtils.addDisasmLeader: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31174> -> B2R2.BinGraph.DisasmCFG -> B2R2.Addr -> B2R2.Addr -> B2R2.Addr option -> B2R2.BinGraph.Vertex<B2R2.BinGraph.DisassemblyBBL> * B2R2.Addr * B2R2.BinGraph.CFGEdge option list option"
  nameWithType: "val CFGUtils.addDisasmLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr,'?31174> -> DisasmCFG -> Addr -> Addr -> Addr option -> Vertex<DisassemblyBBL> * Addr * CFGEdge option list option"
- uid: B2R2.BinGraph.CFGUtils.addDisasmLeader*
  name: addDisasmLeader
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_addDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGUtils.addDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.addDisasmLeader
  nameWithType: CFGUtils.addDisasmLeader
- uid: B2R2.BinGraph.CFGUtils.addIRLeader(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31179> -> B2R2.BinGraph.IRCFG -> B2R2.Addr -> B2R2.Addr * int -> B2R2.Addr option)
  name: "val addIRLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr * int,'?31179> -> IRCFG -> Addr -> Addr * int -> Addr option -> Vertex<IRBBL> * Addr * int * CFGEdge option list option"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_addIRLeader_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____Set_B2R2_Addr_____Map_B2R2_Addr___int___31179_____B2R2_BinGraph_IRCFG____B2R2_Addr____B2R2_Addr___int____B2R2_Addr_option_
  commentId: M:B2R2.BinGraph.addIRLeader``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.Tuple{System.UInt64,System.Int32},``0},B2R2.BinGraph.SimpleDiGraph{B2R2.BinGraph.IRBBL,B2R2.BinGraph.CFGEdge},System.UInt64,System.UInt64,System.Int32,Microsoft.FSharp.Core.FSharpOption{System.UInt64})
  fullName: "val B2R2.BinGraph.CFGUtils.addIRLeader: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31179> -> B2R2.BinGraph.IRCFG -> B2R2.Addr -> B2R2.Addr * int -> B2R2.Addr option -> B2R2.BinGraph.Vertex<B2R2.BinGraph.IRBBL> * B2R2.Addr * int * B2R2.BinGraph.CFGEdge option list option"
  nameWithType: "val CFGUtils.addIRLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr * int,'?31179> -> IRCFG -> Addr -> Addr * int -> Addr option -> Vertex<IRBBL> * Addr * int * CFGEdge option list option"
- uid: B2R2.BinGraph.CFGUtils.addIRLeader*
  name: addIRLeader
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_addIRLeader_
  commentId: Overload:B2R2.BinGraph.CFGUtils.addIRLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.addIRLeader
  nameWithType: CFGUtils.addIRLeader
- uid: B2R2.BinGraph.CFGUtils.bgToJson(bool -> System.Text.StringBuilder)
  name: 'val bgToJson: bool -> StringBuilder -> StringBuilder'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_bgToJson_bool____System_Text_StringBuilder_
  commentId: M:B2R2.BinGraph.bgToJson(System.Boolean,System.Text.StringBuilder)
  fullName: 'val B2R2.BinGraph.CFGUtils.bgToJson: bool -> System.Text.StringBuilder -> System.Text.StringBuilder'
  nameWithType: 'val CFGUtils.bgToJson: bool -> StringBuilder -> StringBuilder'
- uid: B2R2.BinGraph.CFGUtils.bgToJson*
  name: bgToJson
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_bgToJson_
  commentId: Overload:B2R2.BinGraph.CFGUtils.bgToJson*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.bgToJson
  nameWithType: CFGUtils.bgToJson
- uid: B2R2.BinGraph.CFGUtils.buildCFGs(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.Funcs)
  name: 'val buildCFGs: BinHandler -> CFGBuilder -> Funcs -> CFGBuilder * Funcs'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildCFGs_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_BinGraph_Funcs_
  commentId: M:B2R2.BinGraph.buildCFGs(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,System.Collections.Generic.Dictionary{System.UInt64,B2R2.BinGraph.Function})
  fullName: 'val B2R2.BinGraph.CFGUtils.buildCFGs: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.Funcs -> B2R2.BinGraph.CFGBuilder * B2R2.BinGraph.Funcs'
  nameWithType: 'val CFGUtils.buildCFGs: BinHandler -> CFGBuilder -> Funcs -> CFGBuilder * Funcs'
- uid: B2R2.BinGraph.CFGUtils.buildCFGs*
  name: buildCFGs
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildCFGs_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildCFGs*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildCFGs
  nameWithType: CFGUtils.buildCFGs
- uid: B2R2.BinGraph.CFGUtils.buildDisasmBBLAux(B2R2.BinGraph.CFGBuilder -> B2R2.Addr -> B2R2.Addr list -> B2R2.Addr -> B2R2.FrontEnd.Instruction list)
  name: 'val buildDisasmBBLAux: CFGBuilder -> Addr -> Addr list -> Addr -> Instruction list -> Result<DisassemblyBBL,unit>'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmBBLAux_B2R2_BinGraph_CFGBuilder____B2R2_Addr____B2R2_Addr_list____B2R2_Addr____B2R2_FrontEnd_Instruction_list_
  commentId: M:B2R2.BinGraph.buildDisasmBBLAux(B2R2.BinGraph.CFGBuilder,System.UInt64,Microsoft.FSharp.Collections.FSharpList{System.UInt64},System.UInt64,Microsoft.FSharp.Collections.FSharpList{B2R2.FrontEnd.Instruction})
  fullName: 'val B2R2.BinGraph.CFGUtils.buildDisasmBBLAux: B2R2.BinGraph.CFGBuilder -> B2R2.Addr -> B2R2.Addr list -> B2R2.Addr -> B2R2.FrontEnd.Instruction list -> Result<B2R2.BinGraph.DisassemblyBBL,unit>'
  nameWithType: 'val CFGUtils.buildDisasmBBLAux: CFGBuilder -> Addr -> Addr list -> Addr -> Instruction list -> Result<DisassemblyBBL,unit>'
- uid: B2R2.BinGraph.CFGUtils.buildDisasmBBLAux*
  name: buildDisasmBBLAux
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmBBLAux_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildDisasmBBLAux*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildDisasmBBLAux
  nameWithType: CFGUtils.buildDisasmBBLAux
- uid: B2R2.BinGraph.CFGUtils.buildDisasmBBLs(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Map<B2R2.Addr,B2R2.BinGraph.DisassemblyBBL> -> B2R2.Addr list)
  name: 'val buildDisasmBBLs: BinHandler -> CFGBuilder -> Map<Addr,DisassemblyBBL> -> Addr list -> Map<Addr,DisassemblyBBL>'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmBBLs_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____Map_B2R2_Addr_B2R2_BinGraph_DisassemblyBBL_____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.buildDisasmBBLs(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,Microsoft.FSharp.Collections.FSharpMap{System.UInt64,B2R2.BinGraph.DisassemblyBBL},Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: 'val B2R2.BinGraph.CFGUtils.buildDisasmBBLs: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Map<B2R2.Addr,B2R2.BinGraph.DisassemblyBBL> -> B2R2.Addr list -> Map<B2R2.Addr,B2R2.BinGraph.DisassemblyBBL>'
  nameWithType: 'val CFGUtils.buildDisasmBBLs: BinHandler -> CFGBuilder -> Map<Addr,DisassemblyBBL> -> Addr list -> Map<Addr,DisassemblyBBL>'
- uid: B2R2.BinGraph.CFGUtils.buildDisasmBBLs*
  name: buildDisasmBBLs
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmBBLs_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildDisasmBBLs*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildDisasmBBLs
  nameWithType: CFGUtils.buildDisasmBBLs
- uid: B2R2.BinGraph.CFGUtils.buildDisasmCFG(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.DisasmCFG -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31176> -> B2R2.Addr)
  name: "val buildDisasmCFG: BinHandler -> CFGBuilder -> DisasmCFG -> Set<Addr> -> Map<Addr,'?31176> -> Addr -> unit"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmCFG_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_BinGraph_DisasmCFG____Set_B2R2_Addr_____Map_B2R2_Addr___31176_____B2R2_Addr_
  commentId: M:B2R2.BinGraph.buildDisasmCFG``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,B2R2.BinGraph.RangedDiGraph{B2R2.BinGraph.DisassemblyBBL,B2R2.BinGraph.CFGEdge},Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``0},System.UInt64)
  fullName: "val B2R2.BinGraph.CFGUtils.buildDisasmCFG: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.DisasmCFG -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31176> -> B2R2.Addr -> unit"
  nameWithType: "val CFGUtils.buildDisasmCFG: BinHandler -> CFGBuilder -> DisasmCFG -> Set<Addr> -> Map<Addr,'?31176> -> Addr -> unit"
- uid: B2R2.BinGraph.CFGUtils.buildDisasmCFG*
  name: buildDisasmCFG
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmCFG_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildDisasmCFG*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildDisasmCFG
  nameWithType: CFGUtils.buildDisasmCFG
- uid: B2R2.BinGraph.CFGUtils.buildDisasmCFGs(B2R2.FrontEnd.BinHandler -> '?31177 -> B2R2.BinGraph.Funcs -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31178> -> B2R2.Addr list)
  name: "val buildDisasmCFGs: BinHandler -> '?31177 -> Funcs -> Set<Addr> -> Map<Addr,'?31178> -> Addr list -> '?31177"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmCFGs_B2R2_FrontEnd_BinHandler______31177____B2R2_BinGraph_Funcs____Set_B2R2_Addr_____Map_B2R2_Addr___31178_____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.buildDisasmCFGs``2(B2R2.FrontEnd.BinHandler,``0,System.Collections.Generic.Dictionary{System.UInt64,B2R2.BinGraph.Function},Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``1},Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: "val B2R2.BinGraph.CFGUtils.buildDisasmCFGs: B2R2.FrontEnd.BinHandler -> '?31177 -> B2R2.BinGraph.Funcs -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31178> -> B2R2.Addr list -> '?31177"
  nameWithType: "val CFGUtils.buildDisasmCFGs: BinHandler -> '?31177 -> Funcs -> Set<Addr> -> Map<Addr,'?31178> -> Addr list -> '?31177"
- uid: B2R2.BinGraph.CFGUtils.buildDisasmCFGs*
  name: buildDisasmCFGs
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildDisasmCFGs_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildDisasmCFGs*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildDisasmCFGs
  nameWithType: CFGUtils.buildDisasmCFGs
- uid: B2R2.BinGraph.CFGUtils.buildIRBBLAux(B2R2.BinGraph.CFGBuilder -> B2R2.Addr * int -> B2R2.BinGraph.PPoint list -> B2R2.Addr * int -> B2R2.BinIR.LowUIR.Stmt list)
  name: 'val buildIRBBLAux: CFGBuilder -> Addr * int -> PPoint list -> Addr * int -> Stmt list -> Result<IRBBL,unit>'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRBBLAux_B2R2_BinGraph_CFGBuilder____B2R2_Addr___int____B2R2_BinGraph_PPoint_list____B2R2_Addr___int____B2R2_BinIR_LowUIR_Stmt_list_
  commentId: M:B2R2.BinGraph.buildIRBBLAux(B2R2.BinGraph.CFGBuilder,System.UInt64,System.Int32,Microsoft.FSharp.Collections.FSharpList{System.Tuple{System.UInt64,System.Int32}},System.UInt64,System.Int32,Microsoft.FSharp.Collections.FSharpList{B2R2.BinIR.LowUIR.Stmt})
  fullName: 'val B2R2.BinGraph.CFGUtils.buildIRBBLAux: B2R2.BinGraph.CFGBuilder -> B2R2.Addr * int -> B2R2.BinGraph.PPoint list -> B2R2.Addr * int -> B2R2.BinIR.LowUIR.Stmt list -> Result<B2R2.BinGraph.IRBBL,unit>'
  nameWithType: 'val CFGUtils.buildIRBBLAux: CFGBuilder -> Addr * int -> PPoint list -> Addr * int -> Stmt list -> Result<IRBBL,unit>'
- uid: B2R2.BinGraph.CFGUtils.buildIRBBLAux*
  name: buildIRBBLAux
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRBBLAux_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildIRBBLAux*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildIRBBLAux
  nameWithType: CFGUtils.buildIRBBLAux
- uid: B2R2.BinGraph.CFGUtils.buildIRBBLs(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Map<B2R2.Addr * int,B2R2.BinGraph.IRBBL> -> B2R2.Addr * int list)
  name: 'val buildIRBBLs: BinHandler -> CFGBuilder -> Map<Addr * int,IRBBL> -> Addr * int list -> Map<Addr * int,IRBBL>'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRBBLs_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____Map_B2R2_Addr___int_B2R2_BinGraph_IRBBL_____B2R2_Addr___int_list_
  commentId: M:B2R2.BinGraph.buildIRBBLs(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,Microsoft.FSharp.Collections.FSharpMap{System.Tuple{System.UInt64,System.Int32},B2R2.BinGraph.IRBBL},Microsoft.FSharp.Collections.FSharpList{System.Tuple{System.UInt64,System.Int32}})
  fullName: 'val B2R2.BinGraph.CFGUtils.buildIRBBLs: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Map<B2R2.Addr * int,B2R2.BinGraph.IRBBL> -> B2R2.Addr * int list -> Map<B2R2.Addr * int,B2R2.BinGraph.IRBBL>'
  nameWithType: 'val CFGUtils.buildIRBBLs: BinHandler -> CFGBuilder -> Map<Addr * int,IRBBL> -> Addr * int list -> Map<Addr * int,IRBBL>'
- uid: B2R2.BinGraph.CFGUtils.buildIRBBLs*
  name: buildIRBBLs
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRBBLs_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildIRBBLs*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildIRBBLs
  nameWithType: CFGUtils.buildIRBBLs
- uid: B2R2.BinGraph.CFGUtils.buildIRCFG(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.IRCFG -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31181> -> B2R2.Addr)
  name: "val buildIRCFG: BinHandler -> CFGBuilder -> IRCFG -> Set<Addr> -> Map<Addr * int,'?31181> -> Addr -> unit"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRCFG_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_BinGraph_IRCFG____Set_B2R2_Addr_____Map_B2R2_Addr___int___31181_____B2R2_Addr_
  commentId: M:B2R2.BinGraph.buildIRCFG``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,B2R2.BinGraph.SimpleDiGraph{B2R2.BinGraph.IRBBL,B2R2.BinGraph.CFGEdge},Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.Tuple{System.UInt64,System.Int32},``0},System.UInt64)
  fullName: "val B2R2.BinGraph.CFGUtils.buildIRCFG: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.IRCFG -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31181> -> B2R2.Addr -> unit"
  nameWithType: "val CFGUtils.buildIRCFG: BinHandler -> CFGBuilder -> IRCFG -> Set<Addr> -> Map<Addr * int,'?31181> -> Addr -> unit"
- uid: B2R2.BinGraph.CFGUtils.buildIRCFG*
  name: buildIRCFG
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRCFG_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildIRCFG*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildIRCFG
  nameWithType: CFGUtils.buildIRCFG
- uid: B2R2.BinGraph.CFGUtils.buildIRCFGs(B2R2.FrontEnd.BinHandler -> '?31182 -> B2R2.BinGraph.Funcs -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31183> -> B2R2.Addr list)
  name: "val buildIRCFGs: BinHandler -> '?31182 -> Funcs -> Set<Addr> -> Map<Addr * int,'?31183> -> Addr list -> '?31182"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRCFGs_B2R2_FrontEnd_BinHandler______31182____B2R2_BinGraph_Funcs____Set_B2R2_Addr_____Map_B2R2_Addr___int___31183_____B2R2_Addr_list_
  commentId: M:B2R2.BinGraph.buildIRCFGs``2(B2R2.FrontEnd.BinHandler,``0,System.Collections.Generic.Dictionary{System.UInt64,B2R2.BinGraph.Function},Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.Tuple{System.UInt64,System.Int32},``1},Microsoft.FSharp.Collections.FSharpList{System.UInt64})
  fullName: "val B2R2.BinGraph.CFGUtils.buildIRCFGs: B2R2.FrontEnd.BinHandler -> '?31182 -> B2R2.BinGraph.Funcs -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31183> -> B2R2.Addr list -> '?31182"
  nameWithType: "val CFGUtils.buildIRCFGs: BinHandler -> '?31182 -> Funcs -> Set<Addr> -> Map<Addr * int,'?31183> -> Addr list -> '?31182"
- uid: B2R2.BinGraph.CFGUtils.buildIRCFGs*
  name: buildIRCFGs
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_buildIRCFGs_
  commentId: Overload:B2R2.BinGraph.CFGUtils.buildIRCFGs*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.buildIRCFGs
  nameWithType: CFGUtils.buildIRCFGs
- uid: B2R2.BinGraph.CFGUtils.chkAndAddDisasmLeader(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31175> -> B2R2.BinGraph.DisasmCFG -> B2R2.Addr -> B2R2.Addr)
  name: "val chkAndAddDisasmLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr,'?31175> -> DisasmCFG -> Addr -> Addr -> Vertex<DisassemblyBBL> * Addr * CFGEdge option list option"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_chkAndAddDisasmLeader_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____Set_B2R2_Addr_____Map_B2R2_Addr___31175_____B2R2_BinGraph_DisasmCFG____B2R2_Addr____B2R2_Addr_
  commentId: M:B2R2.BinGraph.chkAndAddDisasmLeader``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``0},B2R2.BinGraph.RangedDiGraph{B2R2.BinGraph.DisassemblyBBL,B2R2.BinGraph.CFGEdge},System.UInt64,System.UInt64)
  fullName: "val B2R2.BinGraph.CFGUtils.chkAndAddDisasmLeader: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr,'?31175> -> B2R2.BinGraph.DisasmCFG -> B2R2.Addr -> B2R2.Addr -> B2R2.BinGraph.Vertex<B2R2.BinGraph.DisassemblyBBL> * B2R2.Addr * B2R2.BinGraph.CFGEdge option list option"
  nameWithType: "val CFGUtils.chkAndAddDisasmLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr,'?31175> -> DisasmCFG -> Addr -> Addr -> Vertex<DisassemblyBBL> * Addr * CFGEdge option list option"
- uid: B2R2.BinGraph.CFGUtils.chkAndAddDisasmLeader*
  name: chkAndAddDisasmLeader
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_chkAndAddDisasmLeader_
  commentId: Overload:B2R2.BinGraph.CFGUtils.chkAndAddDisasmLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.chkAndAddDisasmLeader
  nameWithType: CFGUtils.chkAndAddDisasmLeader
- uid: B2R2.BinGraph.CFGUtils.chkAndAddIRLeader(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31180> -> B2R2.BinGraph.IRCFG -> B2R2.Addr -> B2R2.Addr * int)
  name: "val chkAndAddIRLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr * int,'?31180> -> IRCFG -> Addr -> Addr * int -> Vertex<IRBBL> * Addr * int * CFGEdge option list option"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_chkAndAddIRLeader_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____Set_B2R2_Addr_____Map_B2R2_Addr___int___31180_____B2R2_BinGraph_IRCFG____B2R2_Addr____B2R2_Addr___int_
  commentId: M:B2R2.BinGraph.chkAndAddIRLeader``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.Tuple{System.UInt64,System.Int32},``0},B2R2.BinGraph.SimpleDiGraph{B2R2.BinGraph.IRBBL,B2R2.BinGraph.CFGEdge},System.UInt64,System.UInt64,System.Int32)
  fullName: "val B2R2.BinGraph.CFGUtils.chkAndAddIRLeader: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> Set<B2R2.Addr> -> Map<B2R2.Addr * int,'?31180> -> B2R2.BinGraph.IRCFG -> B2R2.Addr -> B2R2.Addr * int -> B2R2.BinGraph.Vertex<B2R2.BinGraph.IRBBL> * B2R2.Addr * int * B2R2.BinGraph.CFGEdge option list option"
  nameWithType: "val CFGUtils.chkAndAddIRLeader: BinHandler -> CFGBuilder -> Set<Addr> -> Map<Addr * int,'?31180> -> IRCFG -> Addr -> Addr * int -> Vertex<IRBBL> * Addr * int * CFGEdge option list option"
- uid: B2R2.BinGraph.CFGUtils.chkAndAddIRLeader*
  name: chkAndAddIRLeader
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_chkAndAddIRLeader_
  commentId: Overload:B2R2.BinGraph.CFGUtils.chkAndAddIRLeader*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.chkAndAddIRLeader
  nameWithType: CFGUtils.chkAndAddIRLeader
- uid: B2R2.BinGraph.CFGUtils.construct(B2R2.FrontEnd.BinHandler -> 'b option)
  name: "val construct: BinHandler -> 'b option -> CFGBuilder * Funcs"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_construct_B2R2_FrontEnd_BinHandler_____b_option_
  commentId: M:B2R2.BinGraph.construct``1(B2R2.FrontEnd.BinHandler,Microsoft.FSharp.Core.FSharpOption{``0})
  fullName: "val B2R2.BinGraph.CFGUtils.construct: B2R2.FrontEnd.BinHandler -> 'b option -> B2R2.BinGraph.CFGBuilder * B2R2.BinGraph.Funcs"
  nameWithType: "val CFGUtils.construct: BinHandler -> 'b option -> CFGBuilder * Funcs"
- uid: B2R2.BinGraph.CFGUtils.construct*
  name: construct
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_construct_
  commentId: Overload:B2R2.BinGraph.CFGUtils.construct*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.construct
  nameWithType: CFGUtils.construct
- uid: B2R2.BinGraph.CFGUtils.disasmCFGToJson(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFG<B2R2.BinGraph.DisassemblyBBL> -> B2R2.Addr)
  name: 'val disasmCFGToJson: BinHandler -> CFG<DisassemblyBBL> -> Addr -> string'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_disasmCFGToJson_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFG_B2R2_BinGraph_DisassemblyBBL_____B2R2_Addr_
  commentId: M:B2R2.BinGraph.disasmCFGToJson(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.DiGraph{B2R2.BinGraph.DisassemblyBBL,B2R2.BinGraph.CFGEdge},System.UInt64)
  fullName: 'val B2R2.BinGraph.CFGUtils.disasmCFGToJson: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFG<B2R2.BinGraph.DisassemblyBBL> -> B2R2.Addr -> string'
  nameWithType: 'val CFGUtils.disasmCFGToJson: BinHandler -> CFG<DisassemblyBBL> -> Addr -> string'
- uid: B2R2.BinGraph.CFGUtils.disasmCFGToJson*
  name: disasmCFGToJson
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_disasmCFGToJson_
  commentId: Overload:B2R2.BinGraph.CFGUtils.disasmCFGToJson*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.disasmCFGToJson
  nameWithType: CFGUtils.disasmCFGToJson
- uid: B2R2.BinGraph.CFGUtils.disasmVertexToString(B2R2.BinGraph.DisasmVertex)
  name: 'val disasmVertexToString: DisasmVertex -> string'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_disasmVertexToString_B2R2_BinGraph_DisasmVertex_
  commentId: M:B2R2.BinGraph.disasmVertexToString(B2R2.BinGraph.Vertex{B2R2.BinGraph.DisassemblyBBL})
  fullName: 'val B2R2.BinGraph.CFGUtils.disasmVertexToString: B2R2.BinGraph.DisasmVertex -> string'
  nameWithType: 'val CFGUtils.disasmVertexToString: DisasmVertex -> string'
- uid: B2R2.BinGraph.CFGUtils.disasmVertexToString*
  name: disasmVertexToString
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_disasmVertexToString_
  commentId: Overload:B2R2.BinGraph.CFGUtils.disasmVertexToString*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.disasmVertexToString
  nameWithType: CFGUtils.disasmVertexToString
- uid: B2R2.BinGraph.CFGUtils.getDisasmSuccessors(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.DisassemblyBBL)
  name: 'val getDisasmSuccessors: BinHandler -> CFGBuilder -> DisassemblyBBL -> Addr * CFGEdge option list'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getDisasmSuccessors_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_BinGraph_DisassemblyBBL_
  commentId: M:B2R2.BinGraph.getDisasmSuccessors(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,B2R2.BinGraph.DisassemblyBBL)
  fullName: 'val B2R2.BinGraph.CFGUtils.getDisasmSuccessors: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.DisassemblyBBL -> B2R2.Addr * B2R2.BinGraph.CFGEdge option list'
  nameWithType: 'val CFGUtils.getDisasmSuccessors: BinHandler -> CFGBuilder -> DisassemblyBBL -> Addr * CFGEdge option list'
- uid: B2R2.BinGraph.CFGUtils.getDisasmSuccessors*
  name: getDisasmSuccessors
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getDisasmSuccessors_
  commentId: Overload:B2R2.BinGraph.CFGUtils.getDisasmSuccessors*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.getDisasmSuccessors
  nameWithType: CFGUtils.getDisasmSuccessors
- uid: B2R2.BinGraph.CFGUtils.getIRSuccessors(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.IRBBL)
  name: 'val getIRSuccessors: BinHandler -> CFGBuilder -> IRBBL -> Addr * int * CFGEdge option list'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getIRSuccessors_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_BinGraph_IRBBL_
  commentId: M:B2R2.BinGraph.getIRSuccessors(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,B2R2.BinGraph.IRBBL)
  fullName: 'val B2R2.BinGraph.CFGUtils.getIRSuccessors: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.BinGraph.IRBBL -> B2R2.Addr * int * B2R2.BinGraph.CFGEdge option list'
  nameWithType: 'val CFGUtils.getIRSuccessors: BinHandler -> CFGBuilder -> IRBBL -> Addr * int * CFGEdge option list'
- uid: B2R2.BinGraph.CFGUtils.getIRSuccessors*
  name: getIRSuccessors
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getIRSuccessors_
  commentId: Overload:B2R2.BinGraph.CFGUtils.getIRSuccessors*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.getIRSuccessors
  nameWithType: CFGUtils.getIRSuccessors
- uid: B2R2.BinGraph.CFGUtils.getJmpTarget(B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.FrontEnd.Instruction -> '?31173 -> B2R2.Addr * '?31173 option list)
  name: "val getJmpTarget: BinHandler -> CFGBuilder -> Instruction -> '?31173 -> Addr * '?31173 option list -> Addr * '?31173 option list"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getJmpTarget_B2R2_FrontEnd_BinHandler____B2R2_BinGraph_CFGBuilder____B2R2_FrontEnd_Instruction______31173____B2R2_Addr_____31173_option_list_
  commentId: M:B2R2.BinGraph.getJmpTarget``1(B2R2.FrontEnd.BinHandler,B2R2.BinGraph.CFGBuilder,B2R2.FrontEnd.Instruction,``0,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.UInt64,``0}}})
  fullName: "val B2R2.BinGraph.CFGUtils.getJmpTarget: B2R2.FrontEnd.BinHandler -> B2R2.BinGraph.CFGBuilder -> B2R2.FrontEnd.Instruction -> '?31173 -> B2R2.Addr * '?31173 option list -> B2R2.Addr * '?31173 option list"
  nameWithType: "val CFGUtils.getJmpTarget: BinHandler -> CFGBuilder -> Instruction -> '?31173 -> Addr * '?31173 option list -> Addr * '?31173 option list"
- uid: B2R2.BinGraph.CFGUtils.getJmpTarget*
  name: getJmpTarget
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getJmpTarget_
  commentId: Overload:B2R2.BinGraph.CFGUtils.getJmpTarget*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.getJmpTarget
  nameWithType: CFGUtils.getJmpTarget
- uid: B2R2.BinGraph.CFGUtils.getNextPpoint(B2R2.Addr * int -> B2R2.BinIR.LowUIR.Stmt)
  name: 'val getNextPpoint: Addr * int -> Stmt -> Addr * int'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getNextPpoint_B2R2_Addr___int____B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinGraph.getNextPpoint(System.UInt64,System.Int32,B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinGraph.CFGUtils.getNextPpoint: B2R2.Addr * int -> B2R2.BinIR.LowUIR.Stmt -> B2R2.Addr * int'
  nameWithType: 'val CFGUtils.getNextPpoint: Addr * int -> Stmt -> Addr * int'
- uid: B2R2.BinGraph.CFGUtils.getNextPpoint*
  name: getNextPpoint
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_getNextPpoint_
  commentId: Overload:B2R2.BinGraph.CFGUtils.getNextPpoint*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.getNextPpoint
  nameWithType: CFGUtils.getNextPpoint
- uid: B2R2.BinGraph.CFGUtils.irCFGToJson('?31193 -> B2R2.BinGraph.CFG<B2R2.BinGraph.IRBBL> -> '?31194)
  name: "val irCFGToJson: '?31193 -> CFG<IRBBL> -> '?31194 -> string"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_irCFGToJson___31193____B2R2_BinGraph_CFG_B2R2_BinGraph_IRBBL_______31194_
  commentId: M:B2R2.BinGraph.irCFGToJson``2(``0,B2R2.BinGraph.DiGraph{B2R2.BinGraph.IRBBL,B2R2.BinGraph.CFGEdge},``1)
  fullName: "val B2R2.BinGraph.CFGUtils.irCFGToJson: '?31193 -> B2R2.BinGraph.CFG<B2R2.BinGraph.IRBBL> -> '?31194 -> string"
  nameWithType: "val CFGUtils.irCFGToJson: '?31193 -> CFG<IRBBL> -> '?31194 -> string"
- uid: B2R2.BinGraph.CFGUtils.irCFGToJson*
  name: irCFGToJson
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_irCFGToJson_
  commentId: Overload:B2R2.BinGraph.CFGUtils.irCFGToJson*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.irCFGToJson
  nameWithType: CFGUtils.irCFGToJson
- uid: B2R2.BinGraph.CFGUtils.irVertexToString(B2R2.BinGraph.IRVertex)
  name: 'val irVertexToString: IRVertex -> string'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_irVertexToString_B2R2_BinGraph_IRVertex_
  commentId: M:B2R2.BinGraph.irVertexToString(B2R2.BinGraph.Vertex{B2R2.BinGraph.IRBBL})
  fullName: 'val B2R2.BinGraph.CFGUtils.irVertexToString: B2R2.BinGraph.IRVertex -> string'
  nameWithType: 'val CFGUtils.irVertexToString: IRVertex -> string'
- uid: B2R2.BinGraph.CFGUtils.irVertexToString*
  name: irVertexToString
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_irVertexToString_
  commentId: Overload:B2R2.BinGraph.CFGUtils.irVertexToString*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.irVertexToString
  nameWithType: CFGUtils.irVertexToString
- uid: B2R2.BinGraph.CFGUtils.isCondJump(B2R2.FrontEnd.Instruction)
  name: 'val isCondJump: Instruction -> bool'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isCondJump_B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.isCondJump(B2R2.FrontEnd.Instruction)
  fullName: 'val B2R2.BinGraph.CFGUtils.isCondJump: B2R2.FrontEnd.Instruction -> bool'
  nameWithType: 'val CFGUtils.isCondJump: Instruction -> bool'
- uid: B2R2.BinGraph.CFGUtils.isCondJump*
  name: isCondJump
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isCondJump_
  commentId: Overload:B2R2.BinGraph.CFGUtils.isCondJump*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.isCondJump
  nameWithType: CFGUtils.isCondJump
- uid: B2R2.BinGraph.CFGUtils.isDisasmBlockEnd(B2R2.FrontEnd.Instruction)
  name: 'val isDisasmBlockEnd: Instruction -> bool'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isDisasmBlockEnd_B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.isDisasmBlockEnd(B2R2.FrontEnd.Instruction)
  fullName: 'val B2R2.BinGraph.CFGUtils.isDisasmBlockEnd: B2R2.FrontEnd.Instruction -> bool'
  nameWithType: 'val CFGUtils.isDisasmBlockEnd: Instruction -> bool'
- uid: B2R2.BinGraph.CFGUtils.isDisasmBlockEnd*
  name: isDisasmBlockEnd
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isDisasmBlockEnd_
  commentId: Overload:B2R2.BinGraph.CFGUtils.isDisasmBlockEnd*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.isDisasmBlockEnd
  nameWithType: CFGUtils.isDisasmBlockEnd
- uid: B2R2.BinGraph.CFGUtils.isDisasmExit(B2R2.FrontEnd.Instruction)
  name: 'val isDisasmExit: Instruction -> bool'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isDisasmExit_B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.isDisasmExit(B2R2.FrontEnd.Instruction)
  fullName: 'val B2R2.BinGraph.CFGUtils.isDisasmExit: B2R2.FrontEnd.Instruction -> bool'
  nameWithType: 'val CFGUtils.isDisasmExit: Instruction -> bool'
- uid: B2R2.BinGraph.CFGUtils.isDisasmExit*
  name: isDisasmExit
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isDisasmExit_
  commentId: Overload:B2R2.BinGraph.CFGUtils.isDisasmExit*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.isDisasmExit
  nameWithType: CFGUtils.isDisasmExit
- uid: B2R2.BinGraph.CFGUtils.isExecutable(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: 'val isExecutable: BinHandler -> Addr -> bool'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isExecutable_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.BinGraph.isExecutable(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'val B2R2.BinGraph.CFGUtils.isExecutable: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> bool'
  nameWithType: 'val CFGUtils.isExecutable: BinHandler -> Addr -> bool'
- uid: B2R2.BinGraph.CFGUtils.isExecutable*
  name: isExecutable
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isExecutable_
  commentId: Overload:B2R2.BinGraph.CFGUtils.isExecutable*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.isExecutable
  nameWithType: CFGUtils.isExecutable
- uid: B2R2.BinGraph.CFGUtils.isUncondJump(B2R2.FrontEnd.Instruction)
  name: 'val isUncondJump: Instruction -> bool'
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isUncondJump_B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.isUncondJump(B2R2.FrontEnd.Instruction)
  fullName: 'val B2R2.BinGraph.CFGUtils.isUncondJump: B2R2.FrontEnd.Instruction -> bool'
  nameWithType: 'val CFGUtils.isUncondJump: Instruction -> bool'
- uid: B2R2.BinGraph.CFGUtils.isUncondJump*
  name: isUncondJump
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_isUncondJump_
  commentId: Overload:B2R2.BinGraph.CFGUtils.isUncondJump*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.isUncondJump
  nameWithType: CFGUtils.isUncondJump
- uid: B2R2.BinGraph.CFGUtils.toJson('?31191 -> B2R2.BinGraph.CFG<'?31192> -> string -> B2R2.BinGraph.Vertex<'?31192> -> string -> System.Text.StringBuilder * '?31191 * int -> B2R2.BinGraph.Vertex<'?31192> -> System.Text.StringBuilder * '?31191 * int)
  name: "val toJson: '?31191 -> CFG<'?31192> -> string -> Vertex<'?31192> -> string -> StringBuilder * '?31191 * int -> Vertex<'?31192> -> StringBuilder * '?31191 * int -> string"
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_toJson___31191____B2R2_BinGraph_CFG___31192_____string____B2R2_BinGraph_Vertex___31192_____string____System_Text_StringBuilder_____31191___int____B2R2_BinGraph_Vertex___31192_____System_Text_StringBuilder_____31191___int_
  commentId: M:B2R2.BinGraph.toJson``2(``0,B2R2.BinGraph.DiGraph{``1,B2R2.BinGraph.CFGEdge},System.String,Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{``1},System.String},Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.Text.StringBuilder,``0,System.Int32},Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{``1},System.Tuple{System.Text.StringBuilder,``0,System.Int32}}})
  fullName: "val B2R2.BinGraph.CFGUtils.toJson: '?31191 -> B2R2.BinGraph.CFG<'?31192> -> string -> B2R2.BinGraph.Vertex<'?31192> -> string -> System.Text.StringBuilder * '?31191 * int -> B2R2.BinGraph.Vertex<'?31192> -> System.Text.StringBuilder * '?31191 * int -> string"
  nameWithType: "val CFGUtils.toJson: '?31191 -> CFG<'?31192> -> string -> Vertex<'?31192> -> string -> StringBuilder * '?31191 * int -> Vertex<'?31192> -> StringBuilder * '?31191 * int -> string"
- uid: B2R2.BinGraph.CFGUtils.toJson*
  name: toJson
  href: api/B2R2.BinGraph.CFGUtils.html#B2R2_BinGraph_CFGUtils_toJson_
  commentId: Overload:B2R2.BinGraph.CFGUtils.toJson*
  isSpec: "True"
  fullName: B2R2.BinGraph.CFGUtils.toJson
  nameWithType: CFGUtils.toJson
- uid: B2R2.BinGraph.DiGraph`2
  name: DiGraph<'V, 'E>
  href: api/B2R2.BinGraph.DiGraph-2.html
  commentId: T:B2R2.BinGraph.DiGraph`2
  fullName: B2R2.BinGraph.DiGraph`2
  nameWithType: B2R2.BinGraph.DiGraph`2
- uid: B2R2.BinGraph.DiGraph`2.#ctor(unit)
  name: "new: unit -> DiGraph<'V,'E>"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2__ctor_unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.#ctor
  fullName: "new: unit -> B2R2.BinGraph.DiGraph<'V,'E>"
  nameWithType: "new: unit -> DiGraph<'V,'E>"
- uid: B2R2.BinGraph.DiGraph`2.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2__ctor_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph
  nameWithType: DiGraph.( .ctor )
- uid: B2R2.BinGraph.DiGraph`2.AddEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E)
  name: "abstract member AddEdge: Vertex<'V> -> Vertex<'V> -> 'E -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_AddEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V______E_
  commentId: M:B2R2.BinGraph.DiGraph`2.AddEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0},`1)
  fullName: "abstract member B2R2.BinGraph.DiGraph.AddEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E -> unit"
  nameWithType: "abstract member DiGraph.AddEdge: Vertex<'V> -> Vertex<'V> -> 'E -> unit"
- uid: B2R2.BinGraph.DiGraph`2.AddEdge*
  name: AddEdge
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_AddEdge_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.AddEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.AddEdge
  nameWithType: DiGraph.AddEdge
- uid: B2R2.BinGraph.DiGraph`2.AddVertex('V)
  name: "abstract member AddVertex: 'V -> Vertex<'V>"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_AddVertex__V_
  commentId: M:B2R2.BinGraph.DiGraph`2.AddVertex(`0)
  fullName: "abstract member B2R2.BinGraph.DiGraph.AddVertex: 'V -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "abstract member DiGraph.AddVertex: 'V -> Vertex<'V>"
- uid: B2R2.BinGraph.DiGraph`2.AddVertex*
  name: AddVertex
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_AddVertex_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.AddVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.AddVertex
  nameWithType: DiGraph.AddVertex
- uid: B2R2.BinGraph.DiGraph`2.FindEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>)
  name: "abstract member FindEdge: Vertex<'V> -> Vertex<'V> -> 'E"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.DiGraph`2.FindEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0})
  fullName: "abstract member B2R2.BinGraph.DiGraph.FindEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E"
  nameWithType: "abstract member DiGraph.FindEdge: Vertex<'V> -> Vertex<'V> -> 'E"
- uid: B2R2.BinGraph.DiGraph`2.FindEdge*
  name: FindEdge
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindEdge_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FindEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FindEdge
  nameWithType: DiGraph.FindEdge
- uid: B2R2.BinGraph.DiGraph`2.FindVertex(B2R2.BinGraph.Vertex<'V>)
  name: "abstract member FindVertex: Vertex<'V> -> Vertex<'V>"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindVertex_B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.DiGraph`2.FindVertex(B2R2.BinGraph.Vertex{`0})
  fullName: "abstract member B2R2.BinGraph.DiGraph.FindVertex: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "abstract member DiGraph.FindVertex: Vertex<'V> -> Vertex<'V>"
- uid: B2R2.BinGraph.DiGraph`2.FindVertex*
  name: FindVertex
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindVertex_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FindVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FindVertex
  nameWithType: DiGraph.FindVertex
- uid: B2R2.BinGraph.DiGraph`2.FindVertexByData('V)
  name: "abstract member FindVertexByData: 'V -> Vertex<'V>"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindVertexByData__V_
  commentId: M:B2R2.BinGraph.DiGraph`2.FindVertexByData(`0)
  fullName: "abstract member B2R2.BinGraph.DiGraph.FindVertexByData: 'V -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "abstract member DiGraph.FindVertexByData: 'V -> Vertex<'V>"
- uid: B2R2.BinGraph.DiGraph`2.FindVertexByData*
  name: FindVertexByData
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindVertexByData_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FindVertexByData*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FindVertexByData
  nameWithType: DiGraph.FindVertexByData
- uid: B2R2.BinGraph.DiGraph`2.FindVertexByID(B2R2.BinGraph.VertexID)
  name: "member FindVertexByID: VertexID -> Vertex<'V>"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindVertexByID_B2R2_BinGraph_VertexID_
  commentId: M:B2R2.BinGraph.DiGraph`2.FindVertexByID(System.Int32)
  fullName: "member B2R2.BinGraph.DiGraph.FindVertexByID: B2R2.BinGraph.VertexID -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member DiGraph.FindVertexByID: VertexID -> Vertex<'V>"
- uid: B2R2.BinGraph.DiGraph`2.FindVertexByID*
  name: FindVertexByID
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FindVertexByID_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FindVertexByID*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FindVertexByID
  nameWithType: DiGraph.FindVertexByID
- uid: B2R2.BinGraph.DiGraph`2.FoldEdge('a -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'a -> 'a)
  name: "abstract member FoldEdge: 'a -> Vertex<'V> -> Vertex<'V> -> 'a -> 'a -> 'a"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldEdge__a____B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V______a_____a_
  commentId: M:B2R2.BinGraph.DiGraph`2.FoldEdge``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},``0}}},``0)
  fullName: "abstract member B2R2.BinGraph.DiGraph.FoldEdge: 'a -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'a -> 'a -> 'a"
  nameWithType: "abstract member DiGraph.FoldEdge: 'a -> Vertex<'V> -> Vertex<'V> -> 'a -> 'a -> 'a"
- uid: B2R2.BinGraph.DiGraph`2.FoldEdge*
  name: FoldEdge
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldEdge_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FoldEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FoldEdge
  nameWithType: DiGraph.FoldEdge
- uid: B2R2.BinGraph.DiGraph`2.FoldEdgeDFS('?19316 -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> '?19316 -> '?19316)
  name: "member FoldEdgeDFS: '?19316 -> Vertex<'V> -> Vertex<'V> -> '?19316 -> '?19316 -> '?19316"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldEdgeDFS___19316____B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V_______19316______19316_
  commentId: M:B2R2.BinGraph.DiGraph`2.FoldEdgeDFS``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},``0}}},``0)
  fullName: "member B2R2.BinGraph.DiGraph.FoldEdgeDFS: '?19316 -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> '?19316 -> '?19316 -> '?19316"
  nameWithType: "member DiGraph.FoldEdgeDFS: '?19316 -> Vertex<'V> -> Vertex<'V> -> '?19316 -> '?19316 -> '?19316"
- uid: B2R2.BinGraph.DiGraph`2.FoldEdgeDFS*
  name: FoldEdgeDFS
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldEdgeDFS_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FoldEdgeDFS*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FoldEdgeDFS
  nameWithType: DiGraph.FoldEdgeDFS
- uid: B2R2.BinGraph.DiGraph`2.FoldVertex('a -> B2R2.BinGraph.Vertex<'V> -> 'a -> 'a)
  name: "abstract member FoldVertex: 'a -> Vertex<'V> -> 'a -> 'a -> 'a"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldVertex__a____B2R2_BinGraph_Vertex__V______a_____a_
  commentId: M:B2R2.BinGraph.DiGraph`2.FoldVertex``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},``0}},``0)
  fullName: "abstract member B2R2.BinGraph.DiGraph.FoldVertex: 'a -> B2R2.BinGraph.Vertex<'V> -> 'a -> 'a -> 'a"
  nameWithType: "abstract member DiGraph.FoldVertex: 'a -> Vertex<'V> -> 'a -> 'a -> 'a"
- uid: B2R2.BinGraph.DiGraph`2.FoldVertex*
  name: FoldVertex
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldVertex_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FoldVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FoldVertex
  nameWithType: DiGraph.FoldVertex
- uid: B2R2.BinGraph.DiGraph`2.FoldVertexBFS('?19309 -> B2R2.BinGraph.Vertex<'V> -> '?19309 -> '?19309)
  name: "member FoldVertexBFS: '?19309 -> Vertex<'V> -> '?19309 -> '?19309 -> '?19309"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldVertexBFS___19309____B2R2_BinGraph_Vertex__V_______19309______19309_
  commentId: M:B2R2.BinGraph.DiGraph`2.FoldVertexBFS``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},``0}},``0)
  fullName: "member B2R2.BinGraph.DiGraph.FoldVertexBFS: '?19309 -> B2R2.BinGraph.Vertex<'V> -> '?19309 -> '?19309 -> '?19309"
  nameWithType: "member DiGraph.FoldVertexBFS: '?19309 -> Vertex<'V> -> '?19309 -> '?19309 -> '?19309"
- uid: B2R2.BinGraph.DiGraph`2.FoldVertexBFS*
  name: FoldVertexBFS
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldVertexBFS_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FoldVertexBFS*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FoldVertexBFS
  nameWithType: DiGraph.FoldVertexBFS
- uid: B2R2.BinGraph.DiGraph`2.FoldVertexDFS('?19306 -> B2R2.BinGraph.Vertex<'V> -> '?19306 -> '?19306)
  name: "member FoldVertexDFS: '?19306 -> Vertex<'V> -> '?19306 -> '?19306 -> '?19306"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldVertexDFS___19306____B2R2_BinGraph_Vertex__V_______19306______19306_
  commentId: M:B2R2.BinGraph.DiGraph`2.FoldVertexDFS``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},``0}},``0)
  fullName: "member B2R2.BinGraph.DiGraph.FoldVertexDFS: '?19306 -> B2R2.BinGraph.Vertex<'V> -> '?19306 -> '?19306 -> '?19306"
  nameWithType: "member DiGraph.FoldVertexDFS: '?19306 -> Vertex<'V> -> '?19306 -> '?19306 -> '?19306"
- uid: B2R2.BinGraph.DiGraph`2.FoldVertexDFS*
  name: FoldVertexDFS
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_FoldVertexDFS_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.FoldVertexDFS*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.FoldVertexDFS
  nameWithType: DiGraph.FoldVertexDFS
- uid: B2R2.BinGraph.DiGraph`2.GetRoot(unit)
  name: "member GetRoot: unit -> Vertex<'V>"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_GetRoot_unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.GetRoot
  fullName: "member B2R2.BinGraph.DiGraph.GetRoot: unit -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member DiGraph.GetRoot: unit -> Vertex<'V>"
- uid: B2R2.BinGraph.DiGraph`2.GetRoot*
  name: GetRoot
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_GetRoot_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.GetRoot*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.GetRoot
  nameWithType: DiGraph.GetRoot
- uid: B2R2.BinGraph.DiGraph`2.IsEmpty(unit)
  name: 'abstract member IsEmpty: unit -> bool'
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IsEmpty_unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.IsEmpty
  fullName: 'abstract member B2R2.BinGraph.DiGraph.IsEmpty: unit -> bool'
  nameWithType: 'abstract member DiGraph.IsEmpty: unit -> bool'
- uid: B2R2.BinGraph.DiGraph`2.IsEmpty*
  name: IsEmpty
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IsEmpty_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.IsEmpty*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.IsEmpty
  nameWithType: DiGraph.IsEmpty
- uid: B2R2.BinGraph.DiGraph`2.IterEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> unit)
  name: "abstract member IterEdge: Vertex<'V> -> Vertex<'V> -> unit -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V_____unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.IterEdge(Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.Unit}})
  fullName: "abstract member B2R2.BinGraph.DiGraph.IterEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> unit -> unit"
  nameWithType: "abstract member DiGraph.IterEdge: Vertex<'V> -> Vertex<'V> -> unit -> unit"
- uid: B2R2.BinGraph.DiGraph`2.IterEdge*
  name: IterEdge
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterEdge_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.IterEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.IterEdge
  nameWithType: DiGraph.IterEdge
- uid: B2R2.BinGraph.DiGraph`2.IterEdgeDFS(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> unit)
  name: "member IterEdgeDFS: Vertex<'V> -> Vertex<'V> -> unit -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterEdgeDFS_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V_____unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.IterEdgeDFS(Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.Unit}})
  fullName: "member B2R2.BinGraph.DiGraph.IterEdgeDFS: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> unit -> unit"
  nameWithType: "member DiGraph.IterEdgeDFS: Vertex<'V> -> Vertex<'V> -> unit -> unit"
- uid: B2R2.BinGraph.DiGraph`2.IterEdgeDFS*
  name: IterEdgeDFS
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterEdgeDFS_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.IterEdgeDFS*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.IterEdgeDFS
  nameWithType: DiGraph.IterEdgeDFS
- uid: B2R2.BinGraph.DiGraph`2.IterVertex(B2R2.BinGraph.Vertex<'V> -> unit)
  name: "abstract member IterVertex: Vertex<'V> -> unit -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterVertex_B2R2_BinGraph_Vertex__V_____unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.IterVertex(Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.Unit})
  fullName: "abstract member B2R2.BinGraph.DiGraph.IterVertex: B2R2.BinGraph.Vertex<'V> -> unit -> unit"
  nameWithType: "abstract member DiGraph.IterVertex: Vertex<'V> -> unit -> unit"
- uid: B2R2.BinGraph.DiGraph`2.IterVertex*
  name: IterVertex
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterVertex_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.IterVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.IterVertex
  nameWithType: DiGraph.IterVertex
- uid: B2R2.BinGraph.DiGraph`2.IterVertexBFS(B2R2.BinGraph.Vertex<'V> -> unit)
  name: "member IterVertexBFS: Vertex<'V> -> unit -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterVertexBFS_B2R2_BinGraph_Vertex__V_____unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.IterVertexBFS(Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.Unit})
  fullName: "member B2R2.BinGraph.DiGraph.IterVertexBFS: B2R2.BinGraph.Vertex<'V> -> unit -> unit"
  nameWithType: "member DiGraph.IterVertexBFS: Vertex<'V> -> unit -> unit"
- uid: B2R2.BinGraph.DiGraph`2.IterVertexBFS*
  name: IterVertexBFS
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterVertexBFS_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.IterVertexBFS*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.IterVertexBFS
  nameWithType: DiGraph.IterVertexBFS
- uid: B2R2.BinGraph.DiGraph`2.IterVertexDFS(B2R2.BinGraph.Vertex<'V> -> unit)
  name: "member IterVertexDFS: Vertex<'V> -> unit -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterVertexDFS_B2R2_BinGraph_Vertex__V_____unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.IterVertexDFS(Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},Microsoft.FSharp.Core.Unit})
  fullName: "member B2R2.BinGraph.DiGraph.IterVertexDFS: B2R2.BinGraph.Vertex<'V> -> unit -> unit"
  nameWithType: "member DiGraph.IterVertexDFS: Vertex<'V> -> unit -> unit"
- uid: B2R2.BinGraph.DiGraph`2.IterVertexDFS*
  name: IterVertexDFS
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_IterVertexDFS_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.IterVertexDFS*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.IterVertexDFS
  nameWithType: DiGraph.IterVertexDFS
- uid: B2R2.BinGraph.DiGraph`2.RemoveEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>)
  name: "abstract member RemoveEdge: Vertex<'V> -> Vertex<'V> -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_RemoveEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.DiGraph`2.RemoveEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0})
  fullName: "abstract member B2R2.BinGraph.DiGraph.RemoveEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> unit"
  nameWithType: "abstract member DiGraph.RemoveEdge: Vertex<'V> -> Vertex<'V> -> unit"
- uid: B2R2.BinGraph.DiGraph`2.RemoveEdge*
  name: RemoveEdge
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_RemoveEdge_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.RemoveEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.RemoveEdge
  nameWithType: DiGraph.RemoveEdge
- uid: B2R2.BinGraph.DiGraph`2.RemoveVertex(B2R2.BinGraph.Vertex<'V>)
  name: "abstract member RemoveVertex: Vertex<'V> -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_RemoveVertex_B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.DiGraph`2.RemoveVertex(B2R2.BinGraph.Vertex{`0})
  fullName: "abstract member B2R2.BinGraph.DiGraph.RemoveVertex: B2R2.BinGraph.Vertex<'V> -> unit"
  nameWithType: "abstract member DiGraph.RemoveVertex: Vertex<'V> -> unit"
- uid: B2R2.BinGraph.DiGraph`2.RemoveVertex*
  name: RemoveVertex
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_RemoveVertex_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.RemoveVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.RemoveVertex
  nameWithType: DiGraph.RemoveVertex
- uid: B2R2.BinGraph.DiGraph`2.Reverse(unit)
  name: "abstract member Reverse: unit -> DiGraph<'V,'E>"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_Reverse_unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.Reverse
  fullName: "abstract member B2R2.BinGraph.DiGraph.Reverse: unit -> B2R2.BinGraph.DiGraph<'V,'E>"
  nameWithType: "abstract member DiGraph.Reverse: unit -> DiGraph<'V,'E>"
- uid: B2R2.BinGraph.DiGraph`2.Reverse*
  name: Reverse
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_Reverse_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.Reverse*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.Reverse
  nameWithType: DiGraph.Reverse
- uid: B2R2.BinGraph.DiGraph`2.SetRoot(B2R2.BinGraph.Vertex<'V>)
  name: "member SetRoot: Vertex<'V> -> unit"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_SetRoot_B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.DiGraph`2.SetRoot(B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.DiGraph.SetRoot: B2R2.BinGraph.Vertex<'V> -> unit"
  nameWithType: "member DiGraph.SetRoot: Vertex<'V> -> unit"
- uid: B2R2.BinGraph.DiGraph`2.SetRoot*
  name: SetRoot
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_SetRoot_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.SetRoot*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.SetRoot
  nameWithType: DiGraph.SetRoot
- uid: B2R2.BinGraph.DiGraph`2.Size(unit)
  name: 'abstract member Size: unit -> int'
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_Size_unit_
  commentId: M:B2R2.BinGraph.DiGraph`2.Size
  fullName: 'abstract member B2R2.BinGraph.DiGraph.Size: unit -> int'
  nameWithType: 'abstract member DiGraph.Size: unit -> int'
- uid: B2R2.BinGraph.DiGraph`2.Size*
  name: Size
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_Size_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.Size*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.Size
  nameWithType: DiGraph.Size
- uid: B2R2.BinGraph.DiGraph`2.ToDOTStr(string -> B2R2.BinGraph.Vertex<'V> -> string -> B2R2.BinGraph.Edge<'E> -> string)
  name: "member ToDOTStr: string -> Vertex<'V> -> string -> Edge<'E> -> string -> string"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_ToDOTStr_string____B2R2_BinGraph_Vertex__V_____string____B2R2_BinGraph_Edge__E_____string_
  commentId: M:B2R2.BinGraph.DiGraph`2.ToDOTStr(System.String,Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Vertex{`0},System.String},Microsoft.FSharp.Core.FSharpFunc{B2R2.BinGraph.Edge{`1},System.String})
  fullName: "member B2R2.BinGraph.DiGraph.ToDOTStr: string -> B2R2.BinGraph.Vertex<'V> -> string -> B2R2.BinGraph.Edge<'E> -> string -> string"
  nameWithType: "member DiGraph.ToDOTStr: string -> Vertex<'V> -> string -> Edge<'E> -> string -> string"
- uid: B2R2.BinGraph.DiGraph`2.ToDOTStr*
  name: ToDOTStr
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_ToDOTStr_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.ToDOTStr*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.ToDOTStr
  nameWithType: DiGraph.ToDOTStr
- uid: B2R2.BinGraph.DiGraph`2.TryFindVertexByData('V)
  name: "abstract member TryFindVertexByData: 'V -> Vertex<'V> option"
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_TryFindVertexByData__V_
  commentId: M:B2R2.BinGraph.DiGraph`2.TryFindVertexByData(`0)
  fullName: "abstract member B2R2.BinGraph.DiGraph.TryFindVertexByData: 'V -> B2R2.BinGraph.Vertex<'V> option"
  nameWithType: "abstract member DiGraph.TryFindVertexByData: 'V -> Vertex<'V> option"
- uid: B2R2.BinGraph.DiGraph`2.TryFindVertexByData*
  name: TryFindVertexByData
  href: api/B2R2.BinGraph.DiGraph-2.html#B2R2_BinGraph_DiGraph_2_TryFindVertexByData_
  commentId: Overload:B2R2.BinGraph.DiGraph`2.TryFindVertexByData*
  isSpec: "True"
  fullName: B2R2.BinGraph.DiGraph.TryFindVertexByData
  nameWithType: DiGraph.TryFindVertexByData
- uid: B2R2.BinGraph.DisasHeuristic
  name: DisasHeuristic (mod)
  href: api/B2R2.BinGraph.DisasHeuristic.html
  commentId: T:B2R2.BinGraph.DisasHeuristic
  fullName: B2R2.BinGraph.DisasHeuristic
  nameWithType: B2R2.BinGraph.DisasHeuristic
- uid: B2R2.BinGraph.DisasHeuristic.analyzeLibcStartBlock(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Stmt [])
  name: 'val analyzeLibcStartBlock: EvalState -> Stmt [] -> EvalState'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_analyzeLibcStartBlock_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Stmt____
  commentId: M:B2R2.BinGraph.analyzeLibcStartBlock(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Stmt[])
  fullName: 'val B2R2.BinGraph.DisasHeuristic.analyzeLibcStartBlock: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Stmt [] -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val DisasHeuristic.analyzeLibcStartBlock: EvalState -> Stmt [] -> EvalState'
- uid: B2R2.BinGraph.DisasHeuristic.analyzeLibcStartBlock*
  name: analyzeLibcStartBlock
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_analyzeLibcStartBlock_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.analyzeLibcStartBlock*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.analyzeLibcStartBlock
  nameWithType: DisasHeuristic.analyzeLibcStartBlock
- uid: B2R2.BinGraph.DisasHeuristic.buildBlock('T list -> uint64 -> uint64 -> Map<uint64,'T>)
  name: "val buildBlock: 'T list -> uint64 -> uint64 -> Map<uint64,'T> -> 'T list"
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_buildBlock__T_list____uint64____uint64____Map_uint64__T__
  commentId: M:B2R2.BinGraph.buildBlock``1(Microsoft.FSharp.Collections.FSharpList{``0},System.UInt64,System.UInt64,Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``0})
  fullName: "val B2R2.BinGraph.DisasHeuristic.buildBlock: 'T list -> uint64 -> uint64 -> Map<uint64,'T> -> 'T list"
  nameWithType: "val DisasHeuristic.buildBlock: 'T list -> uint64 -> uint64 -> Map<uint64,'T> -> 'T list"
- uid: B2R2.BinGraph.DisasHeuristic.buildBlock*
  name: buildBlock
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_buildBlock_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.buildBlock*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.buildBlock
  nameWithType: DisasHeuristic.buildBlock
- uid: B2R2.BinGraph.DisasHeuristic.findNewLeadersByLibcHeuristic(uint64 list -> B2R2.FrontEnd.BinHandler -> B2R2.BinIR.LowUIR.Eval.EvalState)
  name: 'val findNewLeadersByLibcHeuristic: uint64 list -> BinHandler -> EvalState -> uint64 list'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_findNewLeadersByLibcHeuristic_uint64_list____B2R2_FrontEnd_BinHandler____B2R2_BinIR_LowUIR_Eval_EvalState_
  commentId: M:B2R2.BinGraph.findNewLeadersByLibcHeuristic(Microsoft.FSharp.Collections.FSharpList{System.UInt64},B2R2.FrontEnd.BinHandler,B2R2.BinIR.LowUIR.Eval.EvalState)
  fullName: 'val B2R2.BinGraph.DisasHeuristic.findNewLeadersByLibcHeuristic: uint64 list -> B2R2.FrontEnd.BinHandler -> B2R2.BinIR.LowUIR.Eval.EvalState -> uint64 list'
  nameWithType: 'val DisasHeuristic.findNewLeadersByLibcHeuristic: uint64 list -> BinHandler -> EvalState -> uint64 list'
- uid: B2R2.BinGraph.DisasHeuristic.findNewLeadersByLibcHeuristic*
  name: findNewLeadersByLibcHeuristic
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_findNewLeadersByLibcHeuristic_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.findNewLeadersByLibcHeuristic*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.findNewLeadersByLibcHeuristic
  nameWithType: DisasHeuristic.findNewLeadersByLibcHeuristic
- uid: B2R2.BinGraph.DisasHeuristic.getLibcFuncPtrArgs(uint64 list -> B2R2.FrontEnd.BinHandler -> Set<B2R2.Addr> -> Map<uint64,'?26478> -> B2R2.Addr)
  name: "val getLibcFuncPtrArgs: uint64 list -> BinHandler -> Set<Addr> -> Map<uint64,'?26478> -> Addr -> uint64 list * Map<uint64,'?26478>"
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_getLibcFuncPtrArgs_uint64_list____B2R2_FrontEnd_BinHandler____Set_B2R2_Addr_____Map_uint64___26478_____B2R2_Addr_
  commentId: M:B2R2.BinGraph.getLibcFuncPtrArgs``1(Microsoft.FSharp.Collections.FSharpList{System.UInt64},B2R2.FrontEnd.BinHandler,Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``0},System.UInt64)
  fullName: "val B2R2.BinGraph.DisasHeuristic.getLibcFuncPtrArgs: uint64 list -> B2R2.FrontEnd.BinHandler -> Set<B2R2.Addr> -> Map<uint64,'?26478> -> B2R2.Addr -> uint64 list * Map<uint64,'?26478>"
  nameWithType: "val DisasHeuristic.getLibcFuncPtrArgs: uint64 list -> BinHandler -> Set<Addr> -> Map<uint64,'?26478> -> Addr -> uint64 list * Map<uint64,'?26478>"
- uid: B2R2.BinGraph.DisasHeuristic.getLibcFuncPtrArgs*
  name: getLibcFuncPtrArgs
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_getLibcFuncPtrArgs_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.getLibcFuncPtrArgs*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.getLibcFuncPtrArgs
  nameWithType: DisasHeuristic.getLibcFuncPtrArgs
- uid: B2R2.BinGraph.DisasHeuristic.getStackPtrRegID(B2R2.Architecture)
  name: 'val getStackPtrRegID: Architecture -> int<MeasureProduct<T>>'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_getStackPtrRegID_B2R2_Architecture_
  commentId: M:B2R2.BinGraph.getStackPtrRegID(B2R2.Architecture)
  fullName: 'val B2R2.BinGraph.DisasHeuristic.getStackPtrRegID: B2R2.Architecture -> int<MeasureProduct<B2R2.RegisterIDModule.T>>'
  nameWithType: 'val DisasHeuristic.getStackPtrRegID: Architecture -> int<MeasureProduct<T>>'
- uid: B2R2.BinGraph.DisasHeuristic.getStackPtrRegID*
  name: getStackPtrRegID
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_getStackPtrRegID_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.getStackPtrRegID*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.getStackPtrRegID
  nameWithType: DisasHeuristic.getStackPtrRegID
- uid: B2R2.BinGraph.DisasHeuristic.initStateForLibcStart(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: 'val initStateForLibcStart: BinHandler -> Addr -> EvalState'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_initStateForLibcStart_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.BinGraph.initStateForLibcStart(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'val B2R2.BinGraph.DisasHeuristic.initStateForLibcStart: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val DisasHeuristic.initStateForLibcStart: BinHandler -> Addr -> EvalState'
- uid: B2R2.BinGraph.DisasHeuristic.initStateForLibcStart*
  name: initStateForLibcStart
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_initStateForLibcStart_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.initStateForLibcStart*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.initStateForLibcStart
  nameWithType: DisasHeuristic.initStateForLibcStart
- uid: B2R2.BinGraph.DisasHeuristic.intel32LibcParams(uint64 list -> B2R2.BinIR.LowUIR.Eval.EvalState)
  name: 'val intel32LibcParams: uint64 list -> EvalState -> uint64 list'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_intel32LibcParams_uint64_list____B2R2_BinIR_LowUIR_Eval_EvalState_
  commentId: M:B2R2.BinGraph.intel32LibcParams(Microsoft.FSharp.Collections.FSharpList{System.UInt64},B2R2.BinIR.LowUIR.Eval.EvalState)
  fullName: 'val B2R2.BinGraph.DisasHeuristic.intel32LibcParams: uint64 list -> B2R2.BinIR.LowUIR.Eval.EvalState -> uint64 list'
  nameWithType: 'val DisasHeuristic.intel32LibcParams: uint64 list -> EvalState -> uint64 list'
- uid: B2R2.BinGraph.DisasHeuristic.intel32LibcParams*
  name: intel32LibcParams
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_intel32LibcParams_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.intel32LibcParams*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.intel32LibcParams
  nameWithType: DisasHeuristic.intel32LibcParams
- uid: B2R2.BinGraph.DisasHeuristic.intel64LibcParams(uint64 list -> B2R2.BinIR.LowUIR.Eval.EvalState)
  name: 'val intel64LibcParams: uint64 list -> EvalState -> uint64 list'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_intel64LibcParams_uint64_list____B2R2_BinIR_LowUIR_Eval_EvalState_
  commentId: M:B2R2.BinGraph.intel64LibcParams(Microsoft.FSharp.Collections.FSharpList{System.UInt64},B2R2.BinIR.LowUIR.Eval.EvalState)
  fullName: 'val B2R2.BinGraph.DisasHeuristic.intel64LibcParams: uint64 list -> B2R2.BinIR.LowUIR.Eval.EvalState -> uint64 list'
  nameWithType: 'val DisasHeuristic.intel64LibcParams: uint64 list -> EvalState -> uint64 list'
- uid: B2R2.BinGraph.DisasHeuristic.intel64LibcParams*
  name: intel64LibcParams
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_intel64LibcParams_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.intel64LibcParams*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.intel64LibcParams
  nameWithType: DisasHeuristic.intel64LibcParams
- uid: B2R2.BinGraph.DisasHeuristic.isCallingLibcStart(B2R2.FrontEnd.BinHandler -> 'T)
  name: "val isCallingLibcStart: BinHandler -> 'T -> bool"
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_isCallingLibcStart_B2R2_FrontEnd_BinHandler_____T_
  commentId: M:B2R2.BinGraph.isCallingLibcStart``1(B2R2.FrontEnd.BinHandler,``0)
  fullName: "val B2R2.BinGraph.DisasHeuristic.isCallingLibcStart: B2R2.FrontEnd.BinHandler -> 'T -> bool"
  nameWithType: "val DisasHeuristic.isCallingLibcStart: BinHandler -> 'T -> bool"
- uid: B2R2.BinGraph.DisasHeuristic.isCallingLibcStart*
  name: isCallingLibcStart
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_isCallingLibcStart_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.isCallingLibcStart*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.isCallingLibcStart
  nameWithType: DisasHeuristic.isCallingLibcStart
- uid: B2R2.BinGraph.DisasHeuristic.isCallTargetLibcStart(B2R2.FrontEnd.BinHandler -> 'T)
  name: "val isCallTargetLibcStart: BinHandler -> 'T -> bool"
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_isCallTargetLibcStart_B2R2_FrontEnd_BinHandler_____T_
  commentId: M:B2R2.BinGraph.isCallTargetLibcStart``1(B2R2.FrontEnd.BinHandler,``0)
  fullName: "val B2R2.BinGraph.DisasHeuristic.isCallTargetLibcStart: B2R2.FrontEnd.BinHandler -> 'T -> bool"
  nameWithType: "val DisasHeuristic.isCallTargetLibcStart: BinHandler -> 'T -> bool"
- uid: B2R2.BinGraph.DisasHeuristic.isCallTargetLibcStart*
  name: isCallTargetLibcStart
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_isCallTargetLibcStart_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.isCallTargetLibcStart*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.isCallTargetLibcStart
  nameWithType: DisasHeuristic.isCallTargetLibcStart
- uid: B2R2.BinGraph.DisasHeuristic.isLibcStartMain(B2R2.FrontEnd.BinHandler -> bool * string)
  name: 'val isLibcStartMain: BinHandler -> bool * string -> bool'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_isLibcStartMain_B2R2_FrontEnd_BinHandler____bool___string_
  commentId: M:B2R2.BinGraph.isLibcStartMain(B2R2.FrontEnd.BinHandler,System.Boolean,System.String)
  fullName: 'val B2R2.BinGraph.DisasHeuristic.isLibcStartMain: B2R2.FrontEnd.BinHandler -> bool * string -> bool'
  nameWithType: 'val DisasHeuristic.isLibcStartMain: BinHandler -> bool * string -> bool'
- uid: B2R2.BinGraph.DisasHeuristic.isLibcStartMain*
  name: isLibcStartMain
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_isLibcStartMain_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.isLibcStartMain*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.isLibcStartMain
  nameWithType: DisasHeuristic.isLibcStartMain
- uid: B2R2.BinGraph.DisasHeuristic.recover(B2R2.FrontEnd.BinHandler -> Set<B2R2.Addr> -> '?26483 list -> Map<uint64,'?26484>)
  name: "val recover: BinHandler -> Set<Addr> -> '?26483 list -> Map<uint64,'?26484> -> uint64 list * Map<uint64,'?26484>"
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_recover_B2R2_FrontEnd_BinHandler____Set_B2R2_Addr_______26483_list____Map_uint64___26484__
  commentId: M:B2R2.BinGraph.recover``2(B2R2.FrontEnd.BinHandler,Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``1})
  fullName: "val B2R2.BinGraph.DisasHeuristic.recover: B2R2.FrontEnd.BinHandler -> Set<B2R2.Addr> -> '?26483 list -> Map<uint64,'?26484> -> uint64 list * Map<uint64,'?26484>"
  nameWithType: "val DisasHeuristic.recover: BinHandler -> Set<Addr> -> '?26483 list -> Map<uint64,'?26484> -> uint64 list * Map<uint64,'?26484>"
- uid: B2R2.BinGraph.DisasHeuristic.recover*
  name: recover
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_recover_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.recover*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.recover
  nameWithType: DisasHeuristic.recover
- uid: B2R2.BinGraph.DisasHeuristic.recoverLibcPtrs(uint64 list -> B2R2.FrontEnd.BinHandler -> Set<B2R2.Addr> -> '?26481 list -> Map<uint64,'?26482>)
  name: "val recoverLibcPtrs: uint64 list -> BinHandler -> Set<Addr> -> '?26481 list -> Map<uint64,'?26482> -> uint64 list * Map<uint64,'?26482>"
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_recoverLibcPtrs_uint64_list____B2R2_FrontEnd_BinHandler____Set_B2R2_Addr_______26481_list____Map_uint64___26482__
  commentId: M:B2R2.BinGraph.recoverLibcPtrs``2(Microsoft.FSharp.Collections.FSharpList{System.UInt64},B2R2.FrontEnd.BinHandler,Microsoft.FSharp.Collections.FSharpSet{System.UInt64},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpMap{System.UInt64,``1})
  fullName: "val B2R2.BinGraph.DisasHeuristic.recoverLibcPtrs: uint64 list -> B2R2.FrontEnd.BinHandler -> Set<B2R2.Addr> -> '?26481 list -> Map<uint64,'?26482> -> uint64 list * Map<uint64,'?26482>"
  nameWithType: "val DisasHeuristic.recoverLibcPtrs: uint64 list -> BinHandler -> Set<Addr> -> '?26481 list -> Map<uint64,'?26482> -> uint64 list * Map<uint64,'?26482>"
- uid: B2R2.BinGraph.DisasHeuristic.recoverLibcPtrs*
  name: recoverLibcPtrs
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_recoverLibcPtrs_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.recoverLibcPtrs*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.recoverLibcPtrs
  nameWithType: DisasHeuristic.recoverLibcPtrs
- uid: B2R2.BinGraph.DisasHeuristic.stackAddr(B2R2.RegType)
  name: 'val stackAddr: RegType -> EvalValue'
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_stackAddr_B2R2_RegType_
  commentId: M:B2R2.BinGraph.stackAddr(System.Int32)
  fullName: 'val B2R2.BinGraph.DisasHeuristic.stackAddr: B2R2.RegType -> B2R2.BinIR.LowUIR.Eval.EvalValue'
  nameWithType: 'val DisasHeuristic.stackAddr: RegType -> EvalValue'
- uid: B2R2.BinGraph.DisasHeuristic.stackAddr*
  name: stackAddr
  href: api/B2R2.BinGraph.DisasHeuristic.html#B2R2_BinGraph_DisasHeuristic_stackAddr_
  commentId: Overload:B2R2.BinGraph.DisasHeuristic.stackAddr*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisasHeuristic.stackAddr
  nameWithType: DisasHeuristic.stackAddr
- uid: B2R2.BinGraph.DisasmCFG
  name: DisasmCFG (abrv)
  href: api/B2R2.BinGraph.DisasmCFG.html
  commentId: T:B2R2.BinGraph.DisasmCFG
  fullName: B2R2.BinGraph.DisasmCFG
  nameWithType: B2R2.BinGraph.DisasmCFG
- uid: B2R2.BinGraph.DisasmVertex
  name: DisasmVertex (abrv)
  href: api/B2R2.BinGraph.DisasmVertex.html
  commentId: T:B2R2.BinGraph.DisasmVertex
  fullName: B2R2.BinGraph.DisasmVertex
  nameWithType: B2R2.BinGraph.DisasmVertex
- uid: B2R2.BinGraph.DisassemblyBBL
  name: DisassemblyBBL
  href: api/B2R2.BinGraph.DisassemblyBBL.html
  commentId: T:B2R2.BinGraph.DisassemblyBBL
  fullName: B2R2.BinGraph.DisassemblyBBL
  nameWithType: B2R2.BinGraph.DisassemblyBBL
- uid: B2R2.BinGraph.DisassemblyBBL.#ctor(B2R2.AddrRange * B2R2.FrontEnd.Instruction list * B2R2.FrontEnd.Instruction)
  name: 'new: AddrRange * Instruction list * Instruction -> DisassemblyBBL'
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL__ctor_B2R2_AddrRange___B2R2_FrontEnd_Instruction_list___B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.BinGraph.DisassemblyBBL.#ctor(B2R2.AddrRange,Microsoft.FSharp.Collections.FSharpList{B2R2.FrontEnd.Instruction},B2R2.FrontEnd.Instruction)
  fullName: 'new: B2R2.AddrRange * B2R2.FrontEnd.Instruction list * B2R2.FrontEnd.Instruction -> B2R2.BinGraph.DisassemblyBBL'
  nameWithType: 'new: AddrRange * Instruction list * Instruction -> DisassemblyBBL'
- uid: B2R2.BinGraph.DisassemblyBBL.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL__ctor_
  commentId: Overload:B2R2.BinGraph.DisassemblyBBL.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisassemblyBBL
  nameWithType: DisassemblyBBL.( .ctor )
- uid: B2R2.BinGraph.DisassemblyBBL.Instrs(unit)
  name: 'property Instrs: Instruction list'
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL_Instrs_unit_
  commentId: P:B2R2.BinGraph.DisassemblyBBL.Instrs
  fullName: 'property B2R2.BinGraph.DisassemblyBBL.Instrs: B2R2.FrontEnd.Instruction list'
  nameWithType: 'property DisassemblyBBL.Instrs: Instruction list'
- uid: B2R2.BinGraph.DisassemblyBBL.Instrs*
  name: Instrs
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL_Instrs_
  commentId: Overload:B2R2.BinGraph.DisassemblyBBL.Instrs*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisassemblyBBL.Instrs
  nameWithType: DisassemblyBBL.Instrs
- uid: B2R2.BinGraph.DisassemblyBBL.LastInstr(unit)
  name: 'property LastInstr: Instruction'
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL_LastInstr_unit_
  commentId: P:B2R2.BinGraph.DisassemblyBBL.LastInstr
  fullName: 'property B2R2.BinGraph.DisassemblyBBL.LastInstr: B2R2.FrontEnd.Instruction'
  nameWithType: 'property DisassemblyBBL.LastInstr: Instruction'
- uid: B2R2.BinGraph.DisassemblyBBL.LastInstr*
  name: LastInstr
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL_LastInstr_
  commentId: Overload:B2R2.BinGraph.DisassemblyBBL.LastInstr*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisassemblyBBL.LastInstr
  nameWithType: DisassemblyBBL.LastInstr
- uid: B2R2.BinGraph.DisassemblyBBL.ToResolve(unit)
  name: 'property ToResolve: bool'
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL_ToResolve_unit_
  commentId: P:B2R2.BinGraph.DisassemblyBBL.ToResolve
  fullName: 'property B2R2.BinGraph.DisassemblyBBL.ToResolve: bool'
  nameWithType: 'property DisassemblyBBL.ToResolve: bool'
- uid: B2R2.BinGraph.DisassemblyBBL.ToResolve*
  name: ToResolve
  href: api/B2R2.BinGraph.DisassemblyBBL.html#B2R2_BinGraph_DisassemblyBBL_ToResolve_
  commentId: Overload:B2R2.BinGraph.DisassemblyBBL.ToResolve*
  isSpec: "True"
  fullName: B2R2.BinGraph.DisassemblyBBL.ToResolve
  nameWithType: DisassemblyBBL.ToResolve
- uid: B2R2.BinGraph.Dominator
  name: Dominator (mod)
  href: api/B2R2.BinGraph.Dominator.html
  commentId: T:B2R2.BinGraph.Dominator
  fullName: B2R2.BinGraph.Dominator
  nameWithType: B2R2.BinGraph.Dominator
- uid: B2R2.BinGraph.Dominator.doms(B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V>)
  name: "val doms: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> list"
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_doms_B2R2_BinGraph_DiGraph__V__E_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.doms``2(B2R2.BinGraph.DiGraph{``0,``1},B2R2.BinGraph.Vertex{``0})
  fullName: "val B2R2.BinGraph.Dominator.doms: B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> list"
  nameWithType: "val Dominator.doms: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> list"
- uid: B2R2.BinGraph.Dominator.doms*
  name: doms
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_doms_
  commentId: Overload:B2R2.BinGraph.Dominator.doms*
  isSpec: "True"
  fullName: B2R2.BinGraph.Dominator.doms
  nameWithType: Dominator.doms
- uid: B2R2.BinGraph.Dominator.frontier(B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V>)
  name: "val frontier: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> list"
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_frontier_B2R2_BinGraph_DiGraph__V__E_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.frontier``2(B2R2.BinGraph.DiGraph{``0,``1},B2R2.BinGraph.Vertex{``0})
  fullName: "val B2R2.BinGraph.Dominator.frontier: B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> list"
  nameWithType: "val Dominator.frontier: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> list"
- uid: B2R2.BinGraph.Dominator.frontier*
  name: frontier
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_frontier_
  commentId: Overload:B2R2.BinGraph.Dominator.frontier*
  isSpec: "True"
  fullName: B2R2.BinGraph.Dominator.frontier
  nameWithType: Dominator.frontier
- uid: B2R2.BinGraph.Dominator.idom(B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V>)
  name: "val idom: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> option"
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_idom_B2R2_BinGraph_DiGraph__V__E_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.idom``2(B2R2.BinGraph.DiGraph{``0,``1},B2R2.BinGraph.Vertex{``0})
  fullName: "val B2R2.BinGraph.Dominator.idom: B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> option"
  nameWithType: "val Dominator.idom: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> option"
- uid: B2R2.BinGraph.Dominator.idom*
  name: idom
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_idom_
  commentId: Overload:B2R2.BinGraph.Dominator.idom*
  isSpec: "True"
  fullName: B2R2.BinGraph.Dominator.idom
  nameWithType: Dominator.idom
- uid: B2R2.BinGraph.Dominator.ipdom(B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V>)
  name: "val ipdom: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> option"
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_ipdom_B2R2_BinGraph_DiGraph__V__E_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.ipdom``2(B2R2.BinGraph.DiGraph{``0,``1},B2R2.BinGraph.Vertex{``0})
  fullName: "val B2R2.BinGraph.Dominator.ipdom: B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> option"
  nameWithType: "val Dominator.ipdom: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> option"
- uid: B2R2.BinGraph.Dominator.ipdom*
  name: ipdom
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_ipdom_
  commentId: Overload:B2R2.BinGraph.Dominator.ipdom*
  isSpec: "True"
  fullName: B2R2.BinGraph.Dominator.ipdom
  nameWithType: Dominator.ipdom
- uid: B2R2.BinGraph.Dominator.pdoms(B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V>)
  name: "val pdoms: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> list"
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_pdoms_B2R2_BinGraph_DiGraph__V__E_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.pdoms``2(B2R2.BinGraph.DiGraph{``0,``1},B2R2.BinGraph.Vertex{``0})
  fullName: "val B2R2.BinGraph.Dominator.pdoms: B2R2.BinGraph.DiGraph<'V,'E> -> B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> list"
  nameWithType: "val Dominator.pdoms: DiGraph<'V,'E> -> Vertex<'V> -> Vertex<'V> list"
- uid: B2R2.BinGraph.Dominator.pdoms*
  name: pdoms
  href: api/B2R2.BinGraph.Dominator.html#B2R2_BinGraph_Dominator_pdoms_
  commentId: Overload:B2R2.BinGraph.Dominator.pdoms*
  isSpec: "True"
  fullName: B2R2.BinGraph.Dominator.pdoms
  nameWithType: Dominator.pdoms
- uid: B2R2.BinGraph.DummyDataAccessException
  name: DummyDataAccessException
  href: api/B2R2.BinGraph.DummyDataAccessException.html
  commentId: T:B2R2.BinGraph.DummyDataAccessException
  fullName: B2R2.BinGraph.DummyDataAccessException
  nameWithType: B2R2.BinGraph.DummyDataAccessException
- uid: B2R2.BinGraph.Edge`1
  name: Edge<'E> (union)
  href: api/B2R2.BinGraph.Edge-1.html
  commentId: T:B2R2.BinGraph.Edge`1
  fullName: B2R2.BinGraph.Edge`1
  nameWithType: B2R2.BinGraph.Edge`1
- uid: B2R2.BinGraph.Edge`1.Edge
  name: Edge of 'E
  href: api/B2R2.BinGraph.Edge-1.html#B2R2_BinGraph_Edge_1_Edge
  commentId: T:B2R2.BinGraph.Edge`1.Edge
  fullName: B2R2.BinGraph.Edge<_>.Edge of 'E
  nameWithType: Edge.Edge of 'E
- uid: B2R2.BinGraph.EdgeID
  name: EdgeID (abrv)
  href: api/B2R2.BinGraph.EdgeID.html
  commentId: T:B2R2.BinGraph.EdgeID
  fullName: B2R2.BinGraph.EdgeID
  nameWithType: B2R2.BinGraph.EdgeID
- uid: B2R2.BinGraph.EdgeNotFoundException
  name: EdgeNotFoundException
  href: api/B2R2.BinGraph.EdgeNotFoundException.html
  commentId: T:B2R2.BinGraph.EdgeNotFoundException
  fullName: B2R2.BinGraph.EdgeNotFoundException
  nameWithType: B2R2.BinGraph.EdgeNotFoundException
- uid: B2R2.BinGraph.Funcs
  name: Funcs (abrv)
  href: api/B2R2.BinGraph.Funcs.html
  commentId: T:B2R2.BinGraph.Funcs
  fullName: B2R2.BinGraph.Funcs
  nameWithType: B2R2.BinGraph.Funcs
- uid: B2R2.BinGraph.Function
  name: Function
  href: api/B2R2.BinGraph.Function.html
  commentId: T:B2R2.BinGraph.Function
  fullName: B2R2.BinGraph.Function
  nameWithType: B2R2.BinGraph.Function
- uid: B2R2.BinGraph.Function.#ctor(B2R2.Addr * string)
  name: 'new: Addr * string -> Function'
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function__ctor_B2R2_Addr___string_
  commentId: M:B2R2.BinGraph.Function.#ctor(System.UInt64,System.String)
  fullName: 'new: B2R2.Addr * string -> B2R2.BinGraph.Function'
  nameWithType: 'new: Addr * string -> Function'
- uid: B2R2.BinGraph.Function.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function__ctor_
  commentId: Overload:B2R2.BinGraph.Function.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.Function
  nameWithType: Function.( .ctor )
- uid: B2R2.BinGraph.Function.DisasmCFG(unit)
  name: 'property DisasmCFG: RangedDiGraph<DisassemblyBBL,CFGEdge>'
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_DisasmCFG_unit_
  commentId: P:B2R2.BinGraph.Function.DisasmCFG
  fullName: 'property B2R2.BinGraph.Function.DisasmCFG: B2R2.BinGraph.RangedDiGraph<B2R2.BinGraph.DisassemblyBBL,B2R2.BinGraph.CFGEdge>'
  nameWithType: 'property Function.DisasmCFG: RangedDiGraph<DisassemblyBBL,CFGEdge>'
- uid: B2R2.BinGraph.Function.DisasmCFG*
  name: DisasmCFG
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_DisasmCFG_
  commentId: Overload:B2R2.BinGraph.Function.DisasmCFG*
  isSpec: "True"
  fullName: B2R2.BinGraph.Function.DisasmCFG
  nameWithType: Function.DisasmCFG
- uid: B2R2.BinGraph.Function.Entry(unit)
  name: 'property Entry: Addr'
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_Entry_unit_
  commentId: P:B2R2.BinGraph.Function.Entry
  fullName: 'property B2R2.BinGraph.Function.Entry: B2R2.Addr'
  nameWithType: 'property Function.Entry: Addr'
- uid: B2R2.BinGraph.Function.Entry*
  name: Entry
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_Entry_
  commentId: Overload:B2R2.BinGraph.Function.Entry*
  isSpec: "True"
  fullName: B2R2.BinGraph.Function.Entry
  nameWithType: Function.Entry
- uid: B2R2.BinGraph.Function.IRCFG(unit)
  name: 'property IRCFG: SimpleDiGraph<IRBBL,CFGEdge>'
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_IRCFG_unit_
  commentId: P:B2R2.BinGraph.Function.IRCFG
  fullName: 'property B2R2.BinGraph.Function.IRCFG: B2R2.BinGraph.SimpleDiGraph<B2R2.BinGraph.IRBBL,B2R2.BinGraph.CFGEdge>'
  nameWithType: 'property Function.IRCFG: SimpleDiGraph<IRBBL,CFGEdge>'
- uid: B2R2.BinGraph.Function.IRCFG*
  name: IRCFG
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_IRCFG_
  commentId: Overload:B2R2.BinGraph.Function.IRCFG*
  isSpec: "True"
  fullName: B2R2.BinGraph.Function.IRCFG
  nameWithType: Function.IRCFG
- uid: B2R2.BinGraph.Function.Name(unit)
  name: 'property Name: string'
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_Name_unit_
  commentId: P:B2R2.BinGraph.Function.Name
  fullName: 'property B2R2.BinGraph.Function.Name: string'
  nameWithType: 'property Function.Name: string'
- uid: B2R2.BinGraph.Function.Name*
  name: Name
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_Name_
  commentId: Overload:B2R2.BinGraph.Function.Name*
  isSpec: "True"
  fullName: B2R2.BinGraph.Function.Name
  nameWithType: Function.Name
- uid: B2R2.BinGraph.Function.SSACFG(unit)
  name: 'property SSACFG: SimpleDiGraph<IRBBL,CFGEdge>'
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_SSACFG_unit_
  commentId: P:B2R2.BinGraph.Function.SSACFG
  fullName: 'property B2R2.BinGraph.Function.SSACFG: B2R2.BinGraph.SimpleDiGraph<B2R2.BinGraph.IRBBL,B2R2.BinGraph.CFGEdge>'
  nameWithType: 'property Function.SSACFG: SimpleDiGraph<IRBBL,CFGEdge>'
- uid: B2R2.BinGraph.Function.SSACFG*
  name: SSACFG
  href: api/B2R2.BinGraph.Function.html#B2R2_BinGraph_Function_SSACFG_
  commentId: Overload:B2R2.BinGraph.Function.SSACFG*
  isSpec: "True"
  fullName: B2R2.BinGraph.Function.SSACFG
  nameWithType: Function.SSACFG
- uid: B2R2.BinGraph.IRBBL
  name: IRBBL
  href: api/B2R2.BinGraph.IRBBL.html
  commentId: T:B2R2.BinGraph.IRBBL
  fullName: B2R2.BinGraph.IRBBL
  nameWithType: B2R2.BinGraph.IRBBL
- uid: B2R2.BinGraph.IRBBL.#ctor(B2R2.BinGraph.PPoint * B2R2.BinGraph.PPoint * B2R2.BinIR.LowUIR.Stmt list * B2R2.BinIR.LowUIR.Stmt)
  name: 'new: PPoint * PPoint * Stmt list * Stmt -> IRBBL'
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL__ctor_B2R2_BinGraph_PPoint___B2R2_BinGraph_PPoint___B2R2_BinIR_LowUIR_Stmt_list___B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinGraph.IRBBL.#ctor(System.Tuple{System.UInt64,System.Int32},System.Tuple{System.UInt64,System.Int32},Microsoft.FSharp.Collections.FSharpList{B2R2.BinIR.LowUIR.Stmt},B2R2.BinIR.LowUIR.Stmt)
  fullName: 'new: B2R2.BinGraph.PPoint * B2R2.BinGraph.PPoint * B2R2.BinIR.LowUIR.Stmt list * B2R2.BinIR.LowUIR.Stmt -> B2R2.BinGraph.IRBBL'
  nameWithType: 'new: PPoint * PPoint * Stmt list * Stmt -> IRBBL'
- uid: B2R2.BinGraph.IRBBL.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL__ctor_
  commentId: Overload:B2R2.BinGraph.IRBBL.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.IRBBL
  nameWithType: IRBBL.( .ctor )
- uid: B2R2.BinGraph.IRBBL.LastPpoint(unit)
  name: 'property LastPpoint: PPoint'
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_LastPpoint_unit_
  commentId: P:B2R2.BinGraph.IRBBL.LastPpoint
  fullName: 'property B2R2.BinGraph.IRBBL.LastPpoint: B2R2.BinGraph.PPoint'
  nameWithType: 'property IRBBL.LastPpoint: PPoint'
- uid: B2R2.BinGraph.IRBBL.LastPpoint*
  name: LastPpoint
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_LastPpoint_
  commentId: Overload:B2R2.BinGraph.IRBBL.LastPpoint*
  isSpec: "True"
  fullName: B2R2.BinGraph.IRBBL.LastPpoint
  nameWithType: IRBBL.LastPpoint
- uid: B2R2.BinGraph.IRBBL.LastStmt(unit)
  name: 'property LastStmt: Stmt'
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_LastStmt_unit_
  commentId: P:B2R2.BinGraph.IRBBL.LastStmt
  fullName: 'property B2R2.BinGraph.IRBBL.LastStmt: B2R2.BinIR.LowUIR.Stmt'
  nameWithType: 'property IRBBL.LastStmt: Stmt'
- uid: B2R2.BinGraph.IRBBL.LastStmt*
  name: LastStmt
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_LastStmt_
  commentId: Overload:B2R2.BinGraph.IRBBL.LastStmt*
  isSpec: "True"
  fullName: B2R2.BinGraph.IRBBL.LastStmt
  nameWithType: IRBBL.LastStmt
- uid: B2R2.BinGraph.IRBBL.Ppoint(unit)
  name: 'property Ppoint: PPoint'
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_Ppoint_unit_
  commentId: P:B2R2.BinGraph.IRBBL.Ppoint
  fullName: 'property B2R2.BinGraph.IRBBL.Ppoint: B2R2.BinGraph.PPoint'
  nameWithType: 'property IRBBL.Ppoint: PPoint'
- uid: B2R2.BinGraph.IRBBL.Ppoint*
  name: Ppoint
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_Ppoint_
  commentId: Overload:B2R2.BinGraph.IRBBL.Ppoint*
  isSpec: "True"
  fullName: B2R2.BinGraph.IRBBL.Ppoint
  nameWithType: IRBBL.Ppoint
- uid: B2R2.BinGraph.IRBBL.Stmts(unit)
  name: 'property Stmts: Stmt list'
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_Stmts_unit_
  commentId: P:B2R2.BinGraph.IRBBL.Stmts
  fullName: 'property B2R2.BinGraph.IRBBL.Stmts: B2R2.BinIR.LowUIR.Stmt list'
  nameWithType: 'property IRBBL.Stmts: Stmt list'
- uid: B2R2.BinGraph.IRBBL.Stmts*
  name: Stmts
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_Stmts_
  commentId: Overload:B2R2.BinGraph.IRBBL.Stmts*
  isSpec: "True"
  fullName: B2R2.BinGraph.IRBBL.Stmts
  nameWithType: IRBBL.Stmts
- uid: B2R2.BinGraph.IRBBL.ToResolve(unit)
  name: 'property ToResolve: bool'
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_ToResolve_unit_
  commentId: P:B2R2.BinGraph.IRBBL.ToResolve
  fullName: 'property B2R2.BinGraph.IRBBL.ToResolve: bool'
  nameWithType: 'property IRBBL.ToResolve: bool'
- uid: B2R2.BinGraph.IRBBL.ToResolve*
  name: ToResolve
  href: api/B2R2.BinGraph.IRBBL.html#B2R2_BinGraph_IRBBL_ToResolve_
  commentId: Overload:B2R2.BinGraph.IRBBL.ToResolve*
  isSpec: "True"
  fullName: B2R2.BinGraph.IRBBL.ToResolve
  nameWithType: IRBBL.ToResolve
- uid: B2R2.BinGraph.IRCFG
  name: IRCFG (abrv)
  href: api/B2R2.BinGraph.IRCFG.html
  commentId: T:B2R2.BinGraph.IRCFG
  fullName: B2R2.BinGraph.IRCFG
  nameWithType: B2R2.BinGraph.IRCFG
- uid: B2R2.BinGraph.IRVertex
  name: IRVertex (abrv)
  href: api/B2R2.BinGraph.IRVertex.html
  commentId: T:B2R2.BinGraph.IRVertex
  fullName: B2R2.BinGraph.IRVertex
  nameWithType: B2R2.BinGraph.IRVertex
- uid: B2R2.BinGraph.MultipleEntryException
  name: MultipleEntryException
  href: api/B2R2.BinGraph.MultipleEntryException.html
  commentId: T:B2R2.BinGraph.MultipleEntryException
  fullName: B2R2.BinGraph.MultipleEntryException
  nameWithType: B2R2.BinGraph.MultipleEntryException
- uid: B2R2.BinGraph.MultipleVerticesFoundException
  name: MultipleVerticesFoundException
  href: api/B2R2.BinGraph.MultipleVerticesFoundException.html
  commentId: T:B2R2.BinGraph.MultipleVerticesFoundException
  fullName: B2R2.BinGraph.MultipleVerticesFoundException
  nameWithType: B2R2.BinGraph.MultipleVerticesFoundException
- uid: B2R2.BinGraph.PPoint
  name: PPoint (abrv)
  href: api/B2R2.BinGraph.PPoint.html
  commentId: T:B2R2.BinGraph.PPoint
  fullName: B2R2.BinGraph.PPoint
  nameWithType: B2R2.BinGraph.PPoint
- uid: B2R2.BinGraph.RangedDiGraph`2
  name: RangedDiGraph<'V, 'E>
  href: api/B2R2.BinGraph.RangedDiGraph-2.html
  commentId: T:B2R2.BinGraph.RangedDiGraph`2
  fullName: B2R2.BinGraph.RangedDiGraph`2
  nameWithType: B2R2.BinGraph.RangedDiGraph`2
- uid: B2R2.BinGraph.RangedDiGraph`2.#ctor(unit)
  name: "new: unit -> RangedDiGraph<'V,'E>"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2__ctor_unit_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.#ctor
  fullName: "new: unit -> B2R2.BinGraph.RangedDiGraph<'V,'E>"
  nameWithType: "new: unit -> RangedDiGraph<'V,'E>"
- uid: B2R2.BinGraph.RangedDiGraph`2.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2__ctor_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph
  nameWithType: RangedDiGraph.( .ctor )
- uid: B2R2.BinGraph.RangedDiGraph`2.AddEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E)
  name: "member AddEdge: Vertex<'V> -> Vertex<'V> -> 'E -> unit"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_AddEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V______E_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.AddEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0},`1)
  fullName: "member B2R2.BinGraph.RangedDiGraph.AddEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E -> unit"
  nameWithType: "member RangedDiGraph.AddEdge: Vertex<'V> -> Vertex<'V> -> 'E -> unit"
- uid: B2R2.BinGraph.RangedDiGraph`2.AddEdge*
  name: AddEdge
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_AddEdge_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.AddEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.AddEdge
  nameWithType: RangedDiGraph.AddEdge
- uid: B2R2.BinGraph.RangedDiGraph`2.AddVertex('V)
  name: "member AddVertex: 'V -> Vertex<'V>"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_AddVertex__V_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.AddVertex(`0)
  fullName: "member B2R2.BinGraph.RangedDiGraph.AddVertex: 'V -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member RangedDiGraph.AddVertex: 'V -> Vertex<'V>"
- uid: B2R2.BinGraph.RangedDiGraph`2.AddVertex*
  name: AddVertex
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_AddVertex_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.AddVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.AddVertex
  nameWithType: RangedDiGraph.AddVertex
- uid: B2R2.BinGraph.RangedDiGraph`2.Clone(bool option)
  name: "member Clone: bool option -> RangedDiGraph<'V,'E>"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_Clone_bool_option_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.Clone(Microsoft.FSharp.Core.FSharpOption{System.Boolean})
  fullName: "member B2R2.BinGraph.RangedDiGraph.Clone: bool option -> B2R2.BinGraph.RangedDiGraph<'V,'E>"
  nameWithType: "member RangedDiGraph.Clone: bool option -> RangedDiGraph<'V,'E>"
- uid: B2R2.BinGraph.RangedDiGraph`2.Clone*
  name: Clone
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_Clone_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.Clone*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.Clone
  nameWithType: RangedDiGraph.Clone
- uid: B2R2.BinGraph.RangedDiGraph`2.FindEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>)
  name: "member FindEdge: Vertex<'V> -> Vertex<'V> -> 'E"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.FindEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.RangedDiGraph.FindEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E"
  nameWithType: "member RangedDiGraph.FindEdge: Vertex<'V> -> Vertex<'V> -> 'E"
- uid: B2R2.BinGraph.RangedDiGraph`2.FindEdge*
  name: FindEdge
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindEdge_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.FindEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.FindEdge
  nameWithType: RangedDiGraph.FindEdge
- uid: B2R2.BinGraph.RangedDiGraph`2.FindVertex(B2R2.BinGraph.Vertex<'V>)
  name: "member FindVertex: Vertex<'V> -> Vertex<'V>"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindVertex_B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.FindVertex(B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.RangedDiGraph.FindVertex: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member RangedDiGraph.FindVertex: Vertex<'V> -> Vertex<'V>"
- uid: B2R2.BinGraph.RangedDiGraph`2.FindVertex*
  name: FindVertex
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindVertex_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.FindVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.FindVertex
  nameWithType: RangedDiGraph.FindVertex
- uid: B2R2.BinGraph.RangedDiGraph`2.FindVertexByData('V)
  name: "member FindVertexByData: 'V -> Vertex<'V>"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindVertexByData__V_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.FindVertexByData(`0)
  fullName: "member B2R2.BinGraph.RangedDiGraph.FindVertexByData: 'V -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member RangedDiGraph.FindVertexByData: 'V -> Vertex<'V>"
- uid: B2R2.BinGraph.RangedDiGraph`2.FindVertexByData*
  name: FindVertexByData
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindVertexByData_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.FindVertexByData*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.FindVertexByData
  nameWithType: RangedDiGraph.FindVertexByData
- uid: B2R2.BinGraph.RangedDiGraph`2.FindVertexByRange(B2R2.AddrRange)
  name: "member FindVertexByRange: AddrRange -> Vertex<'V>"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindVertexByRange_B2R2_AddrRange_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.FindVertexByRange(B2R2.AddrRange)
  fullName: "member B2R2.BinGraph.RangedDiGraph.FindVertexByRange: B2R2.AddrRange -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member RangedDiGraph.FindVertexByRange: AddrRange -> Vertex<'V>"
- uid: B2R2.BinGraph.RangedDiGraph`2.FindVertexByRange*
  name: FindVertexByRange
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_FindVertexByRange_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.FindVertexByRange*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.FindVertexByRange
  nameWithType: RangedDiGraph.FindVertexByRange
- uid: B2R2.BinGraph.RangedDiGraph`2.IsEmpty(unit)
  name: 'member IsEmpty: unit -> bool'
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_IsEmpty_unit_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.IsEmpty
  fullName: 'member B2R2.BinGraph.RangedDiGraph.IsEmpty: unit -> bool'
  nameWithType: 'member RangedDiGraph.IsEmpty: unit -> bool'
- uid: B2R2.BinGraph.RangedDiGraph`2.IsEmpty*
  name: IsEmpty
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_IsEmpty_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.IsEmpty*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.IsEmpty
  nameWithType: RangedDiGraph.IsEmpty
- uid: B2R2.BinGraph.RangedDiGraph`2.RemoveEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>)
  name: "member RemoveEdge: Vertex<'V> -> Vertex<'V> -> unit"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_RemoveEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.RemoveEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.RangedDiGraph.RemoveEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> unit"
  nameWithType: "member RangedDiGraph.RemoveEdge: Vertex<'V> -> Vertex<'V> -> unit"
- uid: B2R2.BinGraph.RangedDiGraph`2.RemoveEdge*
  name: RemoveEdge
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_RemoveEdge_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.RemoveEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.RemoveEdge
  nameWithType: RangedDiGraph.RemoveEdge
- uid: B2R2.BinGraph.RangedDiGraph`2.RemoveVertex(B2R2.BinGraph.Vertex<'V>)
  name: "member RemoveVertex: Vertex<'V> -> unit"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_RemoveVertex_B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.RemoveVertex(B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.RangedDiGraph.RemoveVertex: B2R2.BinGraph.Vertex<'V> -> unit"
  nameWithType: "member RangedDiGraph.RemoveVertex: Vertex<'V> -> unit"
- uid: B2R2.BinGraph.RangedDiGraph`2.RemoveVertex*
  name: RemoveVertex
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_RemoveVertex_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.RemoveVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.RemoveVertex
  nameWithType: RangedDiGraph.RemoveVertex
- uid: B2R2.BinGraph.RangedDiGraph`2.Reverse(unit)
  name: "member Reverse: unit -> DiGraph<'V,'E>"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_Reverse_unit_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.Reverse
  fullName: "member B2R2.BinGraph.RangedDiGraph.Reverse: unit -> B2R2.BinGraph.DiGraph<'V,'E>"
  nameWithType: "member RangedDiGraph.Reverse: unit -> DiGraph<'V,'E>"
- uid: B2R2.BinGraph.RangedDiGraph`2.Reverse*
  name: Reverse
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_Reverse_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.Reverse*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.Reverse
  nameWithType: RangedDiGraph.Reverse
- uid: B2R2.BinGraph.RangedDiGraph`2.Size(unit)
  name: 'member Size: unit -> int'
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_Size_unit_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.Size
  fullName: 'member B2R2.BinGraph.RangedDiGraph.Size: unit -> int'
  nameWithType: 'member RangedDiGraph.Size: unit -> int'
- uid: B2R2.BinGraph.RangedDiGraph`2.Size*
  name: Size
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_Size_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.Size*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.Size
  nameWithType: RangedDiGraph.Size
- uid: B2R2.BinGraph.RangedDiGraph`2.TryFindVertexByData('V)
  name: "member TryFindVertexByData: 'V -> Vertex<'V> option"
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_TryFindVertexByData__V_
  commentId: M:B2R2.BinGraph.RangedDiGraph`2.TryFindVertexByData(`0)
  fullName: "member B2R2.BinGraph.RangedDiGraph.TryFindVertexByData: 'V -> B2R2.BinGraph.Vertex<'V> option"
  nameWithType: "member RangedDiGraph.TryFindVertexByData: 'V -> Vertex<'V> option"
- uid: B2R2.BinGraph.RangedDiGraph`2.TryFindVertexByData*
  name: TryFindVertexByData
  href: api/B2R2.BinGraph.RangedDiGraph-2.html#B2R2_BinGraph_RangedDiGraph_2_TryFindVertexByData_
  commentId: Overload:B2R2.BinGraph.RangedDiGraph`2.TryFindVertexByData*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedDiGraph.TryFindVertexByData
  nameWithType: RangedDiGraph.TryFindVertexByData
- uid: B2R2.BinGraph.RangedVertexData
  name: RangedVertexData
  href: api/B2R2.BinGraph.RangedVertexData.html
  commentId: T:B2R2.BinGraph.RangedVertexData
  fullName: B2R2.BinGraph.RangedVertexData
  nameWithType: B2R2.BinGraph.RangedVertexData
- uid: B2R2.BinGraph.RangedVertexData.#ctor(B2R2.AddrRange)
  name: 'new: AddrRange -> RangedVertexData'
  href: api/B2R2.BinGraph.RangedVertexData.html#B2R2_BinGraph_RangedVertexData__ctor_B2R2_AddrRange_
  commentId: M:B2R2.BinGraph.RangedVertexData.#ctor(B2R2.AddrRange)
  fullName: 'new: B2R2.AddrRange -> B2R2.BinGraph.RangedVertexData'
  nameWithType: 'new: AddrRange -> RangedVertexData'
- uid: B2R2.BinGraph.RangedVertexData.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.RangedVertexData.html#B2R2_BinGraph_RangedVertexData__ctor_
  commentId: Overload:B2R2.BinGraph.RangedVertexData.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedVertexData
  nameWithType: RangedVertexData.( .ctor )
- uid: B2R2.BinGraph.RangedVertexData.AddrRange(unit)
  name: 'property AddrRange: AddrRange'
  href: api/B2R2.BinGraph.RangedVertexData.html#B2R2_BinGraph_RangedVertexData_AddrRange_unit_
  commentId: P:B2R2.BinGraph.RangedVertexData.AddrRange
  fullName: 'property B2R2.BinGraph.RangedVertexData.AddrRange: B2R2.AddrRange'
  nameWithType: 'property RangedVertexData.AddrRange: AddrRange'
- uid: B2R2.BinGraph.RangedVertexData.AddrRange*
  name: AddrRange
  href: api/B2R2.BinGraph.RangedVertexData.html#B2R2_BinGraph_RangedVertexData_AddrRange_
  commentId: Overload:B2R2.BinGraph.RangedVertexData.AddrRange*
  isSpec: "True"
  fullName: B2R2.BinGraph.RangedVertexData.AddrRange
  nameWithType: RangedVertexData.AddrRange
- uid: B2R2.BinGraph.RootNodeNotSetException
  name: RootNodeNotSetException
  href: api/B2R2.BinGraph.RootNodeNotSetException.html
  commentId: T:B2R2.BinGraph.RootNodeNotSetException
  fullName: B2R2.BinGraph.RootNodeNotSetException
  nameWithType: B2R2.BinGraph.RootNodeNotSetException
- uid: B2R2.BinGraph.SimpleDiGraph`2
  name: SimpleDiGraph<'V, 'E>
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html
  commentId: T:B2R2.BinGraph.SimpleDiGraph`2
  fullName: B2R2.BinGraph.SimpleDiGraph`2
  nameWithType: B2R2.BinGraph.SimpleDiGraph`2
- uid: B2R2.BinGraph.SimpleDiGraph`2.#ctor(unit)
  name: "new: unit -> SimpleDiGraph<'V,'E>"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2__ctor_unit_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.#ctor
  fullName: "new: unit -> B2R2.BinGraph.SimpleDiGraph<'V,'E>"
  nameWithType: "new: unit -> SimpleDiGraph<'V,'E>"
- uid: B2R2.BinGraph.SimpleDiGraph`2.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2__ctor_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph
  nameWithType: SimpleDiGraph.( .ctor )
- uid: B2R2.BinGraph.SimpleDiGraph`2.AddEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E)
  name: "member AddEdge: Vertex<'V> -> Vertex<'V> -> 'E -> unit"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_AddEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V______E_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.AddEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0},`1)
  fullName: "member B2R2.BinGraph.SimpleDiGraph.AddEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E -> unit"
  nameWithType: "member SimpleDiGraph.AddEdge: Vertex<'V> -> Vertex<'V> -> 'E -> unit"
- uid: B2R2.BinGraph.SimpleDiGraph`2.AddEdge*
  name: AddEdge
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_AddEdge_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.AddEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.AddEdge
  nameWithType: SimpleDiGraph.AddEdge
- uid: B2R2.BinGraph.SimpleDiGraph`2.AddVertex('V)
  name: "member AddVertex: 'V -> Vertex<'V>"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_AddVertex__V_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.AddVertex(`0)
  fullName: "member B2R2.BinGraph.SimpleDiGraph.AddVertex: 'V -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member SimpleDiGraph.AddVertex: 'V -> Vertex<'V>"
- uid: B2R2.BinGraph.SimpleDiGraph`2.AddVertex*
  name: AddVertex
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_AddVertex_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.AddVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.AddVertex
  nameWithType: SimpleDiGraph.AddVertex
- uid: B2R2.BinGraph.SimpleDiGraph`2.Clone(bool option)
  name: "member Clone: bool option -> SimpleDiGraph<'V,'E>"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_Clone_bool_option_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.Clone(Microsoft.FSharp.Core.FSharpOption{System.Boolean})
  fullName: "member B2R2.BinGraph.SimpleDiGraph.Clone: bool option -> B2R2.BinGraph.SimpleDiGraph<'V,'E>"
  nameWithType: "member SimpleDiGraph.Clone: bool option -> SimpleDiGraph<'V,'E>"
- uid: B2R2.BinGraph.SimpleDiGraph`2.Clone*
  name: Clone
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_Clone_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.Clone*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.Clone
  nameWithType: SimpleDiGraph.Clone
- uid: B2R2.BinGraph.SimpleDiGraph`2.FindEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>)
  name: "member FindEdge: Vertex<'V> -> Vertex<'V> -> 'E"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_FindEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.FindEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.SimpleDiGraph.FindEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E"
  nameWithType: "member SimpleDiGraph.FindEdge: Vertex<'V> -> Vertex<'V> -> 'E"
- uid: B2R2.BinGraph.SimpleDiGraph`2.FindEdge*
  name: FindEdge
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_FindEdge_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.FindEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.FindEdge
  nameWithType: SimpleDiGraph.FindEdge
- uid: B2R2.BinGraph.SimpleDiGraph`2.FindVertex(B2R2.BinGraph.Vertex<'V>)
  name: "member FindVertex: Vertex<'V> -> Vertex<'V>"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_FindVertex_B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.FindVertex(B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.SimpleDiGraph.FindVertex: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member SimpleDiGraph.FindVertex: Vertex<'V> -> Vertex<'V>"
- uid: B2R2.BinGraph.SimpleDiGraph`2.FindVertex*
  name: FindVertex
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_FindVertex_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.FindVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.FindVertex
  nameWithType: SimpleDiGraph.FindVertex
- uid: B2R2.BinGraph.SimpleDiGraph`2.FindVertexByData('V)
  name: "member FindVertexByData: 'V -> Vertex<'V>"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_FindVertexByData__V_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.FindVertexByData(`0)
  fullName: "member B2R2.BinGraph.SimpleDiGraph.FindVertexByData: 'V -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "member SimpleDiGraph.FindVertexByData: 'V -> Vertex<'V>"
- uid: B2R2.BinGraph.SimpleDiGraph`2.FindVertexByData*
  name: FindVertexByData
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_FindVertexByData_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.FindVertexByData*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.FindVertexByData
  nameWithType: SimpleDiGraph.FindVertexByData
- uid: B2R2.BinGraph.SimpleDiGraph`2.GenID(unit)
  name: 'member GenID: unit -> VertexID'
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_GenID_unit_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.GenID
  fullName: 'member B2R2.BinGraph.SimpleDiGraph.GenID: unit -> B2R2.BinGraph.VertexID'
  nameWithType: 'member SimpleDiGraph.GenID: unit -> VertexID'
- uid: B2R2.BinGraph.SimpleDiGraph`2.GenID*
  name: GenID
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_GenID_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.GenID*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.GenID
  nameWithType: SimpleDiGraph.GenID
- uid: B2R2.BinGraph.SimpleDiGraph`2.GetMaxID(unit)
  name: 'member GetMaxID: unit -> VertexID'
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_GetMaxID_unit_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.GetMaxID
  fullName: 'member B2R2.BinGraph.SimpleDiGraph.GetMaxID: unit -> B2R2.BinGraph.VertexID'
  nameWithType: 'member SimpleDiGraph.GetMaxID: unit -> VertexID'
- uid: B2R2.BinGraph.SimpleDiGraph`2.GetMaxID*
  name: GetMaxID
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_GetMaxID_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.GetMaxID*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.GetMaxID
  nameWithType: SimpleDiGraph.GetMaxID
- uid: B2R2.BinGraph.SimpleDiGraph`2.IsEmpty(unit)
  name: 'member IsEmpty: unit -> bool'
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_IsEmpty_unit_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.IsEmpty
  fullName: 'member B2R2.BinGraph.SimpleDiGraph.IsEmpty: unit -> bool'
  nameWithType: 'member SimpleDiGraph.IsEmpty: unit -> bool'
- uid: B2R2.BinGraph.SimpleDiGraph`2.IsEmpty*
  name: IsEmpty
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_IsEmpty_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.IsEmpty*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.IsEmpty
  nameWithType: SimpleDiGraph.IsEmpty
- uid: B2R2.BinGraph.SimpleDiGraph`2.RemoveEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>)
  name: "member RemoveEdge: Vertex<'V> -> Vertex<'V> -> unit"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_RemoveEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.RemoveEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.SimpleDiGraph.RemoveEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> unit"
  nameWithType: "member SimpleDiGraph.RemoveEdge: Vertex<'V> -> Vertex<'V> -> unit"
- uid: B2R2.BinGraph.SimpleDiGraph`2.RemoveEdge*
  name: RemoveEdge
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_RemoveEdge_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.RemoveEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.RemoveEdge
  nameWithType: SimpleDiGraph.RemoveEdge
- uid: B2R2.BinGraph.SimpleDiGraph`2.RemoveVertex(B2R2.BinGraph.Vertex<'V>)
  name: "member RemoveVertex: Vertex<'V> -> unit"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_RemoveVertex_B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.RemoveVertex(B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.SimpleDiGraph.RemoveVertex: B2R2.BinGraph.Vertex<'V> -> unit"
  nameWithType: "member SimpleDiGraph.RemoveVertex: Vertex<'V> -> unit"
- uid: B2R2.BinGraph.SimpleDiGraph`2.RemoveVertex*
  name: RemoveVertex
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_RemoveVertex_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.RemoveVertex*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.RemoveVertex
  nameWithType: SimpleDiGraph.RemoveVertex
- uid: B2R2.BinGraph.SimpleDiGraph`2.Reverse(unit)
  name: "member Reverse: unit -> DiGraph<'V,'E>"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_Reverse_unit_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.Reverse
  fullName: "member B2R2.BinGraph.SimpleDiGraph.Reverse: unit -> B2R2.BinGraph.DiGraph<'V,'E>"
  nameWithType: "member SimpleDiGraph.Reverse: unit -> DiGraph<'V,'E>"
- uid: B2R2.BinGraph.SimpleDiGraph`2.Reverse*
  name: Reverse
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_Reverse_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.Reverse*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.Reverse
  nameWithType: SimpleDiGraph.Reverse
- uid: B2R2.BinGraph.SimpleDiGraph`2.Size(unit)
  name: 'member Size: unit -> int'
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_Size_unit_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.Size
  fullName: 'member B2R2.BinGraph.SimpleDiGraph.Size: unit -> int'
  nameWithType: 'member SimpleDiGraph.Size: unit -> int'
- uid: B2R2.BinGraph.SimpleDiGraph`2.Size*
  name: Size
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_Size_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.Size*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.Size
  nameWithType: SimpleDiGraph.Size
- uid: B2R2.BinGraph.SimpleDiGraph`2.TryFindEdge(B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V>)
  name: "member TryFindEdge: Vertex<'V> -> Vertex<'V> -> 'E option"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_TryFindEdge_B2R2_BinGraph_Vertex__V_____B2R2_BinGraph_Vertex__V__
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.TryFindEdge(B2R2.BinGraph.Vertex{`0},B2R2.BinGraph.Vertex{`0})
  fullName: "member B2R2.BinGraph.SimpleDiGraph.TryFindEdge: B2R2.BinGraph.Vertex<'V> -> B2R2.BinGraph.Vertex<'V> -> 'E option"
  nameWithType: "member SimpleDiGraph.TryFindEdge: Vertex<'V> -> Vertex<'V> -> 'E option"
- uid: B2R2.BinGraph.SimpleDiGraph`2.TryFindEdge*
  name: TryFindEdge
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_TryFindEdge_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.TryFindEdge*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.TryFindEdge
  nameWithType: SimpleDiGraph.TryFindEdge
- uid: B2R2.BinGraph.SimpleDiGraph`2.TryFindVertexByData('V)
  name: "member TryFindVertexByData: 'V -> Vertex<'V> option"
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_TryFindVertexByData__V_
  commentId: M:B2R2.BinGraph.SimpleDiGraph`2.TryFindVertexByData(`0)
  fullName: "member B2R2.BinGraph.SimpleDiGraph.TryFindVertexByData: 'V -> B2R2.BinGraph.Vertex<'V> option"
  nameWithType: "member SimpleDiGraph.TryFindVertexByData: 'V -> Vertex<'V> option"
- uid: B2R2.BinGraph.SimpleDiGraph`2.TryFindVertexByData*
  name: TryFindVertexByData
  href: api/B2R2.BinGraph.SimpleDiGraph-2.html#B2R2_BinGraph_SimpleDiGraph_2_TryFindVertexByData_
  commentId: Overload:B2R2.BinGraph.SimpleDiGraph`2.TryFindVertexByData*
  isSpec: "True"
  fullName: B2R2.BinGraph.SimpleDiGraph.TryFindVertexByData
  nameWithType: SimpleDiGraph.TryFindVertexByData
- uid: B2R2.BinGraph.Vertex`1
  name: Vertex<'V>
  href: api/B2R2.BinGraph.Vertex-1.html
  commentId: T:B2R2.BinGraph.Vertex`1
  fullName: B2R2.BinGraph.Vertex`1
  nameWithType: B2R2.BinGraph.Vertex`1
- uid: B2R2.BinGraph.Vertex`1.#ctor('V option)
  name: "new: 'V option -> Vertex<'V>"
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1__ctor__V_option_
  commentId: M:B2R2.BinGraph.Vertex`1.#ctor(Microsoft.FSharp.Core.FSharpOption{`0})
  fullName: "new: 'V option -> B2R2.BinGraph.Vertex<'V>"
  nameWithType: "new: 'V option -> Vertex<'V>"
- uid: B2R2.BinGraph.Vertex`1.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1__ctor_
  commentId: Overload:B2R2.BinGraph.Vertex`1.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex
  nameWithType: Vertex.( .ctor )
- uid: B2R2.BinGraph.Vertex`1.GetID(B2R2.BinGraph.Vertex<'?19242>)
  name: "static member GetID: Vertex<'?19242> -> VertexID"
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_GetID_B2R2_BinGraph_Vertex___19242__
  commentId: M:B2R2.BinGraph.Vertex`1.GetID``1(B2R2.BinGraph.Vertex{``0})
  fullName: "static member B2R2.BinGraph.Vertex.GetID: B2R2.BinGraph.Vertex<'?19242> -> B2R2.BinGraph.VertexID"
  nameWithType: "static member Vertex.GetID: Vertex<'?19242> -> VertexID"
- uid: B2R2.BinGraph.Vertex`1.GetID(unit)
  name: 'member GetID: unit -> VertexID'
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_GetID_unit_
  commentId: M:B2R2.BinGraph.Vertex`1.GetID
  fullName: 'member B2R2.BinGraph.Vertex.GetID: unit -> B2R2.BinGraph.VertexID'
  nameWithType: 'member Vertex.GetID: unit -> VertexID'
- uid: B2R2.BinGraph.Vertex`1.GetID*
  name: GetID
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_GetID_
  commentId: Overload:B2R2.BinGraph.Vertex`1.GetID*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex.GetID
  nameWithType: Vertex.GetID
- uid: B2R2.BinGraph.Vertex`1.Preds(unit)
  name: "property Preds: Vertex<'V> list"
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_Preds_unit_
  commentId: P:B2R2.BinGraph.Vertex`1.Preds
  fullName: "property B2R2.BinGraph.Vertex.Preds: B2R2.BinGraph.Vertex<'V> list"
  nameWithType: "property Vertex.Preds: Vertex<'V> list"
- uid: B2R2.BinGraph.Vertex`1.Preds*
  name: Preds
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_Preds_
  commentId: Overload:B2R2.BinGraph.Vertex`1.Preds*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex.Preds
  nameWithType: Vertex.Preds
- uid: B2R2.BinGraph.Vertex`1.Succs(unit)
  name: "property Succs: Vertex<'V> list"
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_Succs_unit_
  commentId: P:B2R2.BinGraph.Vertex`1.Succs
  fullName: "property B2R2.BinGraph.Vertex.Succs: B2R2.BinGraph.Vertex<'V> list"
  nameWithType: "property Vertex.Succs: Vertex<'V> list"
- uid: B2R2.BinGraph.Vertex`1.Succs*
  name: Succs
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_Succs_
  commentId: Overload:B2R2.BinGraph.Vertex`1.Succs*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex.Succs
  nameWithType: Vertex.Succs
- uid: B2R2.BinGraph.Vertex`1.System.IComparable.CompareTo(obj)
  name: 'interface IComparable with member CompareTo: obj -> int'
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_System_IComparable_CompareTo_obj_
  commentId: M:B2R2.BinGraph.Vertex`1.System-IComparable-CompareTo(System.Object)
  fullName: 'interface System.IComparable with member B2R2.BinGraph.Vertex.CompareTo: obj -> int'
  nameWithType: 'interface IComparable with member Vertex.CompareTo: obj -> int'
- uid: B2R2.BinGraph.Vertex`1.System.IComparable.CompareTo*
  name: CompareTo
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_System_IComparable_CompareTo_
  commentId: Overload:B2R2.BinGraph.Vertex`1.System.IComparable.CompareTo*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex.CompareTo
  nameWithType: Vertex.CompareTo
- uid: B2R2.BinGraph.Vertex`1.System.Object.Equals(obj)
  name: 'override member Equals: obj -> bool'
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_System_Object_Equals_obj_
  commentId: M:B2R2.BinGraph.Vertex`1.Equals(System.Object)
  fullName: 'override member B2R2.BinGraph.Vertex.Equals: obj -> bool'
  nameWithType: 'override member Vertex.Equals: obj -> bool'
- uid: B2R2.BinGraph.Vertex`1.System.Object.Equals*
  name: Equals
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_System_Object_Equals_
  commentId: Overload:B2R2.BinGraph.Vertex`1.System.Object.Equals*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex.Equals
  nameWithType: Vertex.Equals
- uid: B2R2.BinGraph.Vertex`1.System.Object.GetHashCode(unit)
  name: 'override member GetHashCode: unit -> int'
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_System_Object_GetHashCode_unit_
  commentId: M:B2R2.BinGraph.Vertex`1.GetHashCode
  fullName: 'override member B2R2.BinGraph.Vertex.GetHashCode: unit -> int'
  nameWithType: 'override member Vertex.GetHashCode: unit -> int'
- uid: B2R2.BinGraph.Vertex`1.System.Object.GetHashCode*
  name: GetHashCode
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_System_Object_GetHashCode_
  commentId: Overload:B2R2.BinGraph.Vertex`1.System.Object.GetHashCode*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex.GetHashCode
  nameWithType: Vertex.GetHashCode
- uid: B2R2.BinGraph.Vertex`1.VData(unit)
  name: "property VData: 'V"
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_VData_unit_
  commentId: P:B2R2.BinGraph.Vertex`1.VData
  fullName: "property B2R2.BinGraph.Vertex.VData: 'V"
  nameWithType: "property Vertex.VData: 'V"
- uid: B2R2.BinGraph.Vertex`1.VData*
  name: VData
  href: api/B2R2.BinGraph.Vertex-1.html#B2R2_BinGraph_Vertex_1_VData_
  commentId: Overload:B2R2.BinGraph.Vertex`1.VData*
  isSpec: "True"
  fullName: B2R2.BinGraph.Vertex.VData
  nameWithType: Vertex.VData
- uid: B2R2.BinGraph.VertexData
  name: VertexData
  href: api/B2R2.BinGraph.VertexData.html
  commentId: T:B2R2.BinGraph.VertexData
  fullName: B2R2.BinGraph.VertexData
  nameWithType: B2R2.BinGraph.VertexData
- uid: B2R2.BinGraph.VertexData.#ctor(B2R2.BinGraph.VertexID)
  name: 'new: VertexID -> VertexData'
  href: api/B2R2.BinGraph.VertexData.html#B2R2_BinGraph_VertexData__ctor_B2R2_BinGraph_VertexID_
  commentId: M:B2R2.BinGraph.VertexData.#ctor(System.Int32)
  fullName: 'new: B2R2.BinGraph.VertexID -> B2R2.BinGraph.VertexData'
  nameWithType: 'new: VertexID -> VertexData'
- uid: B2R2.BinGraph.VertexData.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinGraph.VertexData.html#B2R2_BinGraph_VertexData__ctor_
  commentId: Overload:B2R2.BinGraph.VertexData.#ctor*
  isSpec: "True"
  fullName: B2R2.BinGraph.VertexData
  nameWithType: VertexData.( .ctor )
- uid: B2R2.BinGraph.VertexData.ID(unit)
  name: 'property ID: VertexID'
  href: api/B2R2.BinGraph.VertexData.html#B2R2_BinGraph_VertexData_ID_unit_
  commentId: P:B2R2.BinGraph.VertexData.ID
  fullName: 'property B2R2.BinGraph.VertexData.ID: B2R2.BinGraph.VertexID'
  nameWithType: 'property VertexData.ID: VertexID'
- uid: B2R2.BinGraph.VertexData.ID*
  name: ID
  href: api/B2R2.BinGraph.VertexData.html#B2R2_BinGraph_VertexData_ID_
  commentId: Overload:B2R2.BinGraph.VertexData.ID*
  isSpec: "True"
  fullName: B2R2.BinGraph.VertexData.ID
  nameWithType: VertexData.ID
- uid: B2R2.BinGraph.VertexDataModule
  name: VertexData (mod)
  href: api/B2R2.BinGraph.VertexDataModule.html
  commentId: T:B2R2.BinGraph.VertexDataModule
  fullName: B2R2.BinGraph.VertexDataModule
  nameWithType: B2R2.BinGraph.VertexDataModule
- uid: B2R2.BinGraph.VertexDataModule.genID(unit)
  name: 'val genID: unit -> int'
  href: api/B2R2.BinGraph.VertexDataModule.html#B2R2_BinGraph_VertexDataModule_genID_unit_
  commentId: M:B2R2.BinGraph.genID
  fullName: 'val B2R2.BinGraph.VertexDataModule.genID: unit -> int'
  nameWithType: 'val VertexData.genID: unit -> int'
- uid: B2R2.BinGraph.VertexDataModule.genID*
  name: genID
  href: api/B2R2.BinGraph.VertexDataModule.html#B2R2_BinGraph_VertexDataModule_genID_
  commentId: Overload:B2R2.BinGraph.VertexDataModule.genID*
  isSpec: "True"
  fullName: B2R2.BinGraph.VertexDataModule.genID
  nameWithType: VertexData.genID
- uid: B2R2.BinGraph.VertexID
  name: VertexID (abrv)
  href: api/B2R2.BinGraph.VertexID.html
  commentId: T:B2R2.BinGraph.VertexID
  fullName: B2R2.BinGraph.VertexID
  nameWithType: B2R2.BinGraph.VertexID
- uid: B2R2.BinGraph.VertexNotFoundException
  name: VertexNotFoundException
  href: api/B2R2.BinGraph.VertexNotFoundException.html
  commentId: T:B2R2.BinGraph.VertexNotFoundException
  fullName: B2R2.BinGraph.VertexNotFoundException
  nameWithType: B2R2.BinGraph.VertexNotFoundException
- uid: B2R2.BinIR
  name: B2R2.BinIR
  href: api/B2R2.BinIR.html
  commentId: N:B2R2.BinIR
  fullName: B2R2.BinIR
  nameWithType: B2R2.BinIR
- uid: B2R2.BinIR.LowUIR
  name: B2R2.BinIR.LowUIR
  href: api/B2R2.BinIR.LowUIR.html
  commentId: N:B2R2.BinIR.LowUIR
  fullName: B2R2.BinIR.LowUIR
  nameWithType: B2R2.BinIR.LowUIR
- uid: B2R2.BinIR.LowUIR.AST
  name: AST (mod)
  href: api/B2R2.BinIR.LowUIR.AST.html
  commentId: T:B2R2.BinIR.LowUIR.AST
  fullName: B2R2.BinIR.LowUIR.AST
  nameWithType: B2R2.BinIR.LowUIR.AST
- uid: B2R2.BinIR.LowUIR.AST.( != )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( != ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_BangEquals(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( != ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( != ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( != )*
  name: ( != )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( != )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( != )
  nameWithType: AST.( != )
- uid: B2R2.BinIR.LowUIR.AST.( .- )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( .- ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_DotMinus(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( .- ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( .- ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( .- )*
  name: ( .- )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( .- )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( .- )
  nameWithType: AST.( .- )
- uid: B2R2.BinIR.LowUIR.AST.( .% )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( .% ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_DotPercent(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( .% ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( .% ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( .% )*
  name: ( .% )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( .% )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( .% )
  nameWithType: AST.( .% )
- uid: B2R2.BinIR.LowUIR.AST.( .& )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( .& ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_DotAmp(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( .& ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( .& ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( .& )*
  name: ( .& )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( .& )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( .& )
  nameWithType: AST.( .& )
- uid: B2R2.BinIR.LowUIR.AST.( .* )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( .* ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_DotMultiply(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( .* ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( .* ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( .* )*
  name: ( .* )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( .* )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( .* )
  nameWithType: AST.( .* )
- uid: B2R2.BinIR.LowUIR.AST.( ./ )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( ./ ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_DotDivide(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( ./ ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( ./ ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( ./ )*
  name: ( ./ )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( ./ )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( ./ )
  nameWithType: AST.( ./ )
- uid: B2R2.BinIR.LowUIR.AST.( .| )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( .| ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_DotBar(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( .| ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( .| ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( .| )*
  name: ( .| )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( .| )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( .| )
  nameWithType: AST.( .| )
- uid: B2R2.BinIR.LowUIR.AST.( .+ )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( .+ ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_DotPlus(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( .+ ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( .+ ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( .+ )*
  name: ( .+ )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( .+ )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( .+ )
  nameWithType: AST.( .+ )
- uid: B2R2.BinIR.LowUIR.AST.( := )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( := ): Expr -> Expr -> Stmt'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_ColonEquals(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( := ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Stmt'
  nameWithType: 'val AST.( := ): Expr -> Expr -> Stmt'
- uid: B2R2.BinIR.LowUIR.AST.( := )*
  name: ( := )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( := )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( := )
  nameWithType: AST.( := )
- uid: B2R2.BinIR.LowUIR.AST.( ?% )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( ?% ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_QmarkPercent(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( ?% ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( ?% ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( ?% )*
  name: ( ?% )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( ?% )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( ?% )
  nameWithType: AST.( ?% )
- uid: B2R2.BinIR.LowUIR.AST.( ?/ )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( ?/ ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_QmarkDivide(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( ?/ ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( ?/ ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( ?/ )*
  name: ( ?/ )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( ?/ )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( ?/ )
  nameWithType: AST.( ?/ )
- uid: B2R2.BinIR.LowUIR.AST.( ?>> )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( ?>> ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_QmarkGreaterGreater(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( ?>> ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( ?>> ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( ?>> )*
  name: ( ?>> )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( ?>> )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( ?>> )
  nameWithType: AST.( ?>> )
- uid: B2R2.BinIR.LowUIR.AST.( <+> )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( <+> ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_LessPlusGreater(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( <+> ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( <+> ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( <+> )*
  name: ( <+> )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( <+> )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( <+> )
  nameWithType: AST.( <+> )
- uid: B2R2.BinIR.LowUIR.AST.( << )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( << ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_ComposeLeft(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( << ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( << ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( << )*
  name: ( << )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( << )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( << )
  nameWithType: AST.( << )
- uid: B2R2.BinIR.LowUIR.AST.( == )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( == ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_EqualsEquals(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( == ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( == ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( == )*
  name: ( == )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( == )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( == )
  nameWithType: AST.( == )
- uid: B2R2.BinIR.LowUIR.AST.( >> )(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ( >> ): Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.op_ComposeRight(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.( >> ): B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.( >> ): Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.( >> )*
  name: ( >> )
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST________
  commentId: Overload:B2R2.BinIR.LowUIR.AST.( >> )*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.( >> )
  nameWithType: AST.( >> )
- uid: B2R2.BinIR.LowUIR.AST.app(string -> B2R2.BinIR.LowUIR.Expr list -> B2R2.RegType)
  name: 'val app: string -> Expr list -> RegType -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_app_string____B2R2_BinIR_LowUIR_Expr_list____B2R2_RegType_
  commentId: M:B2R2.BinIR.LowUIR.app(System.String,Microsoft.FSharp.Collections.FSharpList{B2R2.BinIR.LowUIR.Expr},System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.AST.app: string -> B2R2.BinIR.LowUIR.Expr list -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.app: string -> Expr list -> RegType -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.app*
  name: app
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_app_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.app*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.app
  nameWithType: AST.app
- uid: B2R2.BinIR.LowUIR.AST.b0()
  name: val b0
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_b0__
  commentId: P:B2R2.BinIR.LowUIR.b0
  fullName: 'val B2R2.BinIR.LowUIR.AST.b0: B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.b0: Expr'
- uid: B2R2.BinIR.LowUIR.AST.b1()
  name: val b1
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_b1__
  commentId: P:B2R2.BinIR.LowUIR.b1
  fullName: 'val B2R2.BinIR.LowUIR.AST.b1: B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.b1: Expr'
- uid: B2R2.BinIR.LowUIR.AST.binop(B2R2.BinIR.LowUIR.BinOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val binop: BinOpType -> Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_binop_B2R2_BinIR_LowUIR_BinOpType____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.binop(B2R2.BinIR.LowUIR.BinOpType,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.binop: B2R2.BinIR.LowUIR.BinOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.binop: BinOpType -> Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.binop*
  name: binop
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_binop_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.binop*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.binop
  nameWithType: AST.binop
- uid: B2R2.BinIR.LowUIR.AST.cast(B2R2.BinIR.LowUIR.CastKind -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val cast: CastKind -> RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_cast_B2R2_BinIR_LowUIR_CastKind____B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.cast(B2R2.BinIR.LowUIR.CastKind,System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.cast: B2R2.BinIR.LowUIR.CastKind -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.cast: CastKind -> RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.cast*
  name: cast
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_cast_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.cast*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.cast
  nameWithType: AST.cast
- uid: B2R2.BinIR.LowUIR.AST.concat(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val concat: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_concat_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.concat(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.concat: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.concat: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.concat*
  name: concat
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_concat_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.concat*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.concat
  nameWithType: AST.concat
- uid: B2R2.BinIR.LowUIR.AST.concatExprs(B2R2.BinIR.LowUIR.Expr [])
  name: 'val concatExprs: Expr [] -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_concatExprs_B2R2_BinIR_LowUIR_Expr____
  commentId: M:B2R2.BinIR.LowUIR.concatExprs(B2R2.BinIR.LowUIR.Expr[])
  fullName: 'val B2R2.BinIR.LowUIR.AST.concatExprs: B2R2.BinIR.LowUIR.Expr [] -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.concatExprs: Expr [] -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.concatExprs*
  name: concatExprs
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_concatExprs_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.concatExprs*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.concatExprs
  nameWithType: AST.concatExprs
- uid: B2R2.BinIR.LowUIR.AST.cons(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val cons: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_cons_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.cons(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.cons: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.cons: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.cons*
  name: cons
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_cons_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.cons*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.cons
  nameWithType: AST.cons
- uid: B2R2.BinIR.LowUIR.AST.extract(B2R2.BinIR.LowUIR.Expr -> B2R2.RegType -> B2R2.BinIR.LowUIR.StartPos)
  name: 'val extract: Expr -> RegType -> StartPos -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_extract_B2R2_BinIR_LowUIR_Expr____B2R2_RegType____B2R2_BinIR_LowUIR_StartPos_
  commentId: M:B2R2.BinIR.LowUIR.extract(B2R2.BinIR.LowUIR.Expr,System.Int32,System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.AST.extract: B2R2.BinIR.LowUIR.Expr -> B2R2.RegType -> B2R2.BinIR.LowUIR.StartPos -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.extract: Expr -> RegType -> StartPos -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.extract*
  name: extract
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_extract_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.extract*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.extract
  nameWithType: AST.extract
- uid: B2R2.BinIR.LowUIR.AST.extractHigh(B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val extractHigh: RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_extractHigh_B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.extractHigh(System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.extractHigh: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.extractHigh: RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.extractHigh*
  name: extractHigh
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_extractHigh_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.extractHigh*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.extractHigh
  nameWithType: AST.extractHigh
- uid: B2R2.BinIR.LowUIR.AST.extractLow(B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val extractLow: RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_extractLow_B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.extractLow(System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.extractLow: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.extractLow: RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.extractLow*
  name: extractLow
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_extractLow_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.extractLow*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.extractLow
  nameWithType: AST.extractLow
- uid: B2R2.BinIR.LowUIR.AST.ge(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ge: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_ge_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.ge(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.ge: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.ge: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.ge*
  name: ge
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_ge_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.ge*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.ge
  nameWithType: AST.ge
- uid: B2R2.BinIR.LowUIR.AST.getExprInfo(B2R2.BinIR.LowUIR.Expr)
  name: 'val getExprInfo: Expr -> ExprInfo'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_getExprInfo_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.getExprInfo(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.getExprInfo: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.ExprInfo'
  nameWithType: 'val AST.getExprInfo: Expr -> ExprInfo'
- uid: B2R2.BinIR.LowUIR.AST.getExprInfo*
  name: getExprInfo
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_getExprInfo_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.getExprInfo*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.getExprInfo
  nameWithType: AST.getExprInfo
- uid: B2R2.BinIR.LowUIR.AST.gt(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val gt: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_gt_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.gt(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.gt: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.gt: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.gt*
  name: gt
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_gt_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.gt*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.gt
  nameWithType: AST.gt
- uid: B2R2.BinIR.LowUIR.AST.ite(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ite: Expr -> Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_ite_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.ite(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.ite: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.ite: Expr -> Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.ite*
  name: ite
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_ite_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.ite*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.ite
  nameWithType: AST.ite
- uid: B2R2.BinIR.LowUIR.AST.lblSymbol(string)
  name: 'val lblSymbol: string -> Symbol'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_lblSymbol_string_
  commentId: M:B2R2.BinIR.LowUIR.lblSymbol(System.String)
  fullName: 'val B2R2.BinIR.LowUIR.AST.lblSymbol: string -> B2R2.BinIR.Symbol'
  nameWithType: 'val AST.lblSymbol: string -> Symbol'
- uid: B2R2.BinIR.LowUIR.AST.lblSymbol*
  name: lblSymbol
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_lblSymbol_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.lblSymbol*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.lblSymbol
  nameWithType: AST.lblSymbol
- uid: B2R2.BinIR.LowUIR.AST.le(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val le: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_le_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.le(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.le: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.le: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.le*
  name: le
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_le_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.le*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.le
  nameWithType: AST.le
- uid: B2R2.BinIR.LowUIR.AST.load(B2R2.Endian -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val load: Endian -> RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_load_B2R2_Endian____B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.load(B2R2.Endian,System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.load: B2R2.Endian -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.load: Endian -> RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.load*
  name: load
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_load_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.load*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.load
  nameWithType: AST.load
- uid: B2R2.BinIR.LowUIR.AST.loadLE(B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val loadLE: RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_loadLE_B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.loadLE(System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.loadLE: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.loadLE: RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.loadLE*
  name: loadLE
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_loadLE_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.loadLE*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.loadLE
  nameWithType: AST.loadLE
- uid: B2R2.BinIR.LowUIR.AST.lt(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val lt: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_lt_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.lt(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.lt: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.lt: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.lt*
  name: lt
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_lt_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.lt*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.lt
  nameWithType: AST.lt
- uid: B2R2.BinIR.LowUIR.AST.neg(B2R2.BinIR.LowUIR.Expr)
  name: 'val neg: Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_neg_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.neg(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.neg: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.neg: Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.neg*
  name: neg
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_neg_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.neg*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.neg
  nameWithType: AST.neg
- uid: B2R2.BinIR.LowUIR.AST.not(B2R2.BinIR.LowUIR.Expr)
  name: 'val not: Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_not_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.not(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.not: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.not: Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.not*
  name: not
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_not_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.not*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.not
  nameWithType: AST.not
- uid: B2R2.BinIR.LowUIR.AST.num(B2R2.BitVector)
  name: 'val num: BitVector -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_num_B2R2_BitVector_
  commentId: M:B2R2.BinIR.LowUIR.num(B2R2.BitVector)
  fullName: 'val B2R2.BinIR.LowUIR.AST.num: B2R2.BitVector -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.num: BitVector -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.num*
  name: num
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_num_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.num*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.num
  nameWithType: AST.num
- uid: B2R2.BinIR.LowUIR.AST.num0(B2R2.RegType)
  name: 'val num0: RegType -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_num0_B2R2_RegType_
  commentId: M:B2R2.BinIR.LowUIR.num0(System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.AST.num0: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.num0: RegType -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.num0*
  name: num0
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_num0_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.num0*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.num0
  nameWithType: AST.num0
- uid: B2R2.BinIR.LowUIR.AST.num1(B2R2.RegType)
  name: 'val num1: RegType -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_num1_B2R2_RegType_
  commentId: M:B2R2.BinIR.LowUIR.num1(System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.AST.num1: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.num1: RegType -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.num1*
  name: num1
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_num1_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.num1*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.num1
  nameWithType: AST.num1
- uid: B2R2.BinIR.LowUIR.AST.pcVar(B2R2.RegType -> string)
  name: 'val pcVar: RegType -> string -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_pcVar_B2R2_RegType____string_
  commentId: M:B2R2.BinIR.LowUIR.pcVar(System.Int32,System.String)
  fullName: 'val B2R2.BinIR.LowUIR.AST.pcVar: B2R2.RegType -> string -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.pcVar: RegType -> string -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.pcVar*
  name: pcVar
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_pcVar_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.pcVar*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.pcVar
  nameWithType: AST.pcVar
- uid: B2R2.BinIR.LowUIR.AST.relop(B2R2.BinIR.LowUIR.RelOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val relop: RelOpType -> Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_relop_B2R2_BinIR_LowUIR_RelOpType____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.relop(B2R2.BinIR.LowUIR.RelOpType,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.relop: B2R2.BinIR.LowUIR.RelOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.relop: RelOpType -> Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.relop*
  name: relop
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_relop_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.relop*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.relop
  nameWithType: AST.relop
- uid: B2R2.BinIR.LowUIR.AST.sExt(B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val sExt: RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sExt_B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.sExt(System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.sExt: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.sExt: RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.sExt*
  name: sExt
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sExt_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.sExt*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.sExt
  nameWithType: AST.sExt
- uid: B2R2.BinIR.LowUIR.AST.sge(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val sge: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sge_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.sge(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.sge: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.sge: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.sge*
  name: sge
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sge_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.sge*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.sge
  nameWithType: AST.sge
- uid: B2R2.BinIR.LowUIR.AST.sgt(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val sgt: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sgt_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.sgt(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.sgt: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.sgt: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.sgt*
  name: sgt
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sgt_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.sgt*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.sgt
  nameWithType: AST.sgt
- uid: B2R2.BinIR.LowUIR.AST.sle(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val sle: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sle_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.sle(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.sle: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.sle: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.sle*
  name: sle
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_sle_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.sle*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.sle
  nameWithType: AST.sle
- uid: B2R2.BinIR.LowUIR.AST.slt(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val slt: Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_slt_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.slt(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.slt: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.slt: Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.slt*
  name: slt
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_slt_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.slt*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.slt
  nameWithType: AST.slt
- uid: B2R2.BinIR.LowUIR.AST.tmpVar(B2R2.RegType)
  name: 'val tmpVar: RegType -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_tmpVar_B2R2_RegType_
  commentId: M:B2R2.BinIR.LowUIR.tmpVar(System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.AST.tmpVar: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.tmpVar: RegType -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.tmpVar*
  name: tmpVar
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_tmpVar_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.tmpVar*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.tmpVar
  nameWithType: AST.tmpVar
- uid: B2R2.BinIR.LowUIR.AST.typeCheck(B2R2.BinIR.LowUIR.Stmt)
  name: 'val typeCheck: Stmt -> bool'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_typeCheck_B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinIR.LowUIR.typeCheck(B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinIR.LowUIR.AST.typeCheck: B2R2.BinIR.LowUIR.Stmt -> bool'
  nameWithType: 'val AST.typeCheck: Stmt -> bool'
- uid: B2R2.BinIR.LowUIR.AST.typeCheck*
  name: typeCheck
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_typeCheck_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.typeCheck*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.typeCheck
  nameWithType: AST.typeCheck
- uid: B2R2.BinIR.LowUIR.AST.typeOf(B2R2.BinIR.LowUIR.Expr)
  name: 'val typeOf: Expr -> RegType'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_typeOf_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.typeOf(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.typeOf: B2R2.BinIR.LowUIR.Expr -> B2R2.RegType'
  nameWithType: 'val AST.typeOf: Expr -> RegType'
- uid: B2R2.BinIR.LowUIR.AST.typeOf*
  name: typeOf
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_typeOf_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.typeOf*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.typeOf
  nameWithType: AST.typeOf
- uid: B2R2.BinIR.LowUIR.AST.unDef(B2R2.RegType -> string)
  name: 'val unDef: RegType -> string -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_unDef_B2R2_RegType____string_
  commentId: M:B2R2.BinIR.LowUIR.unDef(System.Int32,System.String)
  fullName: 'val B2R2.BinIR.LowUIR.AST.unDef: B2R2.RegType -> string -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.unDef: RegType -> string -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.unDef*
  name: unDef
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_unDef_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.unDef*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.unDef
  nameWithType: AST.unDef
- uid: B2R2.BinIR.LowUIR.AST.unop(B2R2.BinIR.LowUIR.UnOpType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val unop: UnOpType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_unop_B2R2_BinIR_LowUIR_UnOpType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.unop(B2R2.BinIR.LowUIR.UnOpType,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.unop: B2R2.BinIR.LowUIR.UnOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.unop: UnOpType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.unop*
  name: unop
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_unop_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.unop*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.unop
  nameWithType: AST.unop
- uid: B2R2.BinIR.LowUIR.AST.unwrapExpr(B2R2.BinIR.LowUIR.Expr)
  name: 'val unwrapExpr: Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_unwrapExpr_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.unwrapExpr(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.unwrapExpr: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.unwrapExpr: Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.unwrapExpr*
  name: unwrapExpr
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_unwrapExpr_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.unwrapExpr*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.unwrapExpr
  nameWithType: AST.unwrapExpr
- uid: B2R2.BinIR.LowUIR.AST.var(B2R2.RegType -> B2R2.RegisterID -> string -> B2R2.RegisterSet)
  name: 'val var: RegType -> RegisterID -> string -> RegisterSet -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_var_B2R2_RegType____B2R2_RegisterID____string____B2R2_RegisterSet_
  commentId: M:B2R2.BinIR.LowUIR.var(System.Int32,System.Int32,System.String,B2R2.RegisterSet)
  fullName: 'val B2R2.BinIR.LowUIR.AST.var: B2R2.RegType -> B2R2.RegisterID -> string -> B2R2.RegisterSet -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.var: RegType -> RegisterID -> string -> RegisterSet -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.var*
  name: var
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_var_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.var*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.var
  nameWithType: AST.var
- uid: B2R2.BinIR.LowUIR.AST.zExt(B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val zExt: RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_zExt_B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.zExt(System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.AST.zExt: B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val AST.zExt: RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.AST.zExt*
  name: zExt
  href: api/B2R2.BinIR.LowUIR.AST.html#B2R2_BinIR_LowUIR_AST_zExt_
  commentId: Overload:B2R2.BinIR.LowUIR.AST.zExt*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.AST.zExt
  nameWithType: AST.zExt
- uid: B2R2.BinIR.LowUIR.BinOpType
  name: BinOpType
  href: api/B2R2.BinIR.LowUIR.BinOpType.html
  commentId: T:B2R2.BinIR.LowUIR.BinOpType
  fullName: B2R2.BinIR.LowUIR.BinOpType
  nameWithType: B2R2.BinIR.LowUIR.BinOpType
- uid: B2R2.BinIR.LowUIR.BinOpType.ADD
  name: 'val ADD: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_ADD
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.ADD
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.ADD: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.ADD: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.AND
  name: 'val AND: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_AND
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.AND
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.AND: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.AND: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.APP
  name: 'val APP: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_APP
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.APP
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.APP: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.APP: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.CONCAT
  name: 'val CONCAT: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_CONCAT
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.CONCAT
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.CONCAT: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.CONCAT: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.CONS
  name: 'val CONS: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_CONS
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.CONS
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.CONS: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.CONS: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.DIV
  name: 'val DIV: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_DIV
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.DIV
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.DIV: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.DIV: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.MOD
  name: 'val MOD: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_MOD
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.MOD
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.MOD: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.MOD: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.MUL
  name: 'val MUL: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_MUL
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.MUL
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.MUL: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.MUL: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.OR
  name: 'val OR: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_OR
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.OR
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.OR: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.OR: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.SAR
  name: 'val SAR: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_SAR
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.SAR
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.SAR: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.SAR: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.SDIV
  name: 'val SDIV: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_SDIV
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.SDIV
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.SDIV: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.SDIV: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.SHL
  name: 'val SHL: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_SHL
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.SHL
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.SHL: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.SHL: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.SHR
  name: 'val SHR: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_SHR
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.SHR
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.SHR: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.SHR: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.SMOD
  name: 'val SMOD: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_SMOD
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.SMOD
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.SMOD: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.SMOD: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.SUB
  name: 'val SUB: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_SUB
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.SUB
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.SUB: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.SUB: BinOpType'
- uid: B2R2.BinIR.LowUIR.BinOpType.XOR
  name: 'val XOR: BinOpType'
  href: api/B2R2.BinIR.LowUIR.BinOpType.html#B2R2_BinIR_LowUIR_BinOpType_XOR
  commentId: P:B2R2.BinIR.LowUIR.BinOpType.XOR
  fullName: 'val B2R2.BinIR.LowUIR.BinOpType.XOR: B2R2.BinIR.LowUIR.BinOpType'
  nameWithType: 'val BinOpType.XOR: BinOpType'
- uid: B2R2.BinIR.LowUIR.CastKind
  name: CastKind
  href: api/B2R2.BinIR.LowUIR.CastKind.html
  commentId: T:B2R2.BinIR.LowUIR.CastKind
  fullName: B2R2.BinIR.LowUIR.CastKind
  nameWithType: B2R2.BinIR.LowUIR.CastKind
- uid: B2R2.BinIR.LowUIR.CastKind.SignExt
  name: 'val SignExt: CastKind'
  href: api/B2R2.BinIR.LowUIR.CastKind.html#B2R2_BinIR_LowUIR_CastKind_SignExt
  commentId: P:B2R2.BinIR.LowUIR.CastKind.SignExt
  fullName: 'val B2R2.BinIR.LowUIR.CastKind.SignExt: B2R2.BinIR.LowUIR.CastKind'
  nameWithType: 'val CastKind.SignExt: CastKind'
- uid: B2R2.BinIR.LowUIR.CastKind.ZeroExt
  name: 'val ZeroExt: CastKind'
  href: api/B2R2.BinIR.LowUIR.CastKind.html#B2R2_BinIR_LowUIR_CastKind_ZeroExt
  commentId: P:B2R2.BinIR.LowUIR.CastKind.ZeroExt
  fullName: 'val B2R2.BinIR.LowUIR.CastKind.ZeroExt: B2R2.BinIR.LowUIR.CastKind'
  nameWithType: 'val CastKind.ZeroExt: CastKind'
- uid: B2R2.BinIR.LowUIR.ConsInfo
  name: ConsInfo (rec)
  href: api/B2R2.BinIR.LowUIR.ConsInfo.html
  commentId: T:B2R2.BinIR.LowUIR.ConsInfo
  fullName: B2R2.BinIR.LowUIR.ConsInfo
  nameWithType: B2R2.BinIR.LowUIR.ConsInfo
- uid: B2R2.BinIR.LowUIR.ConsInfo.Hash
  name: 'val Hash: int'
  href: api/B2R2.BinIR.LowUIR.ConsInfo.html#B2R2_BinIR_LowUIR_ConsInfo_Hash
  commentId: P:B2R2.BinIR.LowUIR.ConsInfo.Hash
  fullName: 'val B2R2.BinIR.LowUIR.ConsInfo.Hash: int'
  nameWithType: 'val ConsInfo.Hash: int'
- uid: B2R2.BinIR.LowUIR.ConsInfo.Tag
  name: 'val Tag: int64'
  href: api/B2R2.BinIR.LowUIR.ConsInfo.html#B2R2_BinIR_LowUIR_ConsInfo_Tag
  commentId: P:B2R2.BinIR.LowUIR.ConsInfo.Tag
  fullName: 'val B2R2.BinIR.LowUIR.ConsInfo.Tag: int64'
  nameWithType: 'val ConsInfo.Tag: int64'
- uid: B2R2.BinIR.LowUIR.Eval
  name: Eval (mod)
  href: api/B2R2.BinIR.LowUIR.Eval.html
  commentId: T:B2R2.BinIR.LowUIR.Eval
  fullName: B2R2.BinIR.LowUIR.Eval
  nameWithType: B2R2.BinIR.LowUIR.Eval
- uid: B2R2.BinIR.LowUIR.Eval.emptyCallBack()
  name: val emptyCallBack
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_emptyCallBack__
  commentId: P:B2R2.BinIR.LowUIR.emptyCallBack
  fullName: 'val B2R2.BinIR.LowUIR.Eval.emptyCallBack: B2R2.BinIR.LowUIR.Eval.EvalCallBacks'
  nameWithType: 'val Eval.emptyCallBack: EvalCallBacks'
- uid: B2R2.BinIR.LowUIR.Eval.evalBinOp(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.BinOpType)
  name: 'val evalBinOp: EvalState -> Expr -> Expr -> BinOpType -> BitVector'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalBinOp_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_BinOpType_
  commentId: M:B2R2.BinIR.LowUIR.evalBinOp(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.BinOpType)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalBinOp: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.BinOpType -> B2R2.BitVector'
  nameWithType: 'val Eval.evalBinOp: EvalState -> Expr -> Expr -> BinOpType -> BitVector'
- uid: B2R2.BinIR.LowUIR.Eval.evalBinOp*
  name: evalBinOp
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalBinOp_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalBinOp*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalBinOp
  nameWithType: Eval.evalBinOp
- uid: B2R2.BinIR.LowUIR.Eval.evalBinOpConc(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BitVector -> B2R2.BitVector -> '?110934)
  name: "val evalBinOpConc: EvalState -> Expr -> Expr -> BitVector -> BitVector -> '?110934 -> '?110934"
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalBinOpConc_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BitVector____B2R2_BitVector______110934_
  commentId: M:B2R2.BinIR.LowUIR.evalBinOpConc``1(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,Microsoft.FSharp.Core.FSharpFunc{B2R2.BitVector,Microsoft.FSharp.Core.FSharpFunc{B2R2.BitVector,``0}})
  fullName: "val B2R2.BinIR.LowUIR.Eval.evalBinOpConc: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BitVector -> B2R2.BitVector -> '?110934 -> '?110934"
  nameWithType: "val Eval.evalBinOpConc: EvalState -> Expr -> Expr -> BitVector -> BitVector -> '?110934 -> '?110934"
- uid: B2R2.BinIR.LowUIR.Eval.evalBinOpConc*
  name: evalBinOpConc
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalBinOpConc_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalBinOpConc*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalBinOpConc
  nameWithType: Eval.evalBinOpConc
- uid: B2R2.BinIR.LowUIR.Eval.EvalCallBacks
  name: Eval.EvalCallBacks (rec)
  href: api/B2R2.BinIR.LowUIR.Eval.EvalCallBacks.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.EvalCallBacks
  fullName: B2R2.BinIR.LowUIR.Eval.EvalCallBacks
  nameWithType: B2R2.BinIR.LowUIR.Eval.EvalCallBacks
- uid: B2R2.BinIR.LowUIR.Eval.EvalCallBacks.SideEffectCallBack
  name: 'val SideEffectCallBack: SideEffect -> EvalState -> EvalState'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalCallBacks.html#B2R2_BinIR_LowUIR_Eval_EvalCallBacks_SideEffectCallBack
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalCallBacks.SideEffectCallBack
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalCallBacks.SideEffectCallBack: B2R2.BinIR.LowUIR.SideEffect -> B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val EvalCallBacks.SideEffectCallBack: SideEffect -> EvalState -> EvalState'
- uid: B2R2.BinIR.LowUIR.Eval.EvalCallBacks.StoreCallBack
  name: 'val StoreCallBack: Addr -> Addr -> BitVector -> unit'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalCallBacks.html#B2R2_BinIR_LowUIR_Eval_EvalCallBacks_StoreCallBack
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalCallBacks.StoreCallBack
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalCallBacks.StoreCallBack: B2R2.Addr -> B2R2.Addr -> B2R2.BitVector -> unit'
  nameWithType: 'val EvalCallBacks.StoreCallBack: Addr -> Addr -> BitVector -> unit'
- uid: B2R2.BinIR.LowUIR.Eval.evalCJmp(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalCJmp: EvalState -> Expr -> Expr -> Expr -> EvalState'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalCJmp_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalCJmp(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalCJmp: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val Eval.evalCJmp: EvalState -> Expr -> Expr -> Expr -> EvalState'
- uid: B2R2.BinIR.LowUIR.Eval.evalCJmp*
  name: evalCJmp
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalCJmp_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalCJmp*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalCJmp
  nameWithType: Eval.evalCJmp
- uid: B2R2.BinIR.LowUIR.Eval.evalConcrete(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalConcrete: EvalState -> Expr -> EvalValue'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalConcrete_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalConcrete(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalConcrete: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Eval.EvalValue'
  nameWithType: 'val Eval.evalConcrete: EvalState -> Expr -> EvalValue'
- uid: B2R2.BinIR.LowUIR.Eval.evalConcrete*
  name: evalConcrete
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalConcrete_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalConcrete*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalConcrete
  nameWithType: Eval.evalConcrete
- uid: B2R2.BinIR.LowUIR.Eval.evalInterCJmp(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalInterCJmp: EvalState -> Expr -> Expr -> Expr -> Expr -> EvalState'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalInterCJmp_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalInterCJmp(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalInterCJmp: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val Eval.evalInterCJmp: EvalState -> Expr -> Expr -> Expr -> Expr -> EvalState'
- uid: B2R2.BinIR.LowUIR.Eval.evalInterCJmp*
  name: evalInterCJmp
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalInterCJmp_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalInterCJmp*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalInterCJmp
  nameWithType: Eval.evalInterCJmp
- uid: B2R2.BinIR.LowUIR.Eval.evalIte(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalIte: EvalState -> Expr -> Expr -> Expr -> EvalValue'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalIte_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalIte(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalIte: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Eval.EvalValue'
  nameWithType: 'val Eval.evalIte: EvalState -> Expr -> Expr -> Expr -> EvalValue'
- uid: B2R2.BinIR.LowUIR.Eval.evalIte*
  name: evalIte
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalIte_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalIte*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalIte
  nameWithType: Eval.evalIte
- uid: B2R2.BinIR.LowUIR.Eval.evalJmp(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalJmp: EvalState -> Expr -> EvalState'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalJmp_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalJmp(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalJmp: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val Eval.evalJmp: EvalState -> Expr -> EvalState'
- uid: B2R2.BinIR.LowUIR.Eval.evalJmp*
  name: evalJmp
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalJmp_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalJmp*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalJmp
  nameWithType: Eval.evalJmp
- uid: B2R2.BinIR.LowUIR.Eval.evalLoad(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.Endian -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalLoad: EvalState -> Endian -> RegType -> Expr -> BitVector'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalLoad_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_Endian____B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalLoad(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.Endian,System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalLoad: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.Endian -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BitVector'
  nameWithType: 'val Eval.evalLoad: EvalState -> Endian -> RegType -> Expr -> BitVector'
- uid: B2R2.BinIR.LowUIR.Eval.evalLoad*
  name: evalLoad
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalLoad_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalLoad*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalLoad
  nameWithType: Eval.evalLoad
- uid: B2R2.BinIR.LowUIR.Eval.evalPut(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalPut: EvalState -> Expr -> Expr -> EvalState'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalPut_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalPut(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalPut: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val Eval.evalPut: EvalState -> Expr -> Expr -> EvalState'
- uid: B2R2.BinIR.LowUIR.Eval.evalPut*
  name: evalPut
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalPut_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalPut*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalPut
  nameWithType: Eval.evalPut
- uid: B2R2.BinIR.LowUIR.Eval.evalRelOp(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.RelOpType)
  name: 'val evalRelOp: EvalState -> Expr -> Expr -> RelOpType -> BitVector'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalRelOp_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_RelOpType_
  commentId: M:B2R2.BinIR.LowUIR.evalRelOp(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.RelOpType)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalRelOp: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.RelOpType -> B2R2.BitVector'
  nameWithType: 'val Eval.evalRelOp: EvalState -> Expr -> Expr -> RelOpType -> BitVector'
- uid: B2R2.BinIR.LowUIR.Eval.evalRelOp*
  name: evalRelOp
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalRelOp_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalRelOp*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalRelOp
  nameWithType: Eval.evalRelOp
- uid: B2R2.BinIR.LowUIR.Eval.EvalState
  name: Eval.EvalState (rec)
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.EvalState
  fullName: B2R2.BinIR.LowUIR.Eval.EvalState
  nameWithType: B2R2.BinIR.LowUIR.Eval.EvalState
- uid: B2R2.BinIR.LowUIR.Eval.EvalState.BlockEnd
  name: 'val BlockEnd: bool'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html#B2R2_BinIR_LowUIR_Eval_EvalState_BlockEnd
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalState.BlockEnd
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalState.BlockEnd: bool'
  nameWithType: 'val EvalState.BlockEnd: bool'
- uid: B2R2.BinIR.LowUIR.Eval.EvalState.LblMap
  name: 'val LblMap: Map<Symbol,int>'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html#B2R2_BinIR_LowUIR_Eval_EvalState_LblMap
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalState.LblMap
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalState.LblMap: Map<B2R2.BinIR.Symbol,int>'
  nameWithType: 'val EvalState.LblMap: Map<Symbol,int>'
- uid: B2R2.BinIR.LowUIR.Eval.EvalState.Mems
  name: 'val Mems: MemTbl'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html#B2R2_BinIR_LowUIR_Eval_EvalState_Mems
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalState.Mems
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalState.Mems: B2R2.BinIR.LowUIR.Eval.MemTbl'
  nameWithType: 'val EvalState.Mems: MemTbl'
- uid: B2R2.BinIR.LowUIR.Eval.EvalState.NextStmtIdx
  name: 'val NextStmtIdx: int'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html#B2R2_BinIR_LowUIR_Eval_EvalState_NextStmtIdx
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalState.NextStmtIdx
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalState.NextStmtIdx: int'
  nameWithType: 'val EvalState.NextStmtIdx: int'
- uid: B2R2.BinIR.LowUIR.Eval.EvalState.PC
  name: 'val PC: Addr'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html#B2R2_BinIR_LowUIR_Eval_EvalState_PC
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalState.PC
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalState.PC: B2R2.Addr'
  nameWithType: 'val EvalState.PC: Addr'
- uid: B2R2.BinIR.LowUIR.Eval.EvalState.TmpVars
  name: 'val TmpVars: TmpVarTbl'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html#B2R2_BinIR_LowUIR_Eval_EvalState_TmpVars
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalState.TmpVars
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalState.TmpVars: B2R2.BinIR.LowUIR.Eval.TmpVarTbl'
  nameWithType: 'val EvalState.TmpVars: TmpVarTbl'
- uid: B2R2.BinIR.LowUIR.Eval.EvalState.Vars
  name: 'val Vars: VarTbl'
  href: api/B2R2.BinIR.LowUIR.Eval.EvalState.html#B2R2_BinIR_LowUIR_Eval_EvalState_Vars
  commentId: P:B2R2.BinIR.LowUIR.Eval.EvalState.Vars
  fullName: 'val B2R2.BinIR.LowUIR.Eval.EvalState.Vars: B2R2.BinIR.LowUIR.Eval.VarTbl'
  nameWithType: 'val EvalState.Vars: VarTbl'
- uid: B2R2.BinIR.LowUIR.Eval.evalStmt(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Eval.EvalCallBacks -> B2R2.BinIR.LowUIR.Stmt)
  name: 'val evalStmt: EvalState -> EvalCallBacks -> Stmt -> EvalState'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalStmt_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Eval_EvalCallBacks____B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinIR.LowUIR.evalStmt(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Eval.EvalCallBacks,B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalStmt: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Eval.EvalCallBacks -> B2R2.BinIR.LowUIR.Stmt -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val Eval.evalStmt: EvalState -> EvalCallBacks -> Stmt -> EvalState'
- uid: B2R2.BinIR.LowUIR.Eval.evalStmt*
  name: evalStmt
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalStmt_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalStmt*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalStmt
  nameWithType: Eval.evalStmt
- uid: B2R2.BinIR.LowUIR.Eval.evalStore(B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Eval.EvalCallBacks -> B2R2.Endian -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val evalStore: EvalState -> EvalCallBacks -> Endian -> Expr -> Expr -> EvalState'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalStore_B2R2_BinIR_LowUIR_Eval_EvalState____B2R2_BinIR_LowUIR_Eval_EvalCallBacks____B2R2_Endian____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.evalStore(B2R2.BinIR.LowUIR.Eval.EvalState,B2R2.BinIR.LowUIR.Eval.EvalCallBacks,B2R2.Endian,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.evalStore: B2R2.BinIR.LowUIR.Eval.EvalState -> B2R2.BinIR.LowUIR.Eval.EvalCallBacks -> B2R2.Endian -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Eval.EvalState'
  nameWithType: 'val Eval.evalStore: EvalState -> EvalCallBacks -> Endian -> Expr -> Expr -> EvalState'
- uid: B2R2.BinIR.LowUIR.Eval.evalStore*
  name: evalStore
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_evalStore_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.evalStore*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.evalStore
  nameWithType: Eval.evalStore
- uid: B2R2.BinIR.LowUIR.Eval.EvalValue
  name: Eval.EvalValue (union)
  href: api/B2R2.BinIR.LowUIR.Eval.EvalValue.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.EvalValue
  fullName: B2R2.BinIR.LowUIR.Eval.EvalValue
  nameWithType: B2R2.BinIR.LowUIR.Eval.EvalValue
- uid: B2R2.BinIR.LowUIR.Eval.EvalValue.Def
  name: Def of BitVector
  href: api/B2R2.BinIR.LowUIR.Eval.EvalValue.html#B2R2_BinIR_LowUIR_Eval_EvalValue_Def
  commentId: T:B2R2.BinIR.LowUIR.Eval.EvalValue.Def
  fullName: B2R2.BinIR.LowUIR.Eval.EvalValue.Def of B2R2.BitVector
  nameWithType: EvalValue.Def of BitVector
- uid: B2R2.BinIR.LowUIR.Eval.EvalValue.Undef
  name: Undef
  href: api/B2R2.BinIR.LowUIR.Eval.EvalValue.html#B2R2_BinIR_LowUIR_Eval_EvalValue_Undef
  commentId: T:B2R2.BinIR.LowUIR.Eval.EvalValue.Undef
  fullName: B2R2.BinIR.LowUIR.Eval.EvalValue.Undef
  nameWithType: EvalValue.Undef
- uid: B2R2.BinIR.LowUIR.Eval.genLblMap(B2R2.BinIR.LowUIR.Stmt [])
  name: 'val genLblMap: Stmt [] -> Map<Symbol,int>'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_genLblMap_B2R2_BinIR_LowUIR_Stmt____
  commentId: M:B2R2.BinIR.LowUIR.genLblMap(B2R2.BinIR.LowUIR.Stmt[])
  fullName: 'val B2R2.BinIR.LowUIR.Eval.genLblMap: B2R2.BinIR.LowUIR.Stmt [] -> Map<B2R2.BinIR.Symbol,int>'
  nameWithType: 'val Eval.genLblMap: Stmt [] -> Map<Symbol,int>'
- uid: B2R2.BinIR.LowUIR.Eval.genLblMap*
  name: genLblMap
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_genLblMap_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.genLblMap*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.genLblMap
  nameWithType: Eval.genLblMap
- uid: B2R2.BinIR.LowUIR.Eval.InvalidExpException
  name: Eval.InvalidExpException
  href: api/B2R2.BinIR.LowUIR.Eval.InvalidExpException.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.InvalidExpException
  fullName: B2R2.BinIR.LowUIR.Eval.InvalidExpException
  nameWithType: B2R2.BinIR.LowUIR.Eval.InvalidExpException
- uid: B2R2.BinIR.LowUIR.Eval.InvalidMemException
  name: Eval.InvalidMemException
  href: api/B2R2.BinIR.LowUIR.Eval.InvalidMemException.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.InvalidMemException
  fullName: B2R2.BinIR.LowUIR.Eval.InvalidMemException
  nameWithType: B2R2.BinIR.LowUIR.Eval.InvalidMemException
- uid: B2R2.BinIR.LowUIR.Eval.loadMem(Map<uint64,byte> -> B2R2.Endian -> uint64 -> B2R2.RegType)
  name: 'val loadMem: Map<uint64,byte> -> Endian -> uint64 -> RegType -> BitVector'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_loadMem_Map_uint64_byte_____B2R2_Endian____uint64____B2R2_RegType_
  commentId: M:B2R2.BinIR.LowUIR.loadMem(Microsoft.FSharp.Collections.FSharpMap{System.UInt64,System.Byte},B2R2.Endian,System.UInt64,System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.loadMem: Map<uint64,byte> -> B2R2.Endian -> uint64 -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'val Eval.loadMem: Map<uint64,byte> -> Endian -> uint64 -> RegType -> BitVector'
- uid: B2R2.BinIR.LowUIR.Eval.loadMem*
  name: loadMem
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_loadMem_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.loadMem*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.loadMem
  nameWithType: Eval.loadMem
- uid: B2R2.BinIR.LowUIR.Eval.MemTbl
  name: Eval.MemTbl (abrv)
  href: api/B2R2.BinIR.LowUIR.Eval.MemTbl.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.MemTbl
  fullName: B2R2.BinIR.LowUIR.Eval.MemTbl
  nameWithType: B2R2.BinIR.LowUIR.Eval.MemTbl
- uid: B2R2.BinIR.LowUIR.Eval.storeMem(Map<uint64,byte> -> B2R2.Endian -> uint64 -> B2R2.BitVector)
  name: 'val storeMem: Map<uint64,byte> -> Endian -> uint64 -> BitVector -> Map<uint64,byte>'
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_storeMem_Map_uint64_byte_____B2R2_Endian____uint64____B2R2_BitVector_
  commentId: M:B2R2.BinIR.LowUIR.storeMem(Microsoft.FSharp.Collections.FSharpMap{System.UInt64,System.Byte},B2R2.Endian,System.UInt64,B2R2.BitVector)
  fullName: 'val B2R2.BinIR.LowUIR.Eval.storeMem: Map<uint64,byte> -> B2R2.Endian -> uint64 -> B2R2.BitVector -> Map<uint64,byte>'
  nameWithType: 'val Eval.storeMem: Map<uint64,byte> -> Endian -> uint64 -> BitVector -> Map<uint64,byte>'
- uid: B2R2.BinIR.LowUIR.Eval.storeMem*
  name: storeMem
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_storeMem_
  commentId: Overload:B2R2.BinIR.LowUIR.Eval.storeMem*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Eval.storeMem
  nameWithType: Eval.storeMem
- uid: B2R2.BinIR.LowUIR.Eval.TmpVarTbl
  name: Eval.TmpVarTbl (abrv)
  href: api/B2R2.BinIR.LowUIR.Eval.TmpVarTbl.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.TmpVarTbl
  fullName: B2R2.BinIR.LowUIR.Eval.TmpVarTbl
  nameWithType: B2R2.BinIR.LowUIR.Eval.TmpVarTbl
- uid: B2R2.BinIR.LowUIR.Eval.tr()
  name: val tr
  href: api/B2R2.BinIR.LowUIR.Eval.html#B2R2_BinIR_LowUIR_Eval_tr__
  commentId: P:B2R2.BinIR.LowUIR.tr
  fullName: 'val B2R2.BinIR.LowUIR.Eval.tr: B2R2.BitVector'
  nameWithType: 'val Eval.tr: BitVector'
- uid: B2R2.BinIR.LowUIR.Eval.UndefExpException
  name: Eval.UndefExpException
  href: api/B2R2.BinIR.LowUIR.Eval.UndefExpException.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.UndefExpException
  fullName: B2R2.BinIR.LowUIR.Eval.UndefExpException
  nameWithType: B2R2.BinIR.LowUIR.Eval.UndefExpException
- uid: B2R2.BinIR.LowUIR.Eval.UnknownVarException
  name: Eval.UnknownVarException
  href: api/B2R2.BinIR.LowUIR.Eval.UnknownVarException.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.UnknownVarException
  fullName: B2R2.BinIR.LowUIR.Eval.UnknownVarException
  nameWithType: B2R2.BinIR.LowUIR.Eval.UnknownVarException
- uid: B2R2.BinIR.LowUIR.Eval.VarTbl
  name: Eval.VarTbl (abrv)
  href: api/B2R2.BinIR.LowUIR.Eval.VarTbl.html
  commentId: T:B2R2.BinIR.LowUIR.Eval.VarTbl
  fullName: B2R2.BinIR.LowUIR.Eval.VarTbl
  nameWithType: B2R2.BinIR.LowUIR.Eval.VarTbl
- uid: B2R2.BinIR.LowUIR.Expr
  name: Expr (union)
  href: api/B2R2.BinIR.LowUIR.Expr.html
  commentId: T:B2R2.BinIR.LowUIR.Expr
  fullName: B2R2.BinIR.LowUIR.Expr
  nameWithType: B2R2.BinIR.LowUIR.Expr
- uid: B2R2.BinIR.LowUIR.Expr.BinOp
  name: 'BinOp of Item1: BinOpType * Item2: RegType * Item3: Expr * Item4: Expr * Item5: ExprInfo * Item6: ConsInfo option'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_BinOp
  commentId: T:B2R2.BinIR.LowUIR.Expr.BinOp
  fullName: 'B2R2.BinIR.LowUIR.Expr.BinOp of Item1: B2R2.BinIR.LowUIR.BinOpType * Item2: B2R2.RegType * Item3: B2R2.BinIR.LowUIR.Expr * Item4: B2R2.BinIR.LowUIR.Expr * Item5: B2R2.BinIR.LowUIR.ExprInfo * Item6: B2R2.BinIR.LowUIR.ConsInfo option'
  nameWithType: 'Expr.BinOp of Item1: BinOpType * Item2: RegType * Item3: Expr * Item4: Expr * Item5: ExprInfo * Item6: ConsInfo option'
- uid: B2R2.BinIR.LowUIR.Expr.Cast
  name: 'Cast of Item1: CastKind * Item2: RegType * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Cast
  commentId: T:B2R2.BinIR.LowUIR.Expr.Cast
  fullName: 'B2R2.BinIR.LowUIR.Expr.Cast of Item1: B2R2.BinIR.LowUIR.CastKind * Item2: B2R2.RegType * Item3: B2R2.BinIR.LowUIR.Expr * Item4: B2R2.BinIR.LowUIR.ExprInfo * Item5: B2R2.BinIR.LowUIR.ConsInfo option'
  nameWithType: 'Expr.Cast of Item1: CastKind * Item2: RegType * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
- uid: B2R2.BinIR.LowUIR.Expr.Extract
  name: 'Extract of Item1: Expr * Item2: RegType * Item3: StartPos * Item4: ExprInfo * Item5: ConsInfo option'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Extract
  commentId: T:B2R2.BinIR.LowUIR.Expr.Extract
  fullName: 'B2R2.BinIR.LowUIR.Expr.Extract of Item1: B2R2.BinIR.LowUIR.Expr * Item2: B2R2.RegType * Item3: B2R2.BinIR.LowUIR.StartPos * Item4: B2R2.BinIR.LowUIR.ExprInfo * Item5: B2R2.BinIR.LowUIR.ConsInfo option'
  nameWithType: 'Expr.Extract of Item1: Expr * Item2: RegType * Item3: StartPos * Item4: ExprInfo * Item5: ConsInfo option'
- uid: B2R2.BinIR.LowUIR.Expr.FuncName
  name: FuncName of string
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_FuncName
  commentId: T:B2R2.BinIR.LowUIR.Expr.FuncName
  fullName: B2R2.BinIR.LowUIR.Expr.FuncName of string
  nameWithType: Expr.FuncName of string
- uid: B2R2.BinIR.LowUIR.Expr.Ite
  name: 'Ite of Item1: Expr * Item2: Expr * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Ite
  commentId: T:B2R2.BinIR.LowUIR.Expr.Ite
  fullName: 'B2R2.BinIR.LowUIR.Expr.Ite of Item1: B2R2.BinIR.LowUIR.Expr * Item2: B2R2.BinIR.LowUIR.Expr * Item3: B2R2.BinIR.LowUIR.Expr * Item4: B2R2.BinIR.LowUIR.ExprInfo * Item5: B2R2.BinIR.LowUIR.ConsInfo option'
  nameWithType: 'Expr.Ite of Item1: Expr * Item2: Expr * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
- uid: B2R2.BinIR.LowUIR.Expr.Load
  name: 'Load of Item1: Endian * Item2: RegType * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Load
  commentId: T:B2R2.BinIR.LowUIR.Expr.Load
  fullName: 'B2R2.BinIR.LowUIR.Expr.Load of Item1: B2R2.Endian * Item2: B2R2.RegType * Item3: B2R2.BinIR.LowUIR.Expr * Item4: B2R2.BinIR.LowUIR.ExprInfo * Item5: B2R2.BinIR.LowUIR.ConsInfo option'
  nameWithType: 'Expr.Load of Item1: Endian * Item2: RegType * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
- uid: B2R2.BinIR.LowUIR.Expr.Name
  name: Name of Symbol
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Name
  commentId: T:B2R2.BinIR.LowUIR.Expr.Name
  fullName: B2R2.BinIR.LowUIR.Expr.Name of B2R2.BinIR.Symbol
  nameWithType: Expr.Name of Symbol
- uid: B2R2.BinIR.LowUIR.Expr.Num
  name: Num of BitVector
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Num
  commentId: T:B2R2.BinIR.LowUIR.Expr.Num
  fullName: B2R2.BinIR.LowUIR.Expr.Num of B2R2.BitVector
  nameWithType: Expr.Num of BitVector
- uid: B2R2.BinIR.LowUIR.Expr.PCVar
  name: 'PCVar of Item1: RegType * Item2: string'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_PCVar
  commentId: T:B2R2.BinIR.LowUIR.Expr.PCVar
  fullName: 'B2R2.BinIR.LowUIR.Expr.PCVar of Item1: B2R2.RegType * Item2: string'
  nameWithType: 'Expr.PCVar of Item1: RegType * Item2: string'
- uid: B2R2.BinIR.LowUIR.Expr.RelOp
  name: 'RelOp of Item1: RelOpType * Item2: Expr * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_RelOp
  commentId: T:B2R2.BinIR.LowUIR.Expr.RelOp
  fullName: 'B2R2.BinIR.LowUIR.Expr.RelOp of Item1: B2R2.BinIR.LowUIR.RelOpType * Item2: B2R2.BinIR.LowUIR.Expr * Item3: B2R2.BinIR.LowUIR.Expr * Item4: B2R2.BinIR.LowUIR.ExprInfo * Item5: B2R2.BinIR.LowUIR.ConsInfo option'
  nameWithType: 'Expr.RelOp of Item1: RelOpType * Item2: Expr * Item3: Expr * Item4: ExprInfo * Item5: ConsInfo option'
- uid: B2R2.BinIR.LowUIR.Expr.System.Object.Equals(obj)
  name: 'override member Equals: obj -> bool'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_System_Object_Equals_obj_
  commentId: M:B2R2.BinIR.LowUIR.Expr.Equals(System.Object)
  fullName: 'override member B2R2.BinIR.LowUIR.Expr.Equals: obj -> bool'
  nameWithType: 'override member Expr.Equals: obj -> bool'
- uid: B2R2.BinIR.LowUIR.Expr.System.Object.Equals*
  name: Equals
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_System_Object_Equals_
  commentId: Overload:B2R2.BinIR.LowUIR.Expr.System.Object.Equals*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Expr.Equals
  nameWithType: Expr.Equals
- uid: B2R2.BinIR.LowUIR.Expr.System.Object.GetHashCode(unit)
  name: 'override member GetHashCode: unit -> int'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_System_Object_GetHashCode_unit_
  commentId: M:B2R2.BinIR.LowUIR.Expr.GetHashCode
  fullName: 'override member B2R2.BinIR.LowUIR.Expr.GetHashCode: unit -> int'
  nameWithType: 'override member Expr.GetHashCode: unit -> int'
- uid: B2R2.BinIR.LowUIR.Expr.System.Object.GetHashCode*
  name: GetHashCode
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_System_Object_GetHashCode_
  commentId: Overload:B2R2.BinIR.LowUIR.Expr.System.Object.GetHashCode*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Expr.GetHashCode
  nameWithType: Expr.GetHashCode
- uid: B2R2.BinIR.LowUIR.Expr.TempVar
  name: 'TempVar of Item1: RegType * Item2: int'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_TempVar
  commentId: T:B2R2.BinIR.LowUIR.Expr.TempVar
  fullName: 'B2R2.BinIR.LowUIR.Expr.TempVar of Item1: B2R2.RegType * Item2: int'
  nameWithType: 'Expr.TempVar of Item1: RegType * Item2: int'
- uid: B2R2.BinIR.LowUIR.Expr.Undefined
  name: 'Undefined of Item1: RegType * Item2: string'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Undefined
  commentId: T:B2R2.BinIR.LowUIR.Expr.Undefined
  fullName: 'B2R2.BinIR.LowUIR.Expr.Undefined of Item1: B2R2.RegType * Item2: string'
  nameWithType: 'Expr.Undefined of Item1: RegType * Item2: string'
- uid: B2R2.BinIR.LowUIR.Expr.UnOp
  name: 'UnOp of Item1: UnOpType * Item2: Expr * Item3: ExprInfo * Item4: ConsInfo option'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_UnOp
  commentId: T:B2R2.BinIR.LowUIR.Expr.UnOp
  fullName: 'B2R2.BinIR.LowUIR.Expr.UnOp of Item1: B2R2.BinIR.LowUIR.UnOpType * Item2: B2R2.BinIR.LowUIR.Expr * Item3: B2R2.BinIR.LowUIR.ExprInfo * Item4: B2R2.BinIR.LowUIR.ConsInfo option'
  nameWithType: 'Expr.UnOp of Item1: UnOpType * Item2: Expr * Item3: ExprInfo * Item4: ConsInfo option'
- uid: B2R2.BinIR.LowUIR.Expr.Var
  name: 'Var of Item1: RegType * Item2: RegisterID * Item3: string * Item4: RegisterSet'
  href: api/B2R2.BinIR.LowUIR.Expr.html#B2R2_BinIR_LowUIR_Expr_Var
  commentId: T:B2R2.BinIR.LowUIR.Expr.Var
  fullName: 'B2R2.BinIR.LowUIR.Expr.Var of Item1: B2R2.RegType * Item2: B2R2.RegisterID * Item3: string * Item4: B2R2.RegisterSet'
  nameWithType: 'Expr.Var of Item1: RegType * Item2: RegisterID * Item3: string * Item4: RegisterSet'
- uid: B2R2.BinIR.LowUIR.ExprInfo
  name: ExprInfo (rec)
  href: api/B2R2.BinIR.LowUIR.ExprInfo.html
  commentId: T:B2R2.BinIR.LowUIR.ExprInfo
  fullName: B2R2.BinIR.LowUIR.ExprInfo
  nameWithType: B2R2.BinIR.LowUIR.ExprInfo
- uid: B2R2.BinIR.LowUIR.ExprInfo.HasLoad
  name: 'val HasLoad: bool'
  href: api/B2R2.BinIR.LowUIR.ExprInfo.html#B2R2_BinIR_LowUIR_ExprInfo_HasLoad
  commentId: P:B2R2.BinIR.LowUIR.ExprInfo.HasLoad
  fullName: 'val B2R2.BinIR.LowUIR.ExprInfo.HasLoad: bool'
  nameWithType: 'val ExprInfo.HasLoad: bool'
- uid: B2R2.BinIR.LowUIR.ExprInfo.TempVarInfo
  name: 'val TempVarInfo: Set<int>'
  href: api/B2R2.BinIR.LowUIR.ExprInfo.html#B2R2_BinIR_LowUIR_ExprInfo_TempVarInfo
  commentId: P:B2R2.BinIR.LowUIR.ExprInfo.TempVarInfo
  fullName: 'val B2R2.BinIR.LowUIR.ExprInfo.TempVarInfo: Set<int>'
  nameWithType: 'val ExprInfo.TempVarInfo: Set<int>'
- uid: B2R2.BinIR.LowUIR.ExprInfo.VarInfo
  name: 'val VarInfo: RegisterSet'
  href: api/B2R2.BinIR.LowUIR.ExprInfo.html#B2R2_BinIR_LowUIR_ExprInfo_VarInfo
  commentId: P:B2R2.BinIR.LowUIR.ExprInfo.VarInfo
  fullName: 'val B2R2.BinIR.LowUIR.ExprInfo.VarInfo: B2R2.RegisterSet'
  nameWithType: 'val ExprInfo.VarInfo: RegisterSet'
- uid: B2R2.BinIR.LowUIR.HashCons
  name: HashCons (mod)
  href: api/B2R2.BinIR.LowUIR.HashCons.html
  commentId: T:B2R2.BinIR.LowUIR.HashCons
  fullName: B2R2.BinIR.LowUIR.HashCons
  nameWithType: B2R2.BinIR.LowUIR.HashCons
- uid: B2R2.BinIR.LowUIR.HashCons.app(string -> B2R2.BinIR.LowUIR.Expr list -> B2R2.RegType)
  name: 'val app: string -> Expr list -> RegType -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_app_string____B2R2_BinIR_LowUIR_Expr_list____B2R2_RegType_
  commentId: M:B2R2.BinIR.LowUIR.app(System.String,Microsoft.FSharp.Collections.FSharpList{B2R2.BinIR.LowUIR.Expr},System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.app: string -> B2R2.BinIR.LowUIR.Expr list -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.app: string -> Expr list -> RegType -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.app*
  name: app
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_app_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.app*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.app
  nameWithType: HashCons.app
- uid: B2R2.BinIR.LowUIR.HashCons.binop(B2R2.BinIR.LowUIR.BinOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val binop: BinOpType -> Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_binop_B2R2_BinIR_LowUIR_BinOpType____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.binop(B2R2.BinIR.LowUIR.BinOpType,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.binop: B2R2.BinIR.LowUIR.BinOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.binop: BinOpType -> Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.binop*
  name: binop
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_binop_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.binop*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.binop
  nameWithType: HashCons.binop
- uid: B2R2.BinIR.LowUIR.HashCons.cast(B2R2.BinIR.LowUIR.CastKind -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val cast: CastKind -> RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_cast_B2R2_BinIR_LowUIR_CastKind____B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.cast(B2R2.BinIR.LowUIR.CastKind,System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.cast: B2R2.BinIR.LowUIR.CastKind -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.cast: CastKind -> RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.cast*
  name: cast
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_cast_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.cast*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.cast
  nameWithType: HashCons.cast
- uid: B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException
  name: HashCons.ConsistencyFailException
  href: api/B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException.html
  commentId: T:B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException
  fullName: B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException
  nameWithType: B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException
- uid: B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException.Data0
  name: 'val Data0: string'
  href: api/B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException.html#B2R2_BinIR_LowUIR_HashCons_ConsistencyFailException_Data0
  commentId: P:B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException.Data0
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.ConsistencyFailException.Data0: string'
  nameWithType: 'val ConsistencyFailException.Data0: string'
- uid: B2R2.BinIR.LowUIR.HashCons.extract(B2R2.BinIR.LowUIR.Expr -> B2R2.RegType -> B2R2.BinIR.LowUIR.StartPos)
  name: 'val extract: Expr -> RegType -> StartPos -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_extract_B2R2_BinIR_LowUIR_Expr____B2R2_RegType____B2R2_BinIR_LowUIR_StartPos_
  commentId: M:B2R2.BinIR.LowUIR.extract(B2R2.BinIR.LowUIR.Expr,System.Int32,System.Int32)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.extract: B2R2.BinIR.LowUIR.Expr -> B2R2.RegType -> B2R2.BinIR.LowUIR.StartPos -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.extract: Expr -> RegType -> StartPos -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.extract*
  name: extract
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_extract_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.extract*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.extract
  nameWithType: HashCons.extract
- uid: B2R2.BinIR.LowUIR.HashCons.getTag(B2R2.BinIR.LowUIR.Expr)
  name: 'val getTag: Expr -> int64'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_getTag_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.getTag(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.getTag: B2R2.BinIR.LowUIR.Expr -> int64'
  nameWithType: 'val HashCons.getTag: Expr -> int64'
- uid: B2R2.BinIR.LowUIR.HashCons.getTag*
  name: getTag
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_getTag_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.getTag*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.getTag
  nameWithType: HashCons.getTag
- uid: B2R2.BinIR.LowUIR.HashCons.isHashConsable(B2R2.BinIR.LowUIR.Expr)
  name: 'val isHashConsable: Expr -> bool'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_isHashConsable_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.isHashConsable(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.isHashConsable: B2R2.BinIR.LowUIR.Expr -> bool'
  nameWithType: 'val HashCons.isHashConsable: Expr -> bool'
- uid: B2R2.BinIR.LowUIR.HashCons.isHashConsable*
  name: isHashConsable
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_isHashConsable_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.isHashConsable*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.isHashConsable
  nameWithType: HashCons.isHashConsable
- uid: B2R2.BinIR.LowUIR.HashCons.isHashConsed(B2R2.BinIR.LowUIR.Expr)
  name: 'val isHashConsed: Expr -> bool'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_isHashConsed_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.isHashConsed(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.isHashConsed: B2R2.BinIR.LowUIR.Expr -> bool'
  nameWithType: 'val HashCons.isHashConsed: Expr -> bool'
- uid: B2R2.BinIR.LowUIR.HashCons.isHashConsed*
  name: isHashConsed
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_isHashConsed_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.isHashConsed*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.isHashConsed
  nameWithType: HashCons.isHashConsed
- uid: B2R2.BinIR.LowUIR.HashCons.ite(B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val ite: Expr -> Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_ite_B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.ite(B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.ite: B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.ite: Expr -> Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.ite*
  name: ite
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_ite_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.ite*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.ite
  nameWithType: HashCons.ite
- uid: B2R2.BinIR.LowUIR.HashCons.load(B2R2.Endian -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val load: Endian -> RegType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_load_B2R2_Endian____B2R2_RegType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.load(B2R2.Endian,System.Int32,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.load: B2R2.Endian -> B2R2.RegType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.load: Endian -> RegType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.load*
  name: load
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_load_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.load*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.load
  nameWithType: HashCons.load
- uid: B2R2.BinIR.LowUIR.HashCons.relop(B2R2.BinIR.LowUIR.RelOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr)
  name: 'val relop: RelOpType -> Expr -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_relop_B2R2_BinIR_LowUIR_RelOpType____B2R2_BinIR_LowUIR_Expr____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.relop(B2R2.BinIR.LowUIR.RelOpType,B2R2.BinIR.LowUIR.Expr,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.relop: B2R2.BinIR.LowUIR.RelOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.relop: RelOpType -> Expr -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.relop*
  name: relop
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_relop_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.relop*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.relop
  nameWithType: HashCons.relop
- uid: B2R2.BinIR.LowUIR.HashCons.TagNotExistException
  name: HashCons.TagNotExistException
  href: api/B2R2.BinIR.LowUIR.HashCons.TagNotExistException.html
  commentId: T:B2R2.BinIR.LowUIR.HashCons.TagNotExistException
  fullName: B2R2.BinIR.LowUIR.HashCons.TagNotExistException
  nameWithType: B2R2.BinIR.LowUIR.HashCons.TagNotExistException
- uid: B2R2.BinIR.LowUIR.HashCons.unop(B2R2.BinIR.LowUIR.UnOpType -> B2R2.BinIR.LowUIR.Expr)
  name: 'val unop: UnOpType -> Expr -> Expr'
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_unop_B2R2_BinIR_LowUIR_UnOpType____B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.unop(B2R2.BinIR.LowUIR.UnOpType,B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.HashCons.unop: B2R2.BinIR.LowUIR.UnOpType -> B2R2.BinIR.LowUIR.Expr -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'val HashCons.unop: UnOpType -> Expr -> Expr'
- uid: B2R2.BinIR.LowUIR.HashCons.unop*
  name: unop
  href: api/B2R2.BinIR.LowUIR.HashCons.html#B2R2_BinIR_LowUIR_HashCons_unop_
  commentId: Overload:B2R2.BinIR.LowUIR.HashCons.unop*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.HashCons.unop
  nameWithType: HashCons.unop
- uid: B2R2.BinIR.LowUIR.IllegalASTTypeException
  name: IllegalASTTypeException
  href: api/B2R2.BinIR.LowUIR.IllegalASTTypeException.html
  commentId: T:B2R2.BinIR.LowUIR.IllegalASTTypeException
  fullName: B2R2.BinIR.LowUIR.IllegalASTTypeException
  nameWithType: B2R2.BinIR.LowUIR.IllegalASTTypeException
- uid: B2R2.BinIR.LowUIR.InvalidAssignmentException
  name: InvalidAssignmentException
  href: api/B2R2.BinIR.LowUIR.InvalidAssignmentException.html
  commentId: T:B2R2.BinIR.LowUIR.InvalidAssignmentException
  fullName: B2R2.BinIR.LowUIR.InvalidAssignmentException
  nameWithType: B2R2.BinIR.LowUIR.InvalidAssignmentException
- uid: B2R2.BinIR.LowUIR.InvalidExprException
  name: InvalidExprException
  href: api/B2R2.BinIR.LowUIR.InvalidExprException.html
  commentId: T:B2R2.BinIR.LowUIR.InvalidExprException
  fullName: B2R2.BinIR.LowUIR.InvalidExprException
  nameWithType: B2R2.BinIR.LowUIR.InvalidExprException
- uid: B2R2.BinIR.LowUIR.Pp
  name: Pp (mod)
  href: api/B2R2.BinIR.LowUIR.Pp.html
  commentId: T:B2R2.BinIR.LowUIR.Pp
  fullName: B2R2.BinIR.LowUIR.Pp
  nameWithType: B2R2.BinIR.LowUIR.Pp
- uid: B2R2.BinIR.LowUIR.Pp.binopToString(B2R2.BinIR.LowUIR.BinOpType)
  name: 'val binopToString: BinOpType -> string'
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_binopToString_B2R2_BinIR_LowUIR_BinOpType_
  commentId: M:B2R2.BinIR.LowUIR.binopToString(B2R2.BinIR.LowUIR.BinOpType)
  fullName: 'val B2R2.BinIR.LowUIR.Pp.binopToString: B2R2.BinIR.LowUIR.BinOpType -> string'
  nameWithType: 'val Pp.binopToString: BinOpType -> string'
- uid: B2R2.BinIR.LowUIR.Pp.binopToString*
  name: binopToString
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_binopToString_
  commentId: Overload:B2R2.BinIR.LowUIR.Pp.binopToString*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Pp.binopToString
  nameWithType: Pp.binopToString
- uid: B2R2.BinIR.LowUIR.Pp.castTypeToString(B2R2.BinIR.LowUIR.CastKind)
  name: 'val castTypeToString: CastKind -> string'
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_castTypeToString_B2R2_BinIR_LowUIR_CastKind_
  commentId: M:B2R2.BinIR.LowUIR.castTypeToString(B2R2.BinIR.LowUIR.CastKind)
  fullName: 'val B2R2.BinIR.LowUIR.Pp.castTypeToString: B2R2.BinIR.LowUIR.CastKind -> string'
  nameWithType: 'val Pp.castTypeToString: CastKind -> string'
- uid: B2R2.BinIR.LowUIR.Pp.castTypeToString*
  name: castTypeToString
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_castTypeToString_
  commentId: Overload:B2R2.BinIR.LowUIR.Pp.castTypeToString*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Pp.castTypeToString
  nameWithType: Pp.castTypeToString
- uid: B2R2.BinIR.LowUIR.Pp.expToString(B2R2.BinIR.LowUIR.Expr)
  name: 'val expToString: Expr -> string'
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_expToString_B2R2_BinIR_LowUIR_Expr_
  commentId: M:B2R2.BinIR.LowUIR.expToString(B2R2.BinIR.LowUIR.Expr)
  fullName: 'val B2R2.BinIR.LowUIR.Pp.expToString: B2R2.BinIR.LowUIR.Expr -> string'
  nameWithType: 'val Pp.expToString: Expr -> string'
- uid: B2R2.BinIR.LowUIR.Pp.expToString*
  name: expToString
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_expToString_
  commentId: Overload:B2R2.BinIR.LowUIR.Pp.expToString*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Pp.expToString
  nameWithType: Pp.expToString
- uid: B2R2.BinIR.LowUIR.Pp.relopToString(B2R2.BinIR.LowUIR.RelOpType)
  name: 'val relopToString: RelOpType -> string'
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_relopToString_B2R2_BinIR_LowUIR_RelOpType_
  commentId: M:B2R2.BinIR.LowUIR.relopToString(B2R2.BinIR.LowUIR.RelOpType)
  fullName: 'val B2R2.BinIR.LowUIR.Pp.relopToString: B2R2.BinIR.LowUIR.RelOpType -> string'
  nameWithType: 'val Pp.relopToString: RelOpType -> string'
- uid: B2R2.BinIR.LowUIR.Pp.relopToString*
  name: relopToString
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_relopToString_
  commentId: Overload:B2R2.BinIR.LowUIR.Pp.relopToString*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Pp.relopToString
  nameWithType: Pp.relopToString
- uid: B2R2.BinIR.LowUIR.Pp.stmtsToString(B2R2.BinIR.LowUIR.Stmt [])
  name: 'val stmtsToString: Stmt [] -> string'
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_stmtsToString_B2R2_BinIR_LowUIR_Stmt____
  commentId: M:B2R2.BinIR.LowUIR.stmtsToString(B2R2.BinIR.LowUIR.Stmt[])
  fullName: 'val B2R2.BinIR.LowUIR.Pp.stmtsToString: B2R2.BinIR.LowUIR.Stmt [] -> string'
  nameWithType: 'val Pp.stmtsToString: Stmt [] -> string'
- uid: B2R2.BinIR.LowUIR.Pp.stmtsToString*
  name: stmtsToString
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_stmtsToString_
  commentId: Overload:B2R2.BinIR.LowUIR.Pp.stmtsToString*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Pp.stmtsToString
  nameWithType: Pp.stmtsToString
- uid: B2R2.BinIR.LowUIR.Pp.stmtToString(B2R2.BinIR.LowUIR.Stmt)
  name: 'val stmtToString: Stmt -> string'
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_stmtToString_B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinIR.LowUIR.stmtToString(B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinIR.LowUIR.Pp.stmtToString: B2R2.BinIR.LowUIR.Stmt -> string'
  nameWithType: 'val Pp.stmtToString: Stmt -> string'
- uid: B2R2.BinIR.LowUIR.Pp.stmtToString*
  name: stmtToString
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_stmtToString_
  commentId: Overload:B2R2.BinIR.LowUIR.Pp.stmtToString*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Pp.stmtToString
  nameWithType: Pp.stmtToString
- uid: B2R2.BinIR.LowUIR.Pp.unopToString(B2R2.BinIR.LowUIR.UnOpType)
  name: 'val unopToString: UnOpType -> string'
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_unopToString_B2R2_BinIR_LowUIR_UnOpType_
  commentId: M:B2R2.BinIR.LowUIR.unopToString(B2R2.BinIR.LowUIR.UnOpType)
  fullName: 'val B2R2.BinIR.LowUIR.Pp.unopToString: B2R2.BinIR.LowUIR.UnOpType -> string'
  nameWithType: 'val Pp.unopToString: UnOpType -> string'
- uid: B2R2.BinIR.LowUIR.Pp.unopToString*
  name: unopToString
  href: api/B2R2.BinIR.LowUIR.Pp.html#B2R2_BinIR_LowUIR_Pp_unopToString_
  commentId: Overload:B2R2.BinIR.LowUIR.Pp.unopToString*
  isSpec: "True"
  fullName: B2R2.BinIR.LowUIR.Pp.unopToString
  nameWithType: Pp.unopToString
- uid: B2R2.BinIR.LowUIR.Prog
  name: Prog (abrv)
  href: api/B2R2.BinIR.LowUIR.Prog.html
  commentId: T:B2R2.BinIR.LowUIR.Prog
  fullName: B2R2.BinIR.LowUIR.Prog
  nameWithType: B2R2.BinIR.LowUIR.Prog
- uid: B2R2.BinIR.LowUIR.RelOpType
  name: RelOpType
  href: api/B2R2.BinIR.LowUIR.RelOpType.html
  commentId: T:B2R2.BinIR.LowUIR.RelOpType
  fullName: B2R2.BinIR.LowUIR.RelOpType
  nameWithType: B2R2.BinIR.LowUIR.RelOpType
- uid: B2R2.BinIR.LowUIR.RelOpType.EQ
  name: 'val EQ: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_EQ
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.EQ
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.EQ: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.EQ: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.GE
  name: 'val GE: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_GE
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.GE
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.GE: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.GE: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.GT
  name: 'val GT: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_GT
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.GT
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.GT: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.GT: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.LE
  name: 'val LE: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_LE
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.LE
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.LE: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.LE: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.LT
  name: 'val LT: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_LT
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.LT
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.LT: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.LT: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.NEQ
  name: 'val NEQ: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_NEQ
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.NEQ
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.NEQ: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.NEQ: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.SGE
  name: 'val SGE: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_SGE
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.SGE
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.SGE: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.SGE: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.SGT
  name: 'val SGT: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_SGT
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.SGT
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.SGT: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.SGT: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.SLE
  name: 'val SLE: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_SLE
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.SLE
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.SLE: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.SLE: RelOpType'
- uid: B2R2.BinIR.LowUIR.RelOpType.SLT
  name: 'val SLT: RelOpType'
  href: api/B2R2.BinIR.LowUIR.RelOpType.html#B2R2_BinIR_LowUIR_RelOpType_SLT
  commentId: P:B2R2.BinIR.LowUIR.RelOpType.SLT
  fullName: 'val B2R2.BinIR.LowUIR.RelOpType.SLT: B2R2.BinIR.LowUIR.RelOpType'
  nameWithType: 'val RelOpType.SLT: RelOpType'
- uid: B2R2.BinIR.LowUIR.SideEffect
  name: SideEffect (union)
  href: api/B2R2.BinIR.LowUIR.SideEffect.html
  commentId: T:B2R2.BinIR.LowUIR.SideEffect
  fullName: B2R2.BinIR.LowUIR.SideEffect
  nameWithType: B2R2.BinIR.LowUIR.SideEffect
- uid: B2R2.BinIR.LowUIR.SideEffect.ClockCounter
  name: ClockCounter
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_ClockCounter
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.ClockCounter
  fullName: B2R2.BinIR.LowUIR.SideEffect.ClockCounter
  nameWithType: SideEffect.ClockCounter
- uid: B2R2.BinIR.LowUIR.SideEffect.Fence
  name: Fence
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_Fence
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.Fence
  fullName: B2R2.BinIR.LowUIR.SideEffect.Fence
  nameWithType: SideEffect.Fence
- uid: B2R2.BinIR.LowUIR.SideEffect.Halt
  name: Halt
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_Halt
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.Halt
  fullName: B2R2.BinIR.LowUIR.SideEffect.Halt
  nameWithType: SideEffect.Halt
- uid: B2R2.BinIR.LowUIR.SideEffect.Interrupt
  name: Interrupt of int
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_Interrupt
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.Interrupt
  fullName: B2R2.BinIR.LowUIR.SideEffect.Interrupt of int
  nameWithType: SideEffect.Interrupt of int
- uid: B2R2.BinIR.LowUIR.SideEffect.Lock
  name: Lock
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_Lock
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.Lock
  fullName: B2R2.BinIR.LowUIR.SideEffect.Lock
  nameWithType: SideEffect.Lock
- uid: B2R2.BinIR.LowUIR.SideEffect.Pause
  name: Pause
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_Pause
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.Pause
  fullName: B2R2.BinIR.LowUIR.SideEffect.Pause
  nameWithType: SideEffect.Pause
- uid: B2R2.BinIR.LowUIR.SideEffect.ProcessorID
  name: ProcessorID
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_ProcessorID
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.ProcessorID
  fullName: B2R2.BinIR.LowUIR.SideEffect.ProcessorID
  nameWithType: SideEffect.ProcessorID
- uid: B2R2.BinIR.LowUIR.SideEffect.SysCall
  name: SysCall
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_SysCall
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.SysCall
  fullName: B2R2.BinIR.LowUIR.SideEffect.SysCall
  nameWithType: SideEffect.SysCall
- uid: B2R2.BinIR.LowUIR.SideEffect.UndefinedInstr
  name: UndefinedInstr
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_UndefinedInstr
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.UndefinedInstr
  fullName: B2R2.BinIR.LowUIR.SideEffect.UndefinedInstr
  nameWithType: SideEffect.UndefinedInstr
- uid: B2R2.BinIR.LowUIR.SideEffect.UnsupportedFAR
  name: UnsupportedFAR
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_UnsupportedFAR
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.UnsupportedFAR
  fullName: B2R2.BinIR.LowUIR.SideEffect.UnsupportedFAR
  nameWithType: SideEffect.UnsupportedFAR
- uid: B2R2.BinIR.LowUIR.SideEffect.UnsupportedFP
  name: UnsupportedFP
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_UnsupportedFP
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.UnsupportedFP
  fullName: B2R2.BinIR.LowUIR.SideEffect.UnsupportedFP
  nameWithType: SideEffect.UnsupportedFP
- uid: B2R2.BinIR.LowUIR.SideEffect.XBegin
  name: XBegin
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_XBegin
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.XBegin
  fullName: B2R2.BinIR.LowUIR.SideEffect.XBegin
  nameWithType: SideEffect.XBegin
- uid: B2R2.BinIR.LowUIR.SideEffect.XGetBV
  name: XGetBV
  href: api/B2R2.BinIR.LowUIR.SideEffect.html#B2R2_BinIR_LowUIR_SideEffect_XGetBV
  commentId: T:B2R2.BinIR.LowUIR.SideEffect.XGetBV
  fullName: B2R2.BinIR.LowUIR.SideEffect.XGetBV
  nameWithType: SideEffect.XGetBV
- uid: B2R2.BinIR.LowUIR.StartPos
  name: StartPos (abrv)
  href: api/B2R2.BinIR.LowUIR.StartPos.html
  commentId: T:B2R2.BinIR.LowUIR.StartPos
  fullName: B2R2.BinIR.LowUIR.StartPos
  nameWithType: B2R2.BinIR.LowUIR.StartPos
- uid: B2R2.BinIR.LowUIR.Stmt
  name: Stmt (union)
  href: api/B2R2.BinIR.LowUIR.Stmt.html
  commentId: T:B2R2.BinIR.LowUIR.Stmt
  fullName: B2R2.BinIR.LowUIR.Stmt
  nameWithType: B2R2.BinIR.LowUIR.Stmt
- uid: B2R2.BinIR.LowUIR.Stmt.CJmp
  name: 'CJmp of Item1: Expr * Item2: Expr * Item3: Expr'
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_CJmp
  commentId: T:B2R2.BinIR.LowUIR.Stmt.CJmp
  fullName: 'B2R2.BinIR.LowUIR.Stmt.CJmp of Item1: B2R2.BinIR.LowUIR.Expr * Item2: B2R2.BinIR.LowUIR.Expr * Item3: B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'Stmt.CJmp of Item1: Expr * Item2: Expr * Item3: Expr'
- uid: B2R2.BinIR.LowUIR.Stmt.IEMark
  name: IEMark of Addr
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_IEMark
  commentId: T:B2R2.BinIR.LowUIR.Stmt.IEMark
  fullName: B2R2.BinIR.LowUIR.Stmt.IEMark of B2R2.Addr
  nameWithType: Stmt.IEMark of Addr
- uid: B2R2.BinIR.LowUIR.Stmt.InterCJmp
  name: 'InterCJmp of Item1: Expr * Item2: Expr * Item3: Expr * Item4: Expr'
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_InterCJmp
  commentId: T:B2R2.BinIR.LowUIR.Stmt.InterCJmp
  fullName: 'B2R2.BinIR.LowUIR.Stmt.InterCJmp of Item1: B2R2.BinIR.LowUIR.Expr * Item2: B2R2.BinIR.LowUIR.Expr * Item3: B2R2.BinIR.LowUIR.Expr * Item4: B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'Stmt.InterCJmp of Item1: Expr * Item2: Expr * Item3: Expr * Item4: Expr'
- uid: B2R2.BinIR.LowUIR.Stmt.InterJmp
  name: 'InterJmp of Item1: Expr * Item2: Expr'
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_InterJmp
  commentId: T:B2R2.BinIR.LowUIR.Stmt.InterJmp
  fullName: 'B2R2.BinIR.LowUIR.Stmt.InterJmp of Item1: B2R2.BinIR.LowUIR.Expr * Item2: B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'Stmt.InterJmp of Item1: Expr * Item2: Expr'
- uid: B2R2.BinIR.LowUIR.Stmt.ISMark
  name: 'ISMark of Item1: Addr * Item2: uint32'
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_ISMark
  commentId: T:B2R2.BinIR.LowUIR.Stmt.ISMark
  fullName: 'B2R2.BinIR.LowUIR.Stmt.ISMark of Item1: B2R2.Addr * Item2: uint32'
  nameWithType: 'Stmt.ISMark of Item1: Addr * Item2: uint32'
- uid: B2R2.BinIR.LowUIR.Stmt.Jmp
  name: Jmp of Expr
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_Jmp
  commentId: T:B2R2.BinIR.LowUIR.Stmt.Jmp
  fullName: B2R2.BinIR.LowUIR.Stmt.Jmp of B2R2.BinIR.LowUIR.Expr
  nameWithType: Stmt.Jmp of Expr
- uid: B2R2.BinIR.LowUIR.Stmt.LMark
  name: LMark of Symbol
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_LMark
  commentId: T:B2R2.BinIR.LowUIR.Stmt.LMark
  fullName: B2R2.BinIR.LowUIR.Stmt.LMark of B2R2.BinIR.Symbol
  nameWithType: Stmt.LMark of Symbol
- uid: B2R2.BinIR.LowUIR.Stmt.Put
  name: 'Put of Item1: Expr * Item2: Expr'
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_Put
  commentId: T:B2R2.BinIR.LowUIR.Stmt.Put
  fullName: 'B2R2.BinIR.LowUIR.Stmt.Put of Item1: B2R2.BinIR.LowUIR.Expr * Item2: B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'Stmt.Put of Item1: Expr * Item2: Expr'
- uid: B2R2.BinIR.LowUIR.Stmt.SideEffect
  name: SideEffect of SideEffect
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_SideEffect
  commentId: T:B2R2.BinIR.LowUIR.Stmt.SideEffect
  fullName: B2R2.BinIR.LowUIR.Stmt.SideEffect of B2R2.BinIR.LowUIR.SideEffect
  nameWithType: Stmt.SideEffect of SideEffect
- uid: B2R2.BinIR.LowUIR.Stmt.Store
  name: 'Store of Item1: Endian * Item2: Expr * Item3: Expr'
  href: api/B2R2.BinIR.LowUIR.Stmt.html#B2R2_BinIR_LowUIR_Stmt_Store
  commentId: T:B2R2.BinIR.LowUIR.Stmt.Store
  fullName: 'B2R2.BinIR.LowUIR.Stmt.Store of Item1: B2R2.Endian * Item2: B2R2.BinIR.LowUIR.Expr * Item3: B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'Stmt.Store of Item1: Endian * Item2: Expr * Item3: Expr'
- uid: B2R2.BinIR.LowUIR.UnOpType
  name: UnOpType
  href: api/B2R2.BinIR.LowUIR.UnOpType.html
  commentId: T:B2R2.BinIR.LowUIR.UnOpType
  fullName: B2R2.BinIR.LowUIR.UnOpType
  nameWithType: B2R2.BinIR.LowUIR.UnOpType
- uid: B2R2.BinIR.LowUIR.UnOpType.NEG
  name: 'val NEG: UnOpType'
  href: api/B2R2.BinIR.LowUIR.UnOpType.html#B2R2_BinIR_LowUIR_UnOpType_NEG
  commentId: P:B2R2.BinIR.LowUIR.UnOpType.NEG
  fullName: 'val B2R2.BinIR.LowUIR.UnOpType.NEG: B2R2.BinIR.LowUIR.UnOpType'
  nameWithType: 'val UnOpType.NEG: UnOpType'
- uid: B2R2.BinIR.LowUIR.UnOpType.NOT
  name: 'val NOT: UnOpType'
  href: api/B2R2.BinIR.LowUIR.UnOpType.html#B2R2_BinIR_LowUIR_UnOpType_NOT
  commentId: P:B2R2.BinIR.LowUIR.UnOpType.NOT
  fullName: 'val B2R2.BinIR.LowUIR.UnOpType.NOT: B2R2.BinIR.LowUIR.UnOpType'
  nameWithType: 'val UnOpType.NOT: UnOpType'
- uid: B2R2.BinIR.PrettyPrinter
  name: PrettyPrinter
  href: api/B2R2.BinIR.PrettyPrinter.html
  commentId: T:B2R2.BinIR.PrettyPrinter
  fullName: B2R2.BinIR.PrettyPrinter
  nameWithType: B2R2.BinIR.PrettyPrinter
- uid: B2R2.BinIR.PrettyPrinter.#ctor(unit)
  name: 'new: unit -> PrettyPrinter'
  href: api/B2R2.BinIR.PrettyPrinter.html#B2R2_BinIR_PrettyPrinter__ctor_unit_
  commentId: M:B2R2.BinIR.PrettyPrinter.#ctor
  fullName: 'new: unit -> B2R2.BinIR.PrettyPrinter'
  nameWithType: 'new: unit -> PrettyPrinter'
- uid: B2R2.BinIR.PrettyPrinter.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinIR.PrettyPrinter.html#B2R2_BinIR_PrettyPrinter__ctor_
  commentId: Overload:B2R2.BinIR.PrettyPrinter.#ctor*
  isSpec: "True"
  fullName: B2R2.BinIR.PrettyPrinter
  nameWithType: PrettyPrinter.( .ctor )
- uid: B2R2.BinIR.PrettyPrinter.ToString(B2R2.BinIR.LowUIR.Stmt [])
  name: 'static member ToString: Stmt [] -> string'
  href: api/B2R2.BinIR.PrettyPrinter.html#B2R2_BinIR_PrettyPrinter_ToString_B2R2_BinIR_LowUIR_Stmt____
  commentId: M:B2R2.BinIR.PrettyPrinter.ToString(B2R2.BinIR.LowUIR.Stmt[])
  fullName: 'static member B2R2.BinIR.PrettyPrinter.ToString: B2R2.BinIR.LowUIR.Stmt [] -> string'
  nameWithType: 'static member PrettyPrinter.ToString: Stmt [] -> string'
- uid: B2R2.BinIR.PrettyPrinter.ToString*
  name: ToString
  href: api/B2R2.BinIR.PrettyPrinter.html#B2R2_BinIR_PrettyPrinter_ToString_
  commentId: Overload:B2R2.BinIR.PrettyPrinter.ToString*
  isSpec: "True"
  fullName: B2R2.BinIR.PrettyPrinter.ToString
  nameWithType: PrettyPrinter.ToString
- uid: B2R2.BinIR.Symbol
  name: Symbol (abrv)
  href: api/B2R2.BinIR.Symbol.html
  commentId: T:B2R2.BinIR.Symbol
  fullName: B2R2.BinIR.Symbol
  nameWithType: B2R2.BinIR.Symbol
- uid: B2R2.BinIR.SymbolModule
  name: Symbol (mod)
  href: api/B2R2.BinIR.SymbolModule.html
  commentId: T:B2R2.BinIR.SymbolModule
  fullName: B2R2.BinIR.SymbolModule
  nameWithType: B2R2.BinIR.SymbolModule
- uid: B2R2.BinIR.SymbolModule.getName(string * int)
  name: 'val getName: string * int -> string'
  href: api/B2R2.BinIR.SymbolModule.html#B2R2_BinIR_SymbolModule_getName_string___int_
  commentId: M:B2R2.BinIR.getName(System.String,System.Int32)
  fullName: 'val B2R2.BinIR.SymbolModule.getName: string * int -> string'
  nameWithType: 'val Symbol.getName: string * int -> string'
- uid: B2R2.BinIR.SymbolModule.getName*
  name: getName
  href: api/B2R2.BinIR.SymbolModule.html#B2R2_BinIR_SymbolModule_getName_
  commentId: Overload:B2R2.BinIR.SymbolModule.getName*
  isSpec: "True"
  fullName: B2R2.BinIR.SymbolModule.getName
  nameWithType: Symbol.getName
- uid: B2R2.BinIR.Utils
  name: Utils (mod)
  href: api/B2R2.BinIR.Utils.html
  commentId: T:B2R2.BinIR.Utils
  fullName: B2R2.BinIR.Utils
  nameWithType: B2R2.BinIR.Utils
- uid: B2R2.BinIR.Utils.isBBEnd(B2R2.BinIR.LowUIR.Stmt)
  name: 'val isBBEnd: Stmt -> bool'
  href: api/B2R2.BinIR.Utils.html#B2R2_BinIR_Utils_isBBEnd_B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinIR.isBBEnd(B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinIR.Utils.isBBEnd: B2R2.BinIR.LowUIR.Stmt -> bool'
  nameWithType: 'val Utils.isBBEnd: Stmt -> bool'
- uid: B2R2.BinIR.Utils.isBBEnd*
  name: isBBEnd
  href: api/B2R2.BinIR.Utils.html#B2R2_BinIR_Utils_isBBEnd_
  commentId: Overload:B2R2.BinIR.Utils.isBBEnd*
  isSpec: "True"
  fullName: B2R2.BinIR.Utils.isBBEnd
  nameWithType: Utils.isBBEnd
- uid: B2R2.BinIR.Utils.isBranch(B2R2.BinIR.LowUIR.Stmt)
  name: 'val isBranch: Stmt -> bool'
  href: api/B2R2.BinIR.Utils.html#B2R2_BinIR_Utils_isBranch_B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinIR.isBranch(B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinIR.Utils.isBranch: B2R2.BinIR.LowUIR.Stmt -> bool'
  nameWithType: 'val Utils.isBranch: Stmt -> bool'
- uid: B2R2.BinIR.Utils.isBranch*
  name: isBranch
  href: api/B2R2.BinIR.Utils.html#B2R2_BinIR_Utils_isBranch_
  commentId: Overload:B2R2.BinIR.Utils.isBranch*
  isSpec: "True"
  fullName: B2R2.BinIR.Utils.isBranch
  nameWithType: Utils.isBranch
- uid: B2R2.BinIR.Utils.isHalt(B2R2.BinIR.LowUIR.Stmt)
  name: 'val isHalt: Stmt -> bool'
  href: api/B2R2.BinIR.Utils.html#B2R2_BinIR_Utils_isHalt_B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.BinIR.isHalt(B2R2.BinIR.LowUIR.Stmt)
  fullName: 'val B2R2.BinIR.Utils.isHalt: B2R2.BinIR.LowUIR.Stmt -> bool'
  nameWithType: 'val Utils.isHalt: Stmt -> bool'
- uid: B2R2.BinIR.Utils.isHalt*
  name: isHalt
  href: api/B2R2.BinIR.Utils.html#B2R2_BinIR_Utils_isHalt_
  commentId: Overload:B2R2.BinIR.Utils.isHalt*
  isSpec: "True"
  fullName: B2R2.BinIR.Utils.isHalt
  nameWithType: Utils.isHalt
- uid: B2R2.BinReader
  name: BinReader
  href: api/B2R2.BinReader.html
  commentId: T:B2R2.BinReader
  fullName: B2R2.BinReader
  nameWithType: B2R2.BinReader
- uid: B2R2.BinReader.#ctor(byte [])
  name: 'new: byte [] -> BinReader'
  href: api/B2R2.BinReader.html#B2R2_BinReader__ctor_byte____
  commentId: M:B2R2.BinReader.#ctor(System.Byte[])
  fullName: 'new: byte [] -> B2R2.BinReader'
  nameWithType: 'new: byte [] -> BinReader'
- uid: B2R2.BinReader.#ctor*
  name: ( .ctor )
  href: api/B2R2.BinReader.html#B2R2_BinReader__ctor_
  commentId: Overload:B2R2.BinReader.#ctor*
  isSpec: "True"
  fullName: B2R2.BinReader
  nameWithType: BinReader.( .ctor )
- uid: B2R2.BinReader.Bytes(unit)
  name: 'property Bytes: byte []'
  href: api/B2R2.BinReader.html#B2R2_BinReader_Bytes_unit_
  commentId: P:B2R2.BinReader.Bytes
  fullName: 'property B2R2.BinReader.Bytes: byte []'
  nameWithType: 'property BinReader.Bytes: byte []'
- uid: B2R2.BinReader.Bytes*
  name: Bytes
  href: api/B2R2.BinReader.html#B2R2_BinReader_Bytes_
  commentId: Overload:B2R2.BinReader.Bytes*
  isSpec: "True"
  fullName: B2R2.BinReader.Bytes
  nameWithType: BinReader.Bytes
- uid: B2R2.BinReader.Endianness(unit)
  name: 'abstract property Endianness: Endian'
  href: api/B2R2.BinReader.html#B2R2_BinReader_Endianness_unit_
  commentId: P:B2R2.BinReader.Endianness
  fullName: 'abstract property B2R2.BinReader.Endianness: B2R2.Endian'
  nameWithType: 'abstract property BinReader.Endianness: Endian'
- uid: B2R2.BinReader.Endianness*
  name: Endianness
  href: api/B2R2.BinReader.html#B2R2_BinReader_Endianness_
  commentId: Overload:B2R2.BinReader.Endianness*
  isSpec: "True"
  fullName: B2R2.BinReader.Endianness
  nameWithType: BinReader.Endianness
- uid: B2R2.BinReader.Init(byte [] * B2R2.Endian)
  name: 'static member Init: byte [] * Endian -> BinReader'
  href: api/B2R2.BinReader.html#B2R2_BinReader_Init_byte______B2R2_Endian_
  commentId: M:B2R2.BinReader.Init(System.Byte[],B2R2.Endian)
  fullName: 'static member B2R2.BinReader.Init: byte [] * B2R2.Endian -> B2R2.BinReader'
  nameWithType: 'static member BinReader.Init: byte [] * Endian -> BinReader'
- uid: B2R2.BinReader.Init*
  name: Init
  href: api/B2R2.BinReader.html#B2R2_BinReader_Init_
  commentId: Overload:B2R2.BinReader.Init*
  isSpec: "True"
  fullName: B2R2.BinReader.Init
  nameWithType: BinReader.Init
- uid: B2R2.BinReader.IsOutOfRange(int)
  name: 'member IsOutOfRange: int -> bool'
  href: api/B2R2.BinReader.html#B2R2_BinReader_IsOutOfRange_int_
  commentId: M:B2R2.BinReader.IsOutOfRange(System.Int32)
  fullName: 'member B2R2.BinReader.IsOutOfRange: int -> bool'
  nameWithType: 'member BinReader.IsOutOfRange: int -> bool'
- uid: B2R2.BinReader.IsOutOfRange*
  name: IsOutOfRange
  href: api/B2R2.BinReader.html#B2R2_BinReader_IsOutOfRange_
  commentId: Overload:B2R2.BinReader.IsOutOfRange*
  isSpec: "True"
  fullName: B2R2.BinReader.IsOutOfRange
  nameWithType: BinReader.IsOutOfRange
- uid: B2R2.BinReader.Length(unit)
  name: 'member Length: unit -> int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_Length_unit_
  commentId: M:B2R2.BinReader.Length
  fullName: 'member B2R2.BinReader.Length: unit -> int'
  nameWithType: 'member BinReader.Length: unit -> int'
- uid: B2R2.BinReader.Length*
  name: Length
  href: api/B2R2.BinReader.html#B2R2_BinReader_Length_
  commentId: Overload:B2R2.BinReader.Length*
  isSpec: "True"
  fullName: B2R2.BinReader.Length
  nameWithType: BinReader.Length
- uid: B2R2.BinReader.PeekByte(int)
  name: 'member PeekByte: int -> byte'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekByte_int_
  commentId: M:B2R2.BinReader.PeekByte(System.Int32)
  fullName: 'member B2R2.BinReader.PeekByte: int -> byte'
  nameWithType: 'member BinReader.PeekByte: int -> byte'
- uid: B2R2.BinReader.PeekByte*
  name: PeekByte
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekByte_
  commentId: Overload:B2R2.BinReader.PeekByte*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekByte
  nameWithType: BinReader.PeekByte
- uid: B2R2.BinReader.PeekBytes(int * int)
  name: 'member PeekBytes: int * int -> byte []'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekBytes_int___int_
  commentId: M:B2R2.BinReader.PeekBytes(System.Int32,System.Int32)
  fullName: 'member B2R2.BinReader.PeekBytes: int * int -> byte []'
  nameWithType: 'member BinReader.PeekBytes: int * int -> byte []'
- uid: B2R2.BinReader.PeekBytes*
  name: PeekBytes
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekBytes_
  commentId: Overload:B2R2.BinReader.PeekBytes*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekBytes
  nameWithType: BinReader.PeekBytes
- uid: B2R2.BinReader.PeekChars(int * int)
  name: 'member PeekChars: int * int -> char []'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekChars_int___int_
  commentId: M:B2R2.BinReader.PeekChars(System.Int32,System.Int32)
  fullName: 'member B2R2.BinReader.PeekChars: int * int -> char []'
  nameWithType: 'member BinReader.PeekChars: int * int -> char []'
- uid: B2R2.BinReader.PeekChars*
  name: PeekChars
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekChars_
  commentId: Overload:B2R2.BinReader.PeekChars*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekChars
  nameWithType: BinReader.PeekChars
- uid: B2R2.BinReader.PeekInt16(int)
  name: 'abstract member PeekInt16: int -> int16'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt16_int_
  commentId: M:B2R2.BinReader.PeekInt16(System.Int32)
  fullName: 'abstract member B2R2.BinReader.PeekInt16: int -> int16'
  nameWithType: 'abstract member BinReader.PeekInt16: int -> int16'
- uid: B2R2.BinReader.PeekInt16*
  name: PeekInt16
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt16_
  commentId: Overload:B2R2.BinReader.PeekInt16*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekInt16
  nameWithType: BinReader.PeekInt16
- uid: B2R2.BinReader.PeekInt32(int)
  name: 'abstract member PeekInt32: int -> int32'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt32_int_
  commentId: M:B2R2.BinReader.PeekInt32(System.Int32)
  fullName: 'abstract member B2R2.BinReader.PeekInt32: int -> int32'
  nameWithType: 'abstract member BinReader.PeekInt32: int -> int32'
- uid: B2R2.BinReader.PeekInt32*
  name: PeekInt32
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt32_
  commentId: Overload:B2R2.BinReader.PeekInt32*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekInt32
  nameWithType: BinReader.PeekInt32
- uid: B2R2.BinReader.PeekInt64(int)
  name: 'abstract member PeekInt64: int -> int64'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt64_int_
  commentId: M:B2R2.BinReader.PeekInt64(System.Int32)
  fullName: 'abstract member B2R2.BinReader.PeekInt64: int -> int64'
  nameWithType: 'abstract member BinReader.PeekInt64: int -> int64'
- uid: B2R2.BinReader.PeekInt64*
  name: PeekInt64
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt64_
  commentId: Overload:B2R2.BinReader.PeekInt64*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekInt64
  nameWithType: BinReader.PeekInt64
- uid: B2R2.BinReader.PeekInt8(int)
  name: 'member PeekInt8: int -> int8'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt8_int_
  commentId: M:B2R2.BinReader.PeekInt8(System.Int32)
  fullName: 'member B2R2.BinReader.PeekInt8: int -> int8'
  nameWithType: 'member BinReader.PeekInt8: int -> int8'
- uid: B2R2.BinReader.PeekInt8*
  name: PeekInt8
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekInt8_
  commentId: Overload:B2R2.BinReader.PeekInt8*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekInt8
  nameWithType: BinReader.PeekInt8
- uid: B2R2.BinReader.PeekUInt16(int)
  name: 'abstract member PeekUInt16: int -> uint16'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt16_int_
  commentId: M:B2R2.BinReader.PeekUInt16(System.Int32)
  fullName: 'abstract member B2R2.BinReader.PeekUInt16: int -> uint16'
  nameWithType: 'abstract member BinReader.PeekUInt16: int -> uint16'
- uid: B2R2.BinReader.PeekUInt16*
  name: PeekUInt16
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt16_
  commentId: Overload:B2R2.BinReader.PeekUInt16*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekUInt16
  nameWithType: BinReader.PeekUInt16
- uid: B2R2.BinReader.PeekUInt32(int)
  name: 'abstract member PeekUInt32: int -> uint32'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt32_int_
  commentId: M:B2R2.BinReader.PeekUInt32(System.Int32)
  fullName: 'abstract member B2R2.BinReader.PeekUInt32: int -> uint32'
  nameWithType: 'abstract member BinReader.PeekUInt32: int -> uint32'
- uid: B2R2.BinReader.PeekUInt32*
  name: PeekUInt32
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt32_
  commentId: Overload:B2R2.BinReader.PeekUInt32*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekUInt32
  nameWithType: BinReader.PeekUInt32
- uid: B2R2.BinReader.PeekUInt64(int)
  name: 'abstract member PeekUInt64: int -> uint64'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt64_int_
  commentId: M:B2R2.BinReader.PeekUInt64(System.Int32)
  fullName: 'abstract member B2R2.BinReader.PeekUInt64: int -> uint64'
  nameWithType: 'abstract member BinReader.PeekUInt64: int -> uint64'
- uid: B2R2.BinReader.PeekUInt64*
  name: PeekUInt64
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt64_
  commentId: Overload:B2R2.BinReader.PeekUInt64*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekUInt64
  nameWithType: BinReader.PeekUInt64
- uid: B2R2.BinReader.PeekUInt8(int)
  name: 'member PeekUInt8: int -> uint8'
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt8_int_
  commentId: M:B2R2.BinReader.PeekUInt8(System.Int32)
  fullName: 'member B2R2.BinReader.PeekUInt8: int -> uint8'
  nameWithType: 'member BinReader.PeekUInt8: int -> uint8'
- uid: B2R2.BinReader.PeekUInt8*
  name: PeekUInt8
  href: api/B2R2.BinReader.html#B2R2_BinReader_PeekUInt8_
  commentId: Overload:B2R2.BinReader.PeekUInt8*
  isSpec: "True"
  fullName: B2R2.BinReader.PeekUInt8
  nameWithType: BinReader.PeekUInt8
- uid: B2R2.BinReader.ReadByte(int)
  name: 'member ReadByte: int -> byte * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadByte_int_
  commentId: M:B2R2.BinReader.ReadByte(System.Int32)
  fullName: 'member B2R2.BinReader.ReadByte: int -> byte * int'
  nameWithType: 'member BinReader.ReadByte: int -> byte * int'
- uid: B2R2.BinReader.ReadByte*
  name: ReadByte
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadByte_
  commentId: Overload:B2R2.BinReader.ReadByte*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadByte
  nameWithType: BinReader.ReadByte
- uid: B2R2.BinReader.ReadBytes(int * int)
  name: 'member ReadBytes: int * int -> byte [] * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadBytes_int___int_
  commentId: M:B2R2.BinReader.ReadBytes(System.Int32,System.Int32)
  fullName: 'member B2R2.BinReader.ReadBytes: int * int -> byte [] * int'
  nameWithType: 'member BinReader.ReadBytes: int * int -> byte [] * int'
- uid: B2R2.BinReader.ReadBytes*
  name: ReadBytes
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadBytes_
  commentId: Overload:B2R2.BinReader.ReadBytes*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadBytes
  nameWithType: BinReader.ReadBytes
- uid: B2R2.BinReader.ReadChars(int * int)
  name: 'member ReadChars: int * int -> char [] * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadChars_int___int_
  commentId: M:B2R2.BinReader.ReadChars(System.Int32,System.Int32)
  fullName: 'member B2R2.BinReader.ReadChars: int * int -> char [] * int'
  nameWithType: 'member BinReader.ReadChars: int * int -> char [] * int'
- uid: B2R2.BinReader.ReadChars*
  name: ReadChars
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadChars_
  commentId: Overload:B2R2.BinReader.ReadChars*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadChars
  nameWithType: BinReader.ReadChars
- uid: B2R2.BinReader.ReadInt16(int)
  name: 'member ReadInt16: int -> int16 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt16_int_
  commentId: M:B2R2.BinReader.ReadInt16(System.Int32)
  fullName: 'member B2R2.BinReader.ReadInt16: int -> int16 * int'
  nameWithType: 'member BinReader.ReadInt16: int -> int16 * int'
- uid: B2R2.BinReader.ReadInt16*
  name: ReadInt16
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt16_
  commentId: Overload:B2R2.BinReader.ReadInt16*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadInt16
  nameWithType: BinReader.ReadInt16
- uid: B2R2.BinReader.ReadInt32(int)
  name: 'member ReadInt32: int -> int32 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt32_int_
  commentId: M:B2R2.BinReader.ReadInt32(System.Int32)
  fullName: 'member B2R2.BinReader.ReadInt32: int -> int32 * int'
  nameWithType: 'member BinReader.ReadInt32: int -> int32 * int'
- uid: B2R2.BinReader.ReadInt32*
  name: ReadInt32
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt32_
  commentId: Overload:B2R2.BinReader.ReadInt32*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadInt32
  nameWithType: BinReader.ReadInt32
- uid: B2R2.BinReader.ReadInt64(int)
  name: 'member ReadInt64: int -> int64 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt64_int_
  commentId: M:B2R2.BinReader.ReadInt64(System.Int32)
  fullName: 'member B2R2.BinReader.ReadInt64: int -> int64 * int'
  nameWithType: 'member BinReader.ReadInt64: int -> int64 * int'
- uid: B2R2.BinReader.ReadInt64*
  name: ReadInt64
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt64_
  commentId: Overload:B2R2.BinReader.ReadInt64*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadInt64
  nameWithType: BinReader.ReadInt64
- uid: B2R2.BinReader.ReadInt8(int)
  name: 'member ReadInt8: int -> int8 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt8_int_
  commentId: M:B2R2.BinReader.ReadInt8(System.Int32)
  fullName: 'member B2R2.BinReader.ReadInt8: int -> int8 * int'
  nameWithType: 'member BinReader.ReadInt8: int -> int8 * int'
- uid: B2R2.BinReader.ReadInt8*
  name: ReadInt8
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadInt8_
  commentId: Overload:B2R2.BinReader.ReadInt8*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadInt8
  nameWithType: BinReader.ReadInt8
- uid: B2R2.BinReader.ReadUInt16(int)
  name: 'member ReadUInt16: int -> uint16 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt16_int_
  commentId: M:B2R2.BinReader.ReadUInt16(System.Int32)
  fullName: 'member B2R2.BinReader.ReadUInt16: int -> uint16 * int'
  nameWithType: 'member BinReader.ReadUInt16: int -> uint16 * int'
- uid: B2R2.BinReader.ReadUInt16*
  name: ReadUInt16
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt16_
  commentId: Overload:B2R2.BinReader.ReadUInt16*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadUInt16
  nameWithType: BinReader.ReadUInt16
- uid: B2R2.BinReader.ReadUInt32(int)
  name: 'member ReadUInt32: int -> uint32 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt32_int_
  commentId: M:B2R2.BinReader.ReadUInt32(System.Int32)
  fullName: 'member B2R2.BinReader.ReadUInt32: int -> uint32 * int'
  nameWithType: 'member BinReader.ReadUInt32: int -> uint32 * int'
- uid: B2R2.BinReader.ReadUInt32*
  name: ReadUInt32
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt32_
  commentId: Overload:B2R2.BinReader.ReadUInt32*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadUInt32
  nameWithType: BinReader.ReadUInt32
- uid: B2R2.BinReader.ReadUInt64(int)
  name: 'member ReadUInt64: int -> uint64 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt64_int_
  commentId: M:B2R2.BinReader.ReadUInt64(System.Int32)
  fullName: 'member B2R2.BinReader.ReadUInt64: int -> uint64 * int'
  nameWithType: 'member BinReader.ReadUInt64: int -> uint64 * int'
- uid: B2R2.BinReader.ReadUInt64*
  name: ReadUInt64
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt64_
  commentId: Overload:B2R2.BinReader.ReadUInt64*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadUInt64
  nameWithType: BinReader.ReadUInt64
- uid: B2R2.BinReader.ReadUInt8(int)
  name: 'member ReadUInt8: int -> uint8 * int'
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt8_int_
  commentId: M:B2R2.BinReader.ReadUInt8(System.Int32)
  fullName: 'member B2R2.BinReader.ReadUInt8: int -> uint8 * int'
  nameWithType: 'member BinReader.ReadUInt8: int -> uint8 * int'
- uid: B2R2.BinReader.ReadUInt8*
  name: ReadUInt8
  href: api/B2R2.BinReader.html#B2R2_BinReader_ReadUInt8_
  commentId: Overload:B2R2.BinReader.ReadUInt8*
  isSpec: "True"
  fullName: B2R2.BinReader.ReadUInt8
  nameWithType: BinReader.ReadUInt8
- uid: B2R2.BinReader.RenewReader(B2R2.BinReader -> B2R2.Endian)
  name: 'static member RenewReader: BinReader -> Endian -> BinReader'
  href: api/B2R2.BinReader.html#B2R2_BinReader_RenewReader_B2R2_BinReader____B2R2_Endian_
  commentId: M:B2R2.BinReader.RenewReader(B2R2.BinReader,B2R2.Endian)
  fullName: 'static member B2R2.BinReader.RenewReader: B2R2.BinReader -> B2R2.Endian -> B2R2.BinReader'
  nameWithType: 'static member BinReader.RenewReader: BinReader -> Endian -> BinReader'
- uid: B2R2.BinReader.RenewReader*
  name: RenewReader
  href: api/B2R2.BinReader.html#B2R2_BinReader_RenewReader_
  commentId: Overload:B2R2.BinReader.RenewReader*
  isSpec: "True"
  fullName: B2R2.BinReader.RenewReader
  nameWithType: BinReader.RenewReader
- uid: B2R2.BitVector
  name: BitVector (rec)
  href: api/B2R2.BitVector.html
  commentId: T:B2R2.BitVector
  fullName: B2R2.BitVector
  nameWithType: B2R2.BitVector
- uid: B2R2.BitVector.abs(B2R2.BitVector)
  name: 'static member abs: BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_abs_B2R2_BitVector_
  commentId: M:B2R2.BitVector.Abs(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.abs: B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.abs: BitVector -> BitVector'
- uid: B2R2.BitVector.abs*
  name: abs
  href: api/B2R2.BitVector.html#B2R2_BitVector_abs_
  commentId: Overload:B2R2.BitVector.abs*
  isSpec: "True"
  fullName: B2R2.BitVector.abs
  nameWithType: BitVector.abs
- uid: B2R2.BitVector.add(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member add: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_add_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Add(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.add: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.add: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.add*
  name: add
  href: api/B2R2.BitVector.html#B2R2_BitVector_add_
  commentId: Overload:B2R2.BitVector.add*
  isSpec: "True"
  fullName: B2R2.BitVector.add
  nameWithType: BitVector.add
- uid: B2R2.BitVector.band(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member band: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_band_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.BitwiseAnd(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.band: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.band: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.band*
  name: band
  href: api/B2R2.BitVector.html#B2R2_BitVector_band_
  commentId: Overload:B2R2.BitVector.band*
  isSpec: "True"
  fullName: B2R2.BitVector.band
  nameWithType: BitVector.band
- uid: B2R2.BitVector.bnot(B2R2.BitVector)
  name: 'static member bnot: BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_bnot_B2R2_BitVector_
  commentId: M:B2R2.BitVector.BitwiseNot(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.bnot: B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.bnot: BitVector -> BitVector'
- uid: B2R2.BitVector.bnot*
  name: bnot
  href: api/B2R2.BitVector.html#B2R2_BitVector_bnot_
  commentId: Overload:B2R2.BitVector.bnot*
  isSpec: "True"
  fullName: B2R2.BitVector.bnot
  nameWithType: BitVector.bnot
- uid: B2R2.BitVector.bor(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member bor: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_bor_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.BitwiseOr(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.bor: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.bor: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.bor*
  name: bor
  href: api/B2R2.BitVector.html#B2R2_BitVector_bor_
  commentId: Overload:B2R2.BitVector.bor*
  isSpec: "True"
  fullName: B2R2.BitVector.bor
  nameWithType: BitVector.bor
- uid: B2R2.BitVector.bxor(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member bxor: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_bxor_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.BitwiseXor(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.bxor: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.bxor: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.bxor*
  name: bxor
  href: api/B2R2.BitVector.html#B2R2_BitVector_bxor_
  commentId: Overload:B2R2.BitVector.bxor*
  isSpec: "True"
  fullName: B2R2.BitVector.bxor
  nameWithType: BitVector.bxor
- uid: B2R2.BitVector.cast(B2R2.BitVector -> B2R2.RegType)
  name: 'static member cast: BitVector -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_cast_B2R2_BitVector____B2R2_RegType_
  commentId: M:B2R2.BitVector.Cast(B2R2.BitVector,System.Int32)
  fullName: 'static member B2R2.BitVector.cast: B2R2.BitVector -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.cast: BitVector -> RegType -> BitVector'
- uid: B2R2.BitVector.cast*
  name: cast
  href: api/B2R2.BitVector.html#B2R2_BitVector_cast_
  commentId: Overload:B2R2.BitVector.cast*
  isSpec: "True"
  fullName: B2R2.BitVector.cast
  nameWithType: BitVector.cast
- uid: B2R2.BitVector.concat(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member concat: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_concat_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Concat(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.concat: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.concat: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.concat*
  name: concat
  href: api/B2R2.BitVector.html#B2R2_BitVector_concat_
  commentId: Overload:B2R2.BitVector.concat*
  isSpec: "True"
  fullName: B2R2.BitVector.concat
  nameWithType: BitVector.concat
- uid: B2R2.BitVector.div(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member div: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_div_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Div(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.div: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.div: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.div*
  name: div
  href: api/B2R2.BitVector.html#B2R2_BitVector_div_
  commentId: Overload:B2R2.BitVector.div*
  isSpec: "True"
  fullName: B2R2.BitVector.div
  nameWithType: BitVector.div
- uid: B2R2.BitVector.eq(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member eq: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_eq_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.EQ(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.eq: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.eq: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.eq*
  name: eq
  href: api/B2R2.BitVector.html#B2R2_BitVector_eq_
  commentId: Overload:B2R2.BitVector.eq*
  isSpec: "True"
  fullName: B2R2.BitVector.eq
  nameWithType: BitVector.eq
- uid: B2R2.BitVector.Equals(obj)
  name: 'member Equals: obj -> bool'
  href: api/B2R2.BitVector.html#B2R2_BitVector_Equals_obj_
  commentId: M:B2R2.BitVector.Equals(System.Object)
  fullName: 'member B2R2.BitVector.Equals: obj -> bool'
  nameWithType: 'member BitVector.Equals: obj -> bool'
- uid: B2R2.BitVector.Equals*
  name: Equals
  href: api/B2R2.BitVector.html#B2R2_BitVector_Equals_
  commentId: Overload:B2R2.BitVector.Equals*
  isSpec: "True"
  fullName: B2R2.BitVector.Equals
  nameWithType: BitVector.Equals
- uid: B2R2.BitVector.extract(B2R2.BitVector -> B2R2.RegType -> int)
  name: 'static member extract: BitVector -> RegType -> int -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_extract_B2R2_BitVector____B2R2_RegType____int_
  commentId: M:B2R2.BitVector.Extract(B2R2.BitVector,System.Int32,System.Int32)
  fullName: 'static member B2R2.BitVector.extract: B2R2.BitVector -> B2R2.RegType -> int -> B2R2.BitVector'
  nameWithType: 'static member BitVector.extract: BitVector -> RegType -> int -> BitVector'
- uid: B2R2.BitVector.extract*
  name: extract
  href: api/B2R2.BitVector.html#B2R2_BitVector_extract_
  commentId: Overload:B2R2.BitVector.extract*
  isSpec: "True"
  fullName: B2R2.BitVector.extract
  nameWithType: BitVector.extract
- uid: B2R2.BitVector.ge(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member ge: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ge_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.GE(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.ge: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ge: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.ge*
  name: ge
  href: api/B2R2.BitVector.html#B2R2_BitVector_ge_
  commentId: Overload:B2R2.BitVector.ge*
  isSpec: "True"
  fullName: B2R2.BitVector.ge
  nameWithType: BitVector.ge
- uid: B2R2.BitVector.GetHashCode(unit)
  name: 'member GetHashCode: unit -> int'
  href: api/B2R2.BitVector.html#B2R2_BitVector_GetHashCode_unit_
  commentId: M:B2R2.BitVector.GetHashCode
  fullName: 'member B2R2.BitVector.GetHashCode: unit -> int'
  nameWithType: 'member BitVector.GetHashCode: unit -> int'
- uid: B2R2.BitVector.GetHashCode*
  name: GetHashCode
  href: api/B2R2.BitVector.html#B2R2_BitVector_GetHashCode_
  commentId: Overload:B2R2.BitVector.GetHashCode*
  isSpec: "True"
  fullName: B2R2.BitVector.GetHashCode
  nameWithType: BitVector.GetHashCode
- uid: B2R2.BitVector.getType(B2R2.BitVector)
  name: 'static member getType: BitVector -> RegType'
  href: api/B2R2.BitVector.html#B2R2_BitVector_getType_B2R2_BitVector_
  commentId: M:B2R2.BitVector.GetType(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.getType: B2R2.BitVector -> B2R2.RegType'
  nameWithType: 'static member BitVector.getType: BitVector -> RegType'
- uid: B2R2.BitVector.getType*
  name: getType
  href: api/B2R2.BitVector.html#B2R2_BitVector_getType_
  commentId: Overload:B2R2.BitVector.getType*
  isSpec: "True"
  fullName: B2R2.BitVector.getType
  nameWithType: BitVector.getType
- uid: B2R2.BitVector.getValue(B2R2.BitVector)
  name: 'static member getValue: BitVector -> bigint'
  href: api/B2R2.BitVector.html#B2R2_BitVector_getValue_B2R2_BitVector_
  commentId: M:B2R2.BitVector.GetValue(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.getValue: B2R2.BitVector -> bigint'
  nameWithType: 'static member BitVector.getValue: BitVector -> bigint'
- uid: B2R2.BitVector.getValue*
  name: getValue
  href: api/B2R2.BitVector.html#B2R2_BitVector_getValue_
  commentId: Overload:B2R2.BitVector.getValue*
  isSpec: "True"
  fullName: B2R2.BitVector.getValue
  nameWithType: BitVector.getValue
- uid: B2R2.BitVector.gt(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member gt: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_gt_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.GT(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.gt: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.gt: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.gt*
  name: gt
  href: api/B2R2.BitVector.html#B2R2_BitVector_gt_
  commentId: Overload:B2R2.BitVector.gt*
  isSpec: "True"
  fullName: B2R2.BitVector.gt
  nameWithType: BitVector.gt
- uid: B2R2.BitVector.isNegative(B2R2.BitVector)
  name: 'static member isNegative: BitVector -> bool'
  href: api/B2R2.BitVector.html#B2R2_BitVector_isNegative_B2R2_BitVector_
  commentId: M:B2R2.BitVector.IsNegative(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.isNegative: B2R2.BitVector -> bool'
  nameWithType: 'static member BitVector.isNegative: BitVector -> bool'
- uid: B2R2.BitVector.isNegative*
  name: isNegative
  href: api/B2R2.BitVector.html#B2R2_BitVector_isNegative_
  commentId: Overload:B2R2.BitVector.isNegative*
  isSpec: "True"
  fullName: B2R2.BitVector.isNegative
  nameWithType: BitVector.isNegative
- uid: B2R2.BitVector.isNum(B2R2.BitVector -> uint64)
  name: 'static member isNum: BitVector -> uint64 -> bool'
  href: api/B2R2.BitVector.html#B2R2_BitVector_isNum_B2R2_BitVector____uint64_
  commentId: M:B2R2.BitVector.IsNum(B2R2.BitVector,System.UInt64)
  fullName: 'static member B2R2.BitVector.isNum: B2R2.BitVector -> uint64 -> bool'
  nameWithType: 'static member BitVector.isNum: BitVector -> uint64 -> bool'
- uid: B2R2.BitVector.isNum*
  name: isNum
  href: api/B2R2.BitVector.html#B2R2_BitVector_isNum_
  commentId: Overload:B2R2.BitVector.isNum*
  isSpec: "True"
  fullName: B2R2.BitVector.isNum
  nameWithType: BitVector.isNum
- uid: B2R2.BitVector.isOne(B2R2.BitVector)
  name: 'static member isOne: BitVector -> bool'
  href: api/B2R2.BitVector.html#B2R2_BitVector_isOne_B2R2_BitVector_
  commentId: M:B2R2.BitVector.IsOne(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.isOne: B2R2.BitVector -> bool'
  nameWithType: 'static member BitVector.isOne: BitVector -> bool'
- uid: B2R2.BitVector.isOne*
  name: isOne
  href: api/B2R2.BitVector.html#B2R2_BitVector_isOne_
  commentId: Overload:B2R2.BitVector.isOne*
  isSpec: "True"
  fullName: B2R2.BitVector.isOne
  nameWithType: BitVector.isOne
- uid: B2R2.BitVector.isPositive(B2R2.BitVector)
  name: 'static member isPositive: BitVector -> bool'
  href: api/B2R2.BitVector.html#B2R2_BitVector_isPositive_B2R2_BitVector_
  commentId: M:B2R2.BitVector.IsPositive(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.isPositive: B2R2.BitVector -> bool'
  nameWithType: 'static member BitVector.isPositive: BitVector -> bool'
- uid: B2R2.BitVector.isPositive*
  name: isPositive
  href: api/B2R2.BitVector.html#B2R2_BitVector_isPositive_
  commentId: Overload:B2R2.BitVector.isPositive*
  isSpec: "True"
  fullName: B2R2.BitVector.isPositive
  nameWithType: BitVector.isPositive
- uid: B2R2.BitVector.isSignedMin(B2R2.BitVector)
  name: 'static member isSignedMin: BitVector -> bool'
  href: api/B2R2.BitVector.html#B2R2_BitVector_isSignedMin_B2R2_BitVector_
  commentId: M:B2R2.BitVector.IsSignedMin(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.isSignedMin: B2R2.BitVector -> bool'
  nameWithType: 'static member BitVector.isSignedMin: BitVector -> bool'
- uid: B2R2.BitVector.isSignedMin*
  name: isSignedMin
  href: api/B2R2.BitVector.html#B2R2_BitVector_isSignedMin_
  commentId: Overload:B2R2.BitVector.isSignedMin*
  isSpec: "True"
  fullName: B2R2.BitVector.isSignedMin
  nameWithType: BitVector.isSignedMin
- uid: B2R2.BitVector.isZero(B2R2.BitVector)
  name: 'static member isZero: BitVector -> bool'
  href: api/B2R2.BitVector.html#B2R2_BitVector_isZero_B2R2_BitVector_
  commentId: M:B2R2.BitVector.IsZero(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.isZero: B2R2.BitVector -> bool'
  nameWithType: 'static member BitVector.isZero: BitVector -> bool'
- uid: B2R2.BitVector.isZero*
  name: isZero
  href: api/B2R2.BitVector.html#B2R2_BitVector_isZero_
  commentId: Overload:B2R2.BitVector.isZero*
  isSpec: "True"
  fullName: B2R2.BitVector.isZero
  nameWithType: BitVector.isZero
- uid: B2R2.BitVector.le(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member le: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_le_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.LE(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.le: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.le: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.le*
  name: le
  href: api/B2R2.BitVector.html#B2R2_BitVector_le_
  commentId: Overload:B2R2.BitVector.le*
  isSpec: "True"
  fullName: B2R2.BitVector.le
  nameWithType: BitVector.le
- uid: B2R2.BitVector.lt(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member lt: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_lt_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.LT(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.lt: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.lt: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.lt*
  name: lt
  href: api/B2R2.BitVector.html#B2R2_BitVector_lt_
  commentId: Overload:B2R2.BitVector.lt*
  isSpec: "True"
  fullName: B2R2.BitVector.lt
  nameWithType: BitVector.lt
- uid: B2R2.BitVector.maxNum16(unit)
  name: 'static property maxNum16: BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum16_unit_
  commentId: P:B2R2.BitVector.maxNum16
  fullName: 'static property B2R2.BitVector.maxNum16: B2R2.BitVector'
  nameWithType: 'static property BitVector.maxNum16: BitVector'
- uid: B2R2.BitVector.maxNum16*
  name: maxNum16
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum16_
  commentId: Overload:B2R2.BitVector.maxNum16*
  isSpec: "True"
  fullName: B2R2.BitVector.maxNum16
  nameWithType: BitVector.maxNum16
- uid: B2R2.BitVector.maxNum32(unit)
  name: 'static property maxNum32: BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum32_unit_
  commentId: P:B2R2.BitVector.maxNum32
  fullName: 'static property B2R2.BitVector.maxNum32: B2R2.BitVector'
  nameWithType: 'static property BitVector.maxNum32: BitVector'
- uid: B2R2.BitVector.maxNum32*
  name: maxNum32
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum32_
  commentId: Overload:B2R2.BitVector.maxNum32*
  isSpec: "True"
  fullName: B2R2.BitVector.maxNum32
  nameWithType: BitVector.maxNum32
- uid: B2R2.BitVector.maxNum64(unit)
  name: 'static property maxNum64: BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum64_unit_
  commentId: P:B2R2.BitVector.maxNum64
  fullName: 'static property B2R2.BitVector.maxNum64: B2R2.BitVector'
  nameWithType: 'static property BitVector.maxNum64: BitVector'
- uid: B2R2.BitVector.maxNum64*
  name: maxNum64
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum64_
  commentId: Overload:B2R2.BitVector.maxNum64*
  isSpec: "True"
  fullName: B2R2.BitVector.maxNum64
  nameWithType: BitVector.maxNum64
- uid: B2R2.BitVector.maxNum8(unit)
  name: 'static property maxNum8: BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum8_unit_
  commentId: P:B2R2.BitVector.maxNum8
  fullName: 'static property B2R2.BitVector.maxNum8: B2R2.BitVector'
  nameWithType: 'static property BitVector.maxNum8: BitVector'
- uid: B2R2.BitVector.maxNum8*
  name: maxNum8
  href: api/B2R2.BitVector.html#B2R2_BitVector_maxNum8_
  commentId: Overload:B2R2.BitVector.maxNum8*
  isSpec: "True"
  fullName: B2R2.BitVector.maxNum8
  nameWithType: BitVector.maxNum8
- uid: B2R2.BitVector.modulo(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member modulo: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_modulo_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Modulo(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.modulo: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.modulo: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.modulo*
  name: modulo
  href: api/B2R2.BitVector.html#B2R2_BitVector_modulo_
  commentId: Overload:B2R2.BitVector.modulo*
  isSpec: "True"
  fullName: B2R2.BitVector.modulo
  nameWithType: BitVector.modulo
- uid: B2R2.BitVector.mul(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member mul: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_mul_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Mul(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.mul: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.mul: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.mul*
  name: mul
  href: api/B2R2.BitVector.html#B2R2_BitVector_mul_
  commentId: Overload:B2R2.BitVector.mul*
  isSpec: "True"
  fullName: B2R2.BitVector.mul
  nameWithType: BitVector.mul
- uid: B2R2.BitVector.neg(B2R2.BitVector)
  name: 'static member neg: BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_neg_B2R2_BitVector_
  commentId: M:B2R2.BitVector.Neg(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.neg: B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.neg: BitVector -> BitVector'
- uid: B2R2.BitVector.neg*
  name: neg
  href: api/B2R2.BitVector.html#B2R2_BitVector_neg_
  commentId: Overload:B2R2.BitVector.neg*
  isSpec: "True"
  fullName: B2R2.BitVector.neg
  nameWithType: BitVector.neg
- uid: B2R2.BitVector.neq(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member neq: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_neq_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.NEQ(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.neq: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.neq: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.neq*
  name: neq
  href: api/B2R2.BitVector.html#B2R2_BitVector_neq_
  commentId: Overload:B2R2.BitVector.neq*
  isSpec: "True"
  fullName: B2R2.BitVector.neq
  nameWithType: BitVector.neq
- uid: B2R2.BitVector.ofArr(byte [])
  name: 'static member ofArr: byte [] -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofArr_byte____
  commentId: M:B2R2.BitVector.OfArr(System.Byte[])
  fullName: 'static member B2R2.BitVector.ofArr: byte [] -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ofArr: byte [] -> BitVector'
- uid: B2R2.BitVector.ofArr*
  name: ofArr
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofArr_
  commentId: Overload:B2R2.BitVector.ofArr*
  isSpec: "True"
  fullName: B2R2.BitVector.ofArr
  nameWithType: BitVector.ofArr
- uid: B2R2.BitVector.ofBv(B2R2.BitVector -> B2R2.RegType)
  name: 'static member ofBv: BitVector -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofBv_B2R2_BitVector____B2R2_RegType_
  commentId: M:B2R2.BitVector.OfBv(B2R2.BitVector,System.Int32)
  fullName: 'static member B2R2.BitVector.ofBv: B2R2.BitVector -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ofBv: BitVector -> RegType -> BitVector'
- uid: B2R2.BitVector.ofBv*
  name: ofBv
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofBv_
  commentId: Overload:B2R2.BitVector.ofBv*
  isSpec: "True"
  fullName: B2R2.BitVector.ofBv
  nameWithType: BitVector.ofBv
- uid: B2R2.BitVector.ofInt32(int32 -> B2R2.RegType)
  name: 'static member ofInt32: int32 -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofInt32_int32____B2R2_RegType_
  commentId: M:B2R2.BitVector.OfInt32(System.Int32,System.Int32)
  fullName: 'static member B2R2.BitVector.ofInt32: int32 -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ofInt32: int32 -> RegType -> BitVector'
- uid: B2R2.BitVector.ofInt32*
  name: ofInt32
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofInt32_
  commentId: Overload:B2R2.BitVector.ofInt32*
  isSpec: "True"
  fullName: B2R2.BitVector.ofInt32
  nameWithType: BitVector.ofInt32
- uid: B2R2.BitVector.ofInt64(int64 -> B2R2.RegType)
  name: 'static member ofInt64: int64 -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofInt64_int64____B2R2_RegType_
  commentId: M:B2R2.BitVector.OfInt64(System.Int64,System.Int32)
  fullName: 'static member B2R2.BitVector.ofInt64: int64 -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ofInt64: int64 -> RegType -> BitVector'
- uid: B2R2.BitVector.ofInt64*
  name: ofInt64
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofInt64_
  commentId: Overload:B2R2.BitVector.ofInt64*
  isSpec: "True"
  fullName: B2R2.BitVector.ofInt64
  nameWithType: BitVector.ofInt64
- uid: B2R2.BitVector.ofUBInt(bigint -> B2R2.RegType)
  name: 'static member ofUBInt: bigint -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofUBInt_bigint____B2R2_RegType_
  commentId: M:B2R2.BitVector.OfUBInt(System.Numerics.BigInteger,System.Int32)
  fullName: 'static member B2R2.BitVector.ofUBInt: bigint -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ofUBInt: bigint -> RegType -> BitVector'
- uid: B2R2.BitVector.ofUBInt*
  name: ofUBInt
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofUBInt_
  commentId: Overload:B2R2.BitVector.ofUBInt*
  isSpec: "True"
  fullName: B2R2.BitVector.ofUBInt
  nameWithType: BitVector.ofUBInt
- uid: B2R2.BitVector.ofUInt32(uint32 -> B2R2.RegType)
  name: 'static member ofUInt32: uint32 -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofUInt32_uint32____B2R2_RegType_
  commentId: M:B2R2.BitVector.OfUInt32(System.UInt32,System.Int32)
  fullName: 'static member B2R2.BitVector.ofUInt32: uint32 -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ofUInt32: uint32 -> RegType -> BitVector'
- uid: B2R2.BitVector.ofUInt32*
  name: ofUInt32
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofUInt32_
  commentId: Overload:B2R2.BitVector.ofUInt32*
  isSpec: "True"
  fullName: B2R2.BitVector.ofUInt32
  nameWithType: BitVector.ofUInt32
- uid: B2R2.BitVector.ofUInt64(uint64 -> B2R2.RegType)
  name: 'static member ofUInt64: uint64 -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofUInt64_uint64____B2R2_RegType_
  commentId: M:B2R2.BitVector.OfUInt64(System.UInt64,System.Int32)
  fullName: 'static member B2R2.BitVector.ofUInt64: uint64 -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.ofUInt64: uint64 -> RegType -> BitVector'
- uid: B2R2.BitVector.ofUInt64*
  name: ofUInt64
  href: api/B2R2.BitVector.html#B2R2_BitVector_ofUInt64_
  commentId: Overload:B2R2.BitVector.ofUInt64*
  isSpec: "True"
  fullName: B2R2.BitVector.ofUInt64
  nameWithType: BitVector.ofUInt64
- uid: B2R2.BitVector.one(B2R2.RegType)
  name: 'static member one: RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_one_B2R2_RegType_
  commentId: M:B2R2.BitVector.One(System.Int32)
  fullName: 'static member B2R2.BitVector.one: B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.one: RegType -> BitVector'
- uid: B2R2.BitVector.one*
  name: one
  href: api/B2R2.BitVector.html#B2R2_BitVector_one_
  commentId: Overload:B2R2.BitVector.one*
  isSpec: "True"
  fullName: B2R2.BitVector.one
  nameWithType: BitVector.one
- uid: B2R2.BitVector.sar(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member sar: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_sar_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Sar(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.sar: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.sar: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.sar*
  name: sar
  href: api/B2R2.BitVector.html#B2R2_BitVector_sar_
  commentId: Overload:B2R2.BitVector.sar*
  isSpec: "True"
  fullName: B2R2.BitVector.sar
  nameWithType: BitVector.sar
- uid: B2R2.BitVector.sdiv(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member sdiv: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_sdiv_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Sdiv(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.sdiv: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.sdiv: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.sdiv*
  name: sdiv
  href: api/B2R2.BitVector.html#B2R2_BitVector_sdiv_
  commentId: Overload:B2R2.BitVector.sdiv*
  isSpec: "True"
  fullName: B2R2.BitVector.sdiv
  nameWithType: BitVector.sdiv
- uid: B2R2.BitVector.sext(B2R2.BitVector -> B2R2.RegType)
  name: 'static member sext: BitVector -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_sext_B2R2_BitVector____B2R2_RegType_
  commentId: M:B2R2.BitVector.Sext(B2R2.BitVector,System.Int32)
  fullName: 'static member B2R2.BitVector.sext: B2R2.BitVector -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.sext: BitVector -> RegType -> BitVector'
- uid: B2R2.BitVector.sext*
  name: sext
  href: api/B2R2.BitVector.html#B2R2_BitVector_sext_
  commentId: Overload:B2R2.BitVector.sext*
  isSpec: "True"
  fullName: B2R2.BitVector.sext
  nameWithType: BitVector.sext
- uid: B2R2.BitVector.sge(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member sge: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_sge_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.SGE(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.sge: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.sge: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.sge*
  name: sge
  href: api/B2R2.BitVector.html#B2R2_BitVector_sge_
  commentId: Overload:B2R2.BitVector.sge*
  isSpec: "True"
  fullName: B2R2.BitVector.sge
  nameWithType: BitVector.sge
- uid: B2R2.BitVector.sgt(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member sgt: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_sgt_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.SGT(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.sgt: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.sgt: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.sgt*
  name: sgt
  href: api/B2R2.BitVector.html#B2R2_BitVector_sgt_
  commentId: Overload:B2R2.BitVector.sgt*
  isSpec: "True"
  fullName: B2R2.BitVector.sgt
  nameWithType: BitVector.sgt
- uid: B2R2.BitVector.shl(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member shl: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_shl_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Shl(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.shl: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.shl: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.shl*
  name: shl
  href: api/B2R2.BitVector.html#B2R2_BitVector_shl_
  commentId: Overload:B2R2.BitVector.shl*
  isSpec: "True"
  fullName: B2R2.BitVector.shl
  nameWithType: BitVector.shl
- uid: B2R2.BitVector.shr(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member shr: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_shr_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Shr(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.shr: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.shr: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.shr*
  name: shr
  href: api/B2R2.BitVector.html#B2R2_BitVector_shr_
  commentId: Overload:B2R2.BitVector.shr*
  isSpec: "True"
  fullName: B2R2.BitVector.shr
  nameWithType: BitVector.shr
- uid: B2R2.BitVector.sle(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member sle: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_sle_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.SLE(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.sle: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.sle: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.sle*
  name: sle
  href: api/B2R2.BitVector.html#B2R2_BitVector_sle_
  commentId: Overload:B2R2.BitVector.sle*
  isSpec: "True"
  fullName: B2R2.BitVector.sle
  nameWithType: BitVector.sle
- uid: B2R2.BitVector.slt(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member slt: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_slt_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.SLT(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.slt: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.slt: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.slt*
  name: slt
  href: api/B2R2.BitVector.html#B2R2_BitVector_slt_
  commentId: Overload:B2R2.BitVector.slt*
  isSpec: "True"
  fullName: B2R2.BitVector.slt
  nameWithType: BitVector.slt
- uid: B2R2.BitVector.smodulo(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member smodulo: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_smodulo_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.SModulo(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.smodulo: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.smodulo: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.smodulo*
  name: smodulo
  href: api/B2R2.BitVector.html#B2R2_BitVector_smodulo_
  commentId: Overload:B2R2.BitVector.smodulo*
  isSpec: "True"
  fullName: B2R2.BitVector.smodulo
  nameWithType: BitVector.smodulo
- uid: B2R2.BitVector.sub(B2R2.BitVector -> B2R2.BitVector)
  name: 'static member sub: BitVector -> BitVector -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_sub_B2R2_BitVector____B2R2_BitVector_
  commentId: M:B2R2.BitVector.Sub(B2R2.BitVector,B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.sub: B2R2.BitVector -> B2R2.BitVector -> B2R2.BitVector'
  nameWithType: 'static member BitVector.sub: BitVector -> BitVector -> BitVector'
- uid: B2R2.BitVector.sub*
  name: sub
  href: api/B2R2.BitVector.html#B2R2_BitVector_sub_
  commentId: Overload:B2R2.BitVector.sub*
  isSpec: "True"
  fullName: B2R2.BitVector.sub
  nameWithType: BitVector.sub
- uid: B2R2.BitVector.toInt32(B2R2.BitVector)
  name: 'static member toInt32: BitVector -> int32'
  href: api/B2R2.BitVector.html#B2R2_BitVector_toInt32_B2R2_BitVector_
  commentId: M:B2R2.BitVector.ToInt32(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.toInt32: B2R2.BitVector -> int32'
  nameWithType: 'static member BitVector.toInt32: BitVector -> int32'
- uid: B2R2.BitVector.toInt32*
  name: toInt32
  href: api/B2R2.BitVector.html#B2R2_BitVector_toInt32_
  commentId: Overload:B2R2.BitVector.toInt32*
  isSpec: "True"
  fullName: B2R2.BitVector.toInt32
  nameWithType: BitVector.toInt32
- uid: B2R2.BitVector.toInt64(B2R2.BitVector)
  name: 'static member toInt64: BitVector -> int64'
  href: api/B2R2.BitVector.html#B2R2_BitVector_toInt64_B2R2_BitVector_
  commentId: M:B2R2.BitVector.ToInt64(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.toInt64: B2R2.BitVector -> int64'
  nameWithType: 'static member BitVector.toInt64: BitVector -> int64'
- uid: B2R2.BitVector.toInt64*
  name: toInt64
  href: api/B2R2.BitVector.html#B2R2_BitVector_toInt64_
  commentId: Overload:B2R2.BitVector.toInt64*
  isSpec: "True"
  fullName: B2R2.BitVector.toInt64
  nameWithType: BitVector.toInt64
- uid: B2R2.BitVector.toString(B2R2.BitVector)
  name: 'static member toString: BitVector -> string'
  href: api/B2R2.BitVector.html#B2R2_BitVector_toString_B2R2_BitVector_
  commentId: M:B2R2.BitVector.ToString(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.toString: B2R2.BitVector -> string'
  nameWithType: 'static member BitVector.toString: BitVector -> string'
- uid: B2R2.BitVector.ToString(unit)
  name: 'member ToString: unit -> string'
  href: api/B2R2.BitVector.html#B2R2_BitVector_ToString_unit_
  commentId: M:B2R2.BitVector.ToString
  fullName: 'member B2R2.BitVector.ToString: unit -> string'
  nameWithType: 'member BitVector.ToString: unit -> string'
- uid: B2R2.BitVector.toString*
  name: toString
  href: api/B2R2.BitVector.html#B2R2_BitVector_toString_
  commentId: Overload:B2R2.BitVector.toString*
  isSpec: "True"
  fullName: B2R2.BitVector.toString
  nameWithType: BitVector.toString
- uid: B2R2.BitVector.ToString*
  name: ToString
  href: api/B2R2.BitVector.html#B2R2_BitVector_ToString_
  commentId: Overload:B2R2.BitVector.ToString*
  isSpec: "True"
  fullName: B2R2.BitVector.ToString
  nameWithType: BitVector.ToString
- uid: B2R2.BitVector.toUInt32(B2R2.BitVector)
  name: 'static member toUInt32: BitVector -> uint32'
  href: api/B2R2.BitVector.html#B2R2_BitVector_toUInt32_B2R2_BitVector_
  commentId: M:B2R2.BitVector.ToUInt32(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.toUInt32: B2R2.BitVector -> uint32'
  nameWithType: 'static member BitVector.toUInt32: BitVector -> uint32'
- uid: B2R2.BitVector.toUInt32*
  name: toUInt32
  href: api/B2R2.BitVector.html#B2R2_BitVector_toUInt32_
  commentId: Overload:B2R2.BitVector.toUInt32*
  isSpec: "True"
  fullName: B2R2.BitVector.toUInt32
  nameWithType: BitVector.toUInt32
- uid: B2R2.BitVector.toUInt64(B2R2.BitVector)
  name: 'static member toUInt64: BitVector -> uint64'
  href: api/B2R2.BitVector.html#B2R2_BitVector_toUInt64_B2R2_BitVector_
  commentId: M:B2R2.BitVector.ToUInt64(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.toUInt64: B2R2.BitVector -> uint64'
  nameWithType: 'static member BitVector.toUInt64: BitVector -> uint64'
- uid: B2R2.BitVector.toUInt64*
  name: toUInt64
  href: api/B2R2.BitVector.html#B2R2_BitVector_toUInt64_
  commentId: Overload:B2R2.BitVector.toUInt64*
  isSpec: "True"
  fullName: B2R2.BitVector.toUInt64
  nameWithType: BitVector.toUInt64
- uid: B2R2.BitVector.valToString(B2R2.BitVector)
  name: 'static member valToString: BitVector -> string'
  href: api/B2R2.BitVector.html#B2R2_BitVector_valToString_B2R2_BitVector_
  commentId: M:B2R2.BitVector.ValToString(B2R2.BitVector)
  fullName: 'static member B2R2.BitVector.valToString: B2R2.BitVector -> string'
  nameWithType: 'static member BitVector.valToString: BitVector -> string'
- uid: B2R2.BitVector.valToString*
  name: valToString
  href: api/B2R2.BitVector.html#B2R2_BitVector_valToString_
  commentId: Overload:B2R2.BitVector.valToString*
  isSpec: "True"
  fullName: B2R2.BitVector.valToString
  nameWithType: BitVector.valToString
- uid: B2R2.BitVector.zero(B2R2.RegType)
  name: 'static member zero: RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_zero_B2R2_RegType_
  commentId: M:B2R2.BitVector.Zero(System.Int32)
  fullName: 'static member B2R2.BitVector.zero: B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.zero: RegType -> BitVector'
- uid: B2R2.BitVector.zero*
  name: zero
  href: api/B2R2.BitVector.html#B2R2_BitVector_zero_
  commentId: Overload:B2R2.BitVector.zero*
  isSpec: "True"
  fullName: B2R2.BitVector.zero
  nameWithType: BitVector.zero
- uid: B2R2.BitVector.zext(B2R2.BitVector -> B2R2.RegType)
  name: 'static member zext: BitVector -> RegType -> BitVector'
  href: api/B2R2.BitVector.html#B2R2_BitVector_zext_B2R2_BitVector____B2R2_RegType_
  commentId: M:B2R2.BitVector.Zext(B2R2.BitVector,System.Int32)
  fullName: 'static member B2R2.BitVector.zext: B2R2.BitVector -> B2R2.RegType -> B2R2.BitVector'
  nameWithType: 'static member BitVector.zext: BitVector -> RegType -> BitVector'
- uid: B2R2.BitVector.zext*
  name: zext
  href: api/B2R2.BitVector.html#B2R2_BitVector_zext_
  commentId: Overload:B2R2.BitVector.zext*
  isSpec: "True"
  fullName: B2R2.BitVector.zext
  nameWithType: BitVector.zext
- uid: B2R2.ByteArray
  name: ByteArray (mod)
  href: api/B2R2.ByteArray.html
  commentId: T:B2R2.ByteArray
  fullName: B2R2.ByteArray
  nameWithType: B2R2.ByteArray
- uid: B2R2.ByteArray.extractCString(byte [] -> int)
  name: 'val extractCString: byte [] -> int -> string'
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_extractCString_byte_______int_
  commentId: M:B2R2.extractCString(System.Byte[],System.Int32)
  fullName: 'val B2R2.ByteArray.extractCString: byte [] -> int -> string'
  nameWithType: 'val ByteArray.extractCString: byte [] -> int -> string'
- uid: B2R2.ByteArray.extractCString*
  name: extractCString
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_extractCString_
  commentId: Overload:B2R2.ByteArray.extractCString*
  isSpec: "True"
  fullName: B2R2.ByteArray.extractCString
  nameWithType: ByteArray.extractCString
- uid: B2R2.ByteArray.findIdxs(uint64 -> byte [] -> byte [])
  name: 'val findIdxs: uint64 -> byte [] -> byte [] -> uint64 list'
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_findIdxs_uint64____byte_______byte____
  commentId: M:B2R2.findIdxs(System.UInt64,System.Byte[],System.Byte[])
  fullName: 'val B2R2.ByteArray.findIdxs: uint64 -> byte [] -> byte [] -> uint64 list'
  nameWithType: 'val ByteArray.findIdxs: uint64 -> byte [] -> byte [] -> uint64 list'
- uid: B2R2.ByteArray.findIdxs*
  name: findIdxs
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_findIdxs_
  commentId: Overload:B2R2.ByteArray.findIdxs*
  isSpec: "True"
  fullName: B2R2.ByteArray.findIdxs
  nameWithType: ByteArray.findIdxs
- uid: B2R2.ByteArray.ofHexString(string)
  name: 'val ofHexString: string -> byte []'
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_ofHexString_string_
  commentId: M:B2R2.ofHexString(System.String)
  fullName: 'val B2R2.ByteArray.ofHexString: string -> byte []'
  nameWithType: 'val ByteArray.ofHexString: string -> byte []'
- uid: B2R2.ByteArray.ofHexString*
  name: ofHexString
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_ofHexString_
  commentId: Overload:B2R2.ByteArray.ofHexString*
  isSpec: "True"
  fullName: B2R2.ByteArray.ofHexString
  nameWithType: ByteArray.ofHexString
- uid: B2R2.ByteArray.toUInt32Arr(byte [])
  name: 'val toUInt32Arr: byte [] -> uint32 []'
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_toUInt32Arr_byte____
  commentId: M:B2R2.toUInt32Arr(System.Byte[])
  fullName: 'val B2R2.ByteArray.toUInt32Arr: byte [] -> uint32 []'
  nameWithType: 'val ByteArray.toUInt32Arr: byte [] -> uint32 []'
- uid: B2R2.ByteArray.toUInt32Arr*
  name: toUInt32Arr
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_toUInt32Arr_
  commentId: Overload:B2R2.ByteArray.toUInt32Arr*
  isSpec: "True"
  fullName: B2R2.ByteArray.toUInt32Arr
  nameWithType: ByteArray.toUInt32Arr
- uid: B2R2.ByteArray.tryFindIdx(uint64 -> byte [] -> byte [])
  name: 'val tryFindIdx: uint64 -> byte [] -> byte [] -> uint64 option'
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_tryFindIdx_uint64____byte_______byte____
  commentId: M:B2R2.tryFindIdx(System.UInt64,System.Byte[],System.Byte[])
  fullName: 'val B2R2.ByteArray.tryFindIdx: uint64 -> byte [] -> byte [] -> uint64 option'
  nameWithType: 'val ByteArray.tryFindIdx: uint64 -> byte [] -> byte [] -> uint64 option'
- uid: B2R2.ByteArray.tryFindIdx*
  name: tryFindIdx
  href: api/B2R2.ByteArray.html#B2R2_ByteArray_tryFindIdx_
  commentId: Overload:B2R2.ByteArray.tryFindIdx*
  isSpec: "True"
  fullName: B2R2.ByteArray.tryFindIdx
  nameWithType: ByteArray.tryFindIdx
- uid: B2R2.ConcurrentLRU`2
  name: ConcurrentLRU<'K, 'V>
  href: api/B2R2.ConcurrentLRU-2.html
  commentId: T:B2R2.ConcurrentLRU`2
  fullName: B2R2.ConcurrentLRU`2
  nameWithType: B2R2.ConcurrentLRU`2
- uid: B2R2.ConcurrentLRU`2.#ctor(int)
  name: "new: int -> ConcurrentLRU<'K,'V>"
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2__ctor_int_
  commentId: M:B2R2.ConcurrentLRU`2.#ctor(System.Int32)
  fullName: "new: int -> B2R2.ConcurrentLRU<'K,'V>"
  nameWithType: "new: int -> ConcurrentLRU<'K,'V>"
- uid: B2R2.ConcurrentLRU`2.#ctor*
  name: ( .ctor )
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2__ctor_
  commentId: Overload:B2R2.ConcurrentLRU`2.#ctor*
  isSpec: "True"
  fullName: B2R2.ConcurrentLRU
  nameWithType: ConcurrentLRU.( .ctor )
- uid: B2R2.ConcurrentLRU`2.Clear(unit)
  name: 'member Clear: unit -> unit'
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2_Clear_unit_
  commentId: M:B2R2.ConcurrentLRU`2.Clear
  fullName: 'member B2R2.ConcurrentLRU.Clear: unit -> unit'
  nameWithType: 'member ConcurrentLRU.Clear: unit -> unit'
- uid: B2R2.ConcurrentLRU`2.Clear*
  name: Clear
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2_Clear_
  commentId: Overload:B2R2.ConcurrentLRU`2.Clear*
  isSpec: "True"
  fullName: B2R2.ConcurrentLRU.Clear
  nameWithType: ConcurrentLRU.Clear
- uid: B2R2.ConcurrentLRU`2.Count(unit)
  name: 'property Count: int'
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2_Count_unit_
  commentId: P:B2R2.ConcurrentLRU`2.Count
  fullName: 'property B2R2.ConcurrentLRU.Count: int'
  nameWithType: 'property ConcurrentLRU.Count: int'
- uid: B2R2.ConcurrentLRU`2.Count*
  name: Count
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2_Count_
  commentId: Overload:B2R2.ConcurrentLRU`2.Count*
  isSpec: "True"
  fullName: B2R2.ConcurrentLRU.Count
  nameWithType: ConcurrentLRU.Count
- uid: B2R2.ConcurrentLRU`2.GetOrAdd('K -> 'K -> 'V)
  name: "member GetOrAdd: 'K -> 'K -> 'V -> 'V"
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2_GetOrAdd__K_____K_____V_
  commentId: M:B2R2.ConcurrentLRU`2.GetOrAdd(`0,Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  fullName: "member B2R2.ConcurrentLRU.GetOrAdd: 'K -> 'K -> 'V -> 'V"
  nameWithType: "member ConcurrentLRU.GetOrAdd: 'K -> 'K -> 'V -> 'V"
- uid: B2R2.ConcurrentLRU`2.GetOrAdd*
  name: GetOrAdd
  href: api/B2R2.ConcurrentLRU-2.html#B2R2_ConcurrentLRU_2_GetOrAdd_
  commentId: Overload:B2R2.ConcurrentLRU`2.GetOrAdd*
  isSpec: "True"
  fullName: B2R2.ConcurrentLRU.GetOrAdd
  nameWithType: ConcurrentLRU.GetOrAdd
- uid: B2R2.ConcurrentWeakReferenceTable`1
  name: ConcurrentWeakReferenceTable<'T>
  href: api/B2R2.ConcurrentWeakReferenceTable-1.html
  commentId: T:B2R2.ConcurrentWeakReferenceTable`1
  fullName: B2R2.ConcurrentWeakReferenceTable`1
  nameWithType: B2R2.ConcurrentWeakReferenceTable`1
- uid: B2R2.ConcurrentWeakReferenceTable`1.#ctor(unit)
  name: "new: unit -> ConcurrentWeakReferenceTable<'T>"
  href: api/B2R2.ConcurrentWeakReferenceTable-1.html#B2R2_ConcurrentWeakReferenceTable_1__ctor_unit_
  commentId: M:B2R2.ConcurrentWeakReferenceTable`1.#ctor
  fullName: "new: unit -> B2R2.ConcurrentWeakReferenceTable<'T>"
  nameWithType: "new: unit -> ConcurrentWeakReferenceTable<'T>"
- uid: B2R2.ConcurrentWeakReferenceTable`1.#ctor*
  name: ( .ctor )
  href: api/B2R2.ConcurrentWeakReferenceTable-1.html#B2R2_ConcurrentWeakReferenceTable_1__ctor_
  commentId: Overload:B2R2.ConcurrentWeakReferenceTable`1.#ctor*
  isSpec: "True"
  fullName: B2R2.ConcurrentWeakReferenceTable
  nameWithType: ConcurrentWeakReferenceTable.( .ctor )
- uid: B2R2.ConcurrentWeakReferenceTable`1.GetOrAdd('T)
  name: "member GetOrAdd: 'T -> 'T"
  href: api/B2R2.ConcurrentWeakReferenceTable-1.html#B2R2_ConcurrentWeakReferenceTable_1_GetOrAdd__T_
  commentId: M:B2R2.ConcurrentWeakReferenceTable`1.GetOrAdd(`0)
  fullName: "member B2R2.ConcurrentWeakReferenceTable.GetOrAdd: 'T -> 'T"
  nameWithType: "member ConcurrentWeakReferenceTable.GetOrAdd: 'T -> 'T"
- uid: B2R2.ConcurrentWeakReferenceTable`1.GetOrAdd*
  name: GetOrAdd
  href: api/B2R2.ConcurrentWeakReferenceTable-1.html#B2R2_ConcurrentWeakReferenceTable_1_GetOrAdd_
  commentId: Overload:B2R2.ConcurrentWeakReferenceTable`1.GetOrAdd*
  isSpec: "True"
  fullName: B2R2.ConcurrentWeakReferenceTable.GetOrAdd
  nameWithType: ConcurrentWeakReferenceTable.GetOrAdd
- uid: B2R2.ConcurrentWeakReferenceTable`1.GetOrApplyAndAdd('?88290 -> '?88290 -> 'T)
  name: "member GetOrApplyAndAdd: '?88290 -> '?88290 -> 'T -> 'T"
  href: api/B2R2.ConcurrentWeakReferenceTable-1.html#B2R2_ConcurrentWeakReferenceTable_1_GetOrApplyAndAdd___88290______88290_____T_
  commentId: M:B2R2.ConcurrentWeakReferenceTable`1.GetOrApplyAndAdd``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,`0})
  fullName: "member B2R2.ConcurrentWeakReferenceTable.GetOrApplyAndAdd: '?88290 -> '?88290 -> 'T -> 'T"
  nameWithType: "member ConcurrentWeakReferenceTable.GetOrApplyAndAdd: '?88290 -> '?88290 -> 'T -> 'T"
- uid: B2R2.ConcurrentWeakReferenceTable`1.GetOrApplyAndAdd*
  name: GetOrApplyAndAdd
  href: api/B2R2.ConcurrentWeakReferenceTable-1.html#B2R2_ConcurrentWeakReferenceTable_1_GetOrApplyAndAdd_
  commentId: Overload:B2R2.ConcurrentWeakReferenceTable`1.GetOrApplyAndAdd*
  isSpec: "True"
  fullName: B2R2.ConcurrentWeakReferenceTable.GetOrApplyAndAdd
  nameWithType: ConcurrentWeakReferenceTable.GetOrApplyAndAdd
- uid: B2R2.EmptyRegisterSet
  name: EmptyRegisterSet
  href: api/B2R2.EmptyRegisterSet.html
  commentId: T:B2R2.EmptyRegisterSet
  fullName: B2R2.EmptyRegisterSet
  nameWithType: B2R2.EmptyRegisterSet
- uid: B2R2.EmptyRegisterSet.#ctor(unit)
  name: 'new: unit -> EmptyRegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet__ctor_unit_
  commentId: M:B2R2.EmptyRegisterSet.#ctor
  fullName: 'new: unit -> B2R2.EmptyRegisterSet'
  nameWithType: 'new: unit -> EmptyRegisterSet'
- uid: B2R2.EmptyRegisterSet.#ctor*
  name: ( .ctor )
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet__ctor_
  commentId: Overload:B2R2.EmptyRegisterSet.#ctor*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet
  nameWithType: EmptyRegisterSet.( .ctor )
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Add(B2R2.RegisterID)
  name: 'override member Add: RegisterID -> RegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Add_B2R2_RegisterID_
  commentId: M:B2R2.EmptyRegisterSet.Add(System.Int32)
  fullName: 'override member B2R2.EmptyRegisterSet.Add: B2R2.RegisterID -> B2R2.RegisterSet'
  nameWithType: 'override member EmptyRegisterSet.Add: RegisterID -> RegisterSet'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Add*
  name: Add
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Add_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Add*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Add
  nameWithType: EmptyRegisterSet.Add
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.ArrSize(unit)
  name: 'override property ArrSize: int'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_ArrSize_unit_
  commentId: P:B2R2.EmptyRegisterSet.ArrSize
  fullName: 'override property B2R2.EmptyRegisterSet.ArrSize: int'
  nameWithType: 'override property EmptyRegisterSet.ArrSize: int'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.ArrSize*
  name: ArrSize
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_ArrSize_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.ArrSize*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.ArrSize
  nameWithType: EmptyRegisterSet.ArrSize
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.BitArray(unit)
  name: 'override property BitArray: uint64 []'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_BitArray_unit_
  commentId: P:B2R2.EmptyRegisterSet.BitArray
  fullName: 'override property B2R2.EmptyRegisterSet.BitArray: uint64 []'
  nameWithType: 'override property EmptyRegisterSet.BitArray: uint64 []'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.BitArray*
  name: BitArray
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_BitArray_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.BitArray*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.BitArray
  nameWithType: EmptyRegisterSet.BitArray
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Empty(unit)
  name: 'override property Empty: RegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Empty_unit_
  commentId: P:B2R2.EmptyRegisterSet.Empty
  fullName: 'override property B2R2.EmptyRegisterSet.Empty: B2R2.RegisterSet'
  nameWithType: 'override property EmptyRegisterSet.Empty: RegisterSet'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Empty*
  name: Empty
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Empty_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Empty*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Empty
  nameWithType: EmptyRegisterSet.Empty
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.EmptyArr(unit)
  name: 'override property EmptyArr: uint64 []'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_EmptyArr_unit_
  commentId: P:B2R2.EmptyRegisterSet.EmptyArr
  fullName: 'override property B2R2.EmptyRegisterSet.EmptyArr: uint64 []'
  nameWithType: 'override property EmptyRegisterSet.EmptyArr: uint64 []'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.EmptyArr*
  name: EmptyArr
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_EmptyArr_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.EmptyArr*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.EmptyArr
  nameWithType: EmptyRegisterSet.EmptyArr
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Exists(B2R2.RegisterID)
  name: 'override member Exists: RegisterID -> bool'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Exists_B2R2_RegisterID_
  commentId: M:B2R2.EmptyRegisterSet.Exists(System.Int32)
  fullName: 'override member B2R2.EmptyRegisterSet.Exists: B2R2.RegisterID -> bool'
  nameWithType: 'override member EmptyRegisterSet.Exists: RegisterID -> bool'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Exists*
  name: Exists
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Exists_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Exists*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Exists
  nameWithType: EmptyRegisterSet.Exists
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Intersect(B2R2.RegisterSet)
  name: 'override member Intersect: RegisterSet -> RegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Intersect_B2R2_RegisterSet_
  commentId: M:B2R2.EmptyRegisterSet.Intersect(B2R2.RegisterSet)
  fullName: 'override member B2R2.EmptyRegisterSet.Intersect: B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'override member EmptyRegisterSet.Intersect: RegisterSet -> RegisterSet'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Intersect*
  name: Intersect
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Intersect_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Intersect*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Intersect
  nameWithType: EmptyRegisterSet.Intersect
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.IsEmpty(unit)
  name: 'override member IsEmpty: unit -> bool'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_IsEmpty_unit_
  commentId: M:B2R2.EmptyRegisterSet.IsEmpty
  fullName: 'override member B2R2.EmptyRegisterSet.IsEmpty: unit -> bool'
  nameWithType: 'override member EmptyRegisterSet.IsEmpty: unit -> bool'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.IsEmpty*
  name: IsEmpty
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_IsEmpty_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.IsEmpty*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.IsEmpty
  nameWithType: EmptyRegisterSet.IsEmpty
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.New(uint64 [] -> Set<B2R2.RegisterID>)
  name: 'override member New: uint64 [] -> Set<RegisterID> -> RegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_New_uint64_______Set_B2R2_RegisterID__
  commentId: M:B2R2.EmptyRegisterSet.New(System.UInt64[],Microsoft.FSharp.Collections.FSharpSet{System.Int32})
  fullName: 'override member B2R2.EmptyRegisterSet.New: uint64 [] -> Set<B2R2.RegisterID> -> B2R2.RegisterSet'
  nameWithType: 'override member EmptyRegisterSet.New: uint64 [] -> Set<RegisterID> -> RegisterSet'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.New*
  name: New
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_New_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.New*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.New
  nameWithType: EmptyRegisterSet.New
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Project(B2R2.RegisterID)
  name: 'override member Project: RegisterID -> int'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Project_B2R2_RegisterID_
  commentId: M:B2R2.EmptyRegisterSet.Project(System.Int32)
  fullName: 'override member B2R2.EmptyRegisterSet.Project: B2R2.RegisterID -> int'
  nameWithType: 'override member EmptyRegisterSet.Project: RegisterID -> int'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Project*
  name: Project
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Project_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Project*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Project
  nameWithType: EmptyRegisterSet.Project
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Remove(B2R2.RegisterID)
  name: 'override member Remove: RegisterID -> RegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Remove_B2R2_RegisterID_
  commentId: M:B2R2.EmptyRegisterSet.Remove(System.Int32)
  fullName: 'override member B2R2.EmptyRegisterSet.Remove: B2R2.RegisterID -> B2R2.RegisterSet'
  nameWithType: 'override member EmptyRegisterSet.Remove: RegisterID -> RegisterSet'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Remove*
  name: Remove
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Remove_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Remove*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Remove
  nameWithType: EmptyRegisterSet.Remove
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.S(unit)
  name: 'override property S: Set<RegisterID>'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_S_unit_
  commentId: P:B2R2.EmptyRegisterSet.S
  fullName: 'override property B2R2.EmptyRegisterSet.S: Set<B2R2.RegisterID>'
  nameWithType: 'override property EmptyRegisterSet.S: Set<RegisterID>'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.S*
  name: S
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_S_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.S*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.S
  nameWithType: EmptyRegisterSet.S
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Tag(unit)
  name: 'override property Tag: RegisterSetTag'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Tag_unit_
  commentId: P:B2R2.EmptyRegisterSet.Tag
  fullName: 'override property B2R2.EmptyRegisterSet.Tag: B2R2.RegisterSetTag'
  nameWithType: 'override property EmptyRegisterSet.Tag: RegisterSetTag'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Tag*
  name: Tag
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Tag_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Tag*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Tag
  nameWithType: EmptyRegisterSet.Tag
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Union(B2R2.RegisterSet)
  name: 'override member Union: RegisterSet -> RegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Union_B2R2_RegisterSet_
  commentId: M:B2R2.EmptyRegisterSet.Union(B2R2.RegisterSet)
  fullName: 'override member B2R2.EmptyRegisterSet.Union: B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'override member EmptyRegisterSet.Union: RegisterSet -> RegisterSet'
- uid: B2R2.EmptyRegisterSet.B2R2.RegisterSet.Union*
  name: Union
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_B2R2_RegisterSet_Union_
  commentId: Overload:B2R2.EmptyRegisterSet.B2R2.RegisterSet.Union*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Union
  nameWithType: EmptyRegisterSet.Union
- uid: B2R2.EmptyRegisterSet.Instance(unit)
  name: 'static property Instance: RegisterSet'
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_Instance_unit_
  commentId: P:B2R2.EmptyRegisterSet.Instance
  fullName: 'static property B2R2.EmptyRegisterSet.Instance: B2R2.RegisterSet'
  nameWithType: 'static property EmptyRegisterSet.Instance: RegisterSet'
- uid: B2R2.EmptyRegisterSet.Instance*
  name: Instance
  href: api/B2R2.EmptyRegisterSet.html#B2R2_EmptyRegisterSet_Instance_
  commentId: Overload:B2R2.EmptyRegisterSet.Instance*
  isSpec: "True"
  fullName: B2R2.EmptyRegisterSet.Instance
  nameWithType: EmptyRegisterSet.Instance
- uid: B2R2.Endian
  name: Endian
  href: api/B2R2.Endian.html
  commentId: T:B2R2.Endian
  fullName: B2R2.Endian
  nameWithType: B2R2.Endian
- uid: B2R2.Endian.Big
  name: 'val Big: Endian'
  href: api/B2R2.Endian.html#B2R2_Endian_Big
  commentId: P:B2R2.Endian.Big
  fullName: 'val B2R2.Endian.Big: B2R2.Endian'
  nameWithType: 'val Endian.Big: Endian'
- uid: B2R2.Endian.Little
  name: 'val Little: Endian'
  href: api/B2R2.Endian.html#B2R2_Endian_Little
  commentId: P:B2R2.Endian.Little
  fullName: 'val B2R2.Endian.Little: B2R2.Endian'
  nameWithType: 'val Endian.Little: Endian'
- uid: B2R2.EndianModule
  name: Endian (mod)
  href: api/B2R2.EndianModule.html
  commentId: T:B2R2.EndianModule
  fullName: B2R2.EndianModule
  nameWithType: B2R2.EndianModule
- uid: B2R2.EndianModule.ofString(string)
  name: 'val ofString: string -> Endian'
  href: api/B2R2.EndianModule.html#B2R2_EndianModule_ofString_string_
  commentId: M:B2R2.ofString(System.String)
  fullName: 'val B2R2.EndianModule.ofString: string -> B2R2.Endian'
  nameWithType: 'val Endian.ofString: string -> Endian'
- uid: B2R2.EndianModule.ofString*
  name: ofString
  href: api/B2R2.EndianModule.html#B2R2_EndianModule_ofString_
  commentId: Overload:B2R2.EndianModule.ofString*
  isSpec: "True"
  fullName: B2R2.EndianModule.ofString
  nameWithType: Endian.ofString
- uid: B2R2.EndianModule.toString(B2R2.Endian)
  name: 'val toString: Endian -> string'
  href: api/B2R2.EndianModule.html#B2R2_EndianModule_toString_B2R2_Endian_
  commentId: M:B2R2.toString(B2R2.Endian)
  fullName: 'val B2R2.EndianModule.toString: B2R2.Endian -> string'
  nameWithType: 'val Endian.toString: Endian -> string'
- uid: B2R2.EndianModule.toString*
  name: toString
  href: api/B2R2.EndianModule.html#B2R2_EndianModule_toString_
  commentId: Overload:B2R2.EndianModule.toString*
  isSpec: "True"
  fullName: B2R2.EndianModule.toString
  nameWithType: Endian.toString
- uid: B2R2.FileFormat
  name: FileFormat
  href: api/B2R2.FileFormat.html
  commentId: T:B2R2.FileFormat
  fullName: B2R2.FileFormat
  nameWithType: B2R2.FileFormat
- uid: B2R2.FileFormat.ELFBinary
  name: 'val ELFBinary: FileFormat'
  href: api/B2R2.FileFormat.html#B2R2_FileFormat_ELFBinary
  commentId: P:B2R2.FileFormat.ELFBinary
  fullName: 'val B2R2.FileFormat.ELFBinary: B2R2.FileFormat'
  nameWithType: 'val FileFormat.ELFBinary: FileFormat'
- uid: B2R2.FileFormat.MachBinary
  name: 'val MachBinary: FileFormat'
  href: api/B2R2.FileFormat.html#B2R2_FileFormat_MachBinary
  commentId: P:B2R2.FileFormat.MachBinary
  fullName: 'val B2R2.FileFormat.MachBinary: B2R2.FileFormat'
  nameWithType: 'val FileFormat.MachBinary: FileFormat'
- uid: B2R2.FileFormat.PEBinary
  name: 'val PEBinary: FileFormat'
  href: api/B2R2.FileFormat.html#B2R2_FileFormat_PEBinary
  commentId: P:B2R2.FileFormat.PEBinary
  fullName: 'val B2R2.FileFormat.PEBinary: B2R2.FileFormat'
  nameWithType: 'val FileFormat.PEBinary: FileFormat'
- uid: B2R2.FileFormat.RawBinary
  name: 'val RawBinary: FileFormat'
  href: api/B2R2.FileFormat.html#B2R2_FileFormat_RawBinary
  commentId: P:B2R2.FileFormat.RawBinary
  fullName: 'val B2R2.FileFormat.RawBinary: B2R2.FileFormat'
  nameWithType: 'val FileFormat.RawBinary: FileFormat'
- uid: B2R2.FileFormatModule
  name: FileFormat (mod)
  href: api/B2R2.FileFormatModule.html
  commentId: T:B2R2.FileFormatModule
  fullName: B2R2.FileFormatModule
  nameWithType: B2R2.FileFormatModule
- uid: B2R2.FileFormatModule.isELF(B2R2.FileFormat)
  name: 'val isELF: FileFormat -> bool'
  href: api/B2R2.FileFormatModule.html#B2R2_FileFormatModule_isELF_B2R2_FileFormat_
  commentId: M:B2R2.isELF(B2R2.FileFormat)
  fullName: 'val B2R2.FileFormatModule.isELF: B2R2.FileFormat -> bool'
  nameWithType: 'val FileFormat.isELF: FileFormat -> bool'
- uid: B2R2.FileFormatModule.isELF*
  name: isELF
  href: api/B2R2.FileFormatModule.html#B2R2_FileFormatModule_isELF_
  commentId: Overload:B2R2.FileFormatModule.isELF*
  isSpec: "True"
  fullName: B2R2.FileFormatModule.isELF
  nameWithType: FileFormat.isELF
- uid: B2R2.FileFormatModule.ofString(string)
  name: 'val ofString: string -> FileFormat'
  href: api/B2R2.FileFormatModule.html#B2R2_FileFormatModule_ofString_string_
  commentId: M:B2R2.ofString(System.String)
  fullName: 'val B2R2.FileFormatModule.ofString: string -> B2R2.FileFormat'
  nameWithType: 'val FileFormat.ofString: string -> FileFormat'
- uid: B2R2.FileFormatModule.ofString*
  name: ofString
  href: api/B2R2.FileFormatModule.html#B2R2_FileFormatModule_ofString_
  commentId: Overload:B2R2.FileFormatModule.ofString*
  isSpec: "True"
  fullName: B2R2.FileFormatModule.ofString
  nameWithType: FileFormat.ofString
- uid: B2R2.FileFormatModule.toString(B2R2.FileFormat)
  name: 'val toString: FileFormat -> string'
  href: api/B2R2.FileFormatModule.html#B2R2_FileFormatModule_toString_B2R2_FileFormat_
  commentId: M:B2R2.toString(B2R2.FileFormat)
  fullName: 'val B2R2.FileFormatModule.toString: B2R2.FileFormat -> string'
  nameWithType: 'val FileFormat.toString: FileFormat -> string'
- uid: B2R2.FileFormatModule.toString*
  name: toString
  href: api/B2R2.FileFormatModule.html#B2R2_FileFormatModule_toString_
  commentId: Overload:B2R2.FileFormatModule.toString*
  isSpec: "True"
  fullName: B2R2.FileFormatModule.toString
  nameWithType: FileFormat.toString
- uid: B2R2.FrontEnd
  name: B2R2.FrontEnd
  href: api/B2R2.FrontEnd.html
  commentId: N:B2R2.FrontEnd
  fullName: B2R2.FrontEnd
  nameWithType: B2R2.FrontEnd
- uid: B2R2.FrontEnd.BinHandler
  name: BinHandler (rec)
  href: api/B2R2.FrontEnd.BinHandler.html
  commentId: T:B2R2.FrontEnd.BinHandler
  fullName: B2R2.FrontEnd.BinHandler
  nameWithType: B2R2.FrontEnd.BinHandler
- uid: B2R2.FrontEnd.BinHandler.BinReader
  name: 'val BinReader: BinReader'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_BinReader
  commentId: P:B2R2.FrontEnd.BinHandler.BinReader
  fullName: 'val B2R2.FrontEnd.BinHandler.BinReader: B2R2.BinReader'
  nameWithType: 'val BinHandler.BinReader: BinReader'
- uid: B2R2.FrontEnd.BinHandler.CreateLiftBBlockTask(B2R2.FrontEnd.BinHandler * B2R2.Addr * bool * B2R2.Addr byref)
  name: 'static member CreateLiftBBlockTask: BinHandler * Addr * bool * Addr byref -> Task<Stmt [] * bool>'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_CreateLiftBBlockTask_B2R2_FrontEnd_BinHandler___B2R2_Addr___bool___B2R2_Addr_byref_
  commentId: M:B2R2.FrontEnd.BinHandler.CreateLiftBBlockTask(B2R2.FrontEnd.BinHandler,System.UInt64,System.Boolean,System.UInt64@)
  fullName: 'static member B2R2.FrontEnd.BinHandler.CreateLiftBBlockTask: B2R2.FrontEnd.BinHandler * B2R2.Addr * bool * B2R2.Addr byref -> System.Threading.Tasks.Task<B2R2.BinIR.LowUIR.Stmt [] * bool>'
  nameWithType: 'static member BinHandler.CreateLiftBBlockTask: BinHandler * Addr * bool * Addr byref -> Task<Stmt [] * bool>'
- uid: B2R2.FrontEnd.BinHandler.CreateLiftBBlockTask*
  name: CreateLiftBBlockTask
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_CreateLiftBBlockTask_
  commentId: Overload:B2R2.FrontEnd.BinHandler.CreateLiftBBlockTask*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.CreateLiftBBlockTask
  nameWithType: BinHandler.CreateLiftBBlockTask
- uid: B2R2.FrontEnd.BinHandler.DisasmBBlock(B2R2.FrontEnd.BinHandler -> bool -> bool -> B2R2.Addr)
  name: 'static member DisasmBBlock: BinHandler -> bool -> bool -> Addr -> Result<string * Addr,string * Addr>'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_DisasmBBlock_B2R2_FrontEnd_BinHandler____bool____bool____B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.DisasmBBlock(B2R2.FrontEnd.BinHandler,System.Boolean,System.Boolean,System.UInt64)
  fullName: 'static member B2R2.FrontEnd.BinHandler.DisasmBBlock: B2R2.FrontEnd.BinHandler -> bool -> bool -> B2R2.Addr -> Result<string * B2R2.Addr,string * B2R2.Addr>'
  nameWithType: 'static member BinHandler.DisasmBBlock: BinHandler -> bool -> bool -> Addr -> Result<string * Addr,string * Addr>'
- uid: B2R2.FrontEnd.BinHandler.DisasmBBlock*
  name: DisasmBBlock
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_DisasmBBlock_
  commentId: Overload:B2R2.FrontEnd.BinHandler.DisasmBBlock*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.DisasmBBlock
  nameWithType: BinHandler.DisasmBBlock
- uid: B2R2.FrontEnd.BinHandler.DisasmInstr(B2R2.FrontEnd.BinHandler -> bool -> bool -> B2R2.FrontEnd.Instruction)
  name: 'static member DisasmInstr: BinHandler -> bool -> bool -> Instruction -> string'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_DisasmInstr_B2R2_FrontEnd_BinHandler____bool____bool____B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.FrontEnd.BinHandler.DisasmInstr(B2R2.FrontEnd.BinHandler,System.Boolean,System.Boolean,B2R2.FrontEnd.Instruction)
  fullName: 'static member B2R2.FrontEnd.BinHandler.DisasmInstr: B2R2.FrontEnd.BinHandler -> bool -> bool -> B2R2.FrontEnd.Instruction -> string'
  nameWithType: 'static member BinHandler.DisasmInstr: BinHandler -> bool -> bool -> Instruction -> string'
- uid: B2R2.FrontEnd.BinHandler.DisasmInstr*
  name: DisasmInstr
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_DisasmInstr_
  commentId: Overload:B2R2.FrontEnd.BinHandler.DisasmInstr*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.DisasmInstr
  nameWithType: BinHandler.DisasmInstr
- uid: B2R2.FrontEnd.BinHandler.DisasmInstrSimple(B2R2.FrontEnd.Instruction)
  name: 'static member DisasmInstrSimple: Instruction -> string'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_DisasmInstrSimple_B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.FrontEnd.BinHandler.DisasmInstrSimple(B2R2.FrontEnd.Instruction)
  fullName: 'static member B2R2.FrontEnd.BinHandler.DisasmInstrSimple: B2R2.FrontEnd.Instruction -> string'
  nameWithType: 'static member BinHandler.DisasmInstrSimple: Instruction -> string'
- uid: B2R2.FrontEnd.BinHandler.DisasmInstrSimple*
  name: DisasmInstrSimple
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_DisasmInstrSimple_
  commentId: Overload:B2R2.FrontEnd.BinHandler.DisasmInstrSimple*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.DisasmInstrSimple
  nameWithType: BinHandler.DisasmInstrSimple
- uid: B2R2.FrontEnd.BinHandler.FileInfo
  name: 'val FileInfo: FileInfo'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_FileInfo
  commentId: P:B2R2.FrontEnd.BinHandler.FileInfo
  fullName: 'val B2R2.FrontEnd.BinHandler.FileInfo: B2R2.BinFile.FileInfo'
  nameWithType: 'val BinHandler.FileInfo: FileInfo'
- uid: B2R2.FrontEnd.BinHandler.Init(B2R2.ISA * B2R2.ArchOperationMode * B2R2.FileFormat * B2R2.Addr * byte [])
  name: 'static member Init: ISA * ArchOperationMode * FileFormat * Addr * byte [] -> BinHandler'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Init_B2R2_ISA___B2R2_ArchOperationMode___B2R2_FileFormat___B2R2_Addr___byte____
  commentId: M:B2R2.FrontEnd.BinHandler.Init(B2R2.ISA,B2R2.ArchOperationMode,B2R2.FileFormat,System.UInt64,System.Byte[])
  fullName: 'static member B2R2.FrontEnd.BinHandler.Init: B2R2.ISA * B2R2.ArchOperationMode * B2R2.FileFormat * B2R2.Addr * byte [] -> B2R2.FrontEnd.BinHandler'
  nameWithType: 'static member BinHandler.Init: ISA * ArchOperationMode * FileFormat * Addr * byte [] -> BinHandler'
- uid: B2R2.FrontEnd.BinHandler.Init(B2R2.ISA * B2R2.ArchOperationMode * B2R2.FileFormat * B2R2.Addr * string)
  name: 'static member Init: ISA * ArchOperationMode * FileFormat * Addr * string -> BinHandler'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Init_B2R2_ISA___B2R2_ArchOperationMode___B2R2_FileFormat___B2R2_Addr___string_
  commentId: M:B2R2.FrontEnd.BinHandler.Init(B2R2.ISA,B2R2.ArchOperationMode,B2R2.FileFormat,System.UInt64,System.String)
  fullName: 'static member B2R2.FrontEnd.BinHandler.Init: B2R2.ISA * B2R2.ArchOperationMode * B2R2.FileFormat * B2R2.Addr * string -> B2R2.FrontEnd.BinHandler'
  nameWithType: 'static member BinHandler.Init: ISA * ArchOperationMode * FileFormat * Addr * string -> BinHandler'
- uid: B2R2.FrontEnd.BinHandler.Init(B2R2.ISA * B2R2.ArchOperationMode * B2R2.FileFormat)
  name: 'static member Init: ISA * ArchOperationMode * FileFormat -> BinHandler'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Init_B2R2_ISA___B2R2_ArchOperationMode___B2R2_FileFormat_
  commentId: M:B2R2.FrontEnd.BinHandler.Init(B2R2.ISA,B2R2.ArchOperationMode,B2R2.FileFormat)
  fullName: 'static member B2R2.FrontEnd.BinHandler.Init: B2R2.ISA * B2R2.ArchOperationMode * B2R2.FileFormat -> B2R2.FrontEnd.BinHandler'
  nameWithType: 'static member BinHandler.Init: ISA * ArchOperationMode * FileFormat -> BinHandler'
- uid: B2R2.FrontEnd.BinHandler.Init(B2R2.ISA * byte [])
  name: 'static member Init: ISA * byte [] -> BinHandler'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Init_B2R2_ISA___byte____
  commentId: M:B2R2.FrontEnd.BinHandler.Init(B2R2.ISA,System.Byte[])
  fullName: 'static member B2R2.FrontEnd.BinHandler.Init: B2R2.ISA * byte [] -> B2R2.FrontEnd.BinHandler'
  nameWithType: 'static member BinHandler.Init: ISA * byte [] -> BinHandler'
- uid: B2R2.FrontEnd.BinHandler.Init(B2R2.ISA)
  name: 'static member Init: ISA -> BinHandler'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Init_B2R2_ISA_
  commentId: M:B2R2.FrontEnd.BinHandler.Init(B2R2.ISA)
  fullName: 'static member B2R2.FrontEnd.BinHandler.Init: B2R2.ISA -> B2R2.FrontEnd.BinHandler'
  nameWithType: 'static member BinHandler.Init: ISA -> BinHandler'
- uid: B2R2.FrontEnd.BinHandler.Init*
  name: Init
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Init_
  commentId: Overload:B2R2.FrontEnd.BinHandler.Init*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.Init
  nameWithType: BinHandler.Init
- uid: B2R2.FrontEnd.BinHandler.ISA
  name: 'val ISA: ISA'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ISA
  commentId: P:B2R2.FrontEnd.BinHandler.ISA
  fullName: 'val B2R2.FrontEnd.BinHandler.ISA: B2R2.ISA'
  nameWithType: 'val BinHandler.ISA: ISA'
- uid: B2R2.FrontEnd.BinHandler.LiftBBlock(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: 'static member LiftBBlock: BinHandler -> Addr -> Result<Stmt [] * Addr,Stmt [] * Addr>'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_LiftBBlock_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.LiftBBlock(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'static member B2R2.FrontEnd.BinHandler.LiftBBlock: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> Result<B2R2.BinIR.LowUIR.Stmt [] * B2R2.Addr,B2R2.BinIR.LowUIR.Stmt [] * B2R2.Addr>'
  nameWithType: 'static member BinHandler.LiftBBlock: BinHandler -> Addr -> Result<Stmt [] * Addr,Stmt [] * Addr>'
- uid: B2R2.FrontEnd.BinHandler.LiftBBlock*
  name: LiftBBlock
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_LiftBBlock_
  commentId: Overload:B2R2.FrontEnd.BinHandler.LiftBBlock*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.LiftBBlock
  nameWithType: BinHandler.LiftBBlock
- uid: B2R2.FrontEnd.BinHandler.LiftInstr(B2R2.FrontEnd.BinHandler -> B2R2.FrontEnd.Instruction)
  name: 'static member LiftInstr: BinHandler -> Instruction -> Stmt []'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_LiftInstr_B2R2_FrontEnd_BinHandler____B2R2_FrontEnd_Instruction_
  commentId: M:B2R2.FrontEnd.BinHandler.LiftInstr(B2R2.FrontEnd.BinHandler,B2R2.FrontEnd.Instruction)
  fullName: 'static member B2R2.FrontEnd.BinHandler.LiftInstr: B2R2.FrontEnd.BinHandler -> B2R2.FrontEnd.Instruction -> B2R2.BinIR.LowUIR.Stmt []'
  nameWithType: 'static member BinHandler.LiftInstr: BinHandler -> Instruction -> Stmt []'
- uid: B2R2.FrontEnd.BinHandler.LiftInstr*
  name: LiftInstr
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_LiftInstr_
  commentId: Overload:B2R2.FrontEnd.BinHandler.LiftInstr*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.LiftInstr
  nameWithType: BinHandler.LiftInstr
- uid: B2R2.FrontEnd.BinHandler.LiftIRBBlock(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: "static member LiftIRBBlock: BinHandler -> Addr -> Result<Instruction * Stmt [] list * Addr,'a list>"
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_LiftIRBBlock_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.LiftIRBBlock``1(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: "static member B2R2.FrontEnd.BinHandler.LiftIRBBlock: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> Result<B2R2.FrontEnd.Instruction * B2R2.BinIR.LowUIR.Stmt [] list * B2R2.Addr,'a list>"
  nameWithType: "static member BinHandler.LiftIRBBlock: BinHandler -> Addr -> Result<Instruction * Stmt [] list * Addr,'a list>"
- uid: B2R2.FrontEnd.BinHandler.LiftIRBBlock*
  name: LiftIRBBlock
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_LiftIRBBlock_
  commentId: Overload:B2R2.FrontEnd.BinHandler.LiftIRBBlock*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.LiftIRBBlock
  nameWithType: BinHandler.LiftIRBBlock
- uid: B2R2.FrontEnd.BinHandler.Optimize(B2R2.BinIR.LowUIR.Stmt [])
  name: 'static member Optimize: Stmt [] -> Stmt []'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Optimize_B2R2_BinIR_LowUIR_Stmt____
  commentId: M:B2R2.FrontEnd.BinHandler.Optimize(B2R2.BinIR.LowUIR.Stmt[])
  fullName: 'static member B2R2.FrontEnd.BinHandler.Optimize: B2R2.BinIR.LowUIR.Stmt [] -> B2R2.BinIR.LowUIR.Stmt []'
  nameWithType: 'static member BinHandler.Optimize: Stmt [] -> Stmt []'
- uid: B2R2.FrontEnd.BinHandler.Optimize*
  name: Optimize
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Optimize_
  commentId: Overload:B2R2.FrontEnd.BinHandler.Optimize*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.Optimize
  nameWithType: BinHandler.Optimize
- uid: B2R2.FrontEnd.BinHandler.ParseBBlock(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: 'static member ParseBBlock: BinHandler -> Addr -> Result<Instruction list,Instruction list>'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ParseBBlock_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.ParseBBlock(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'static member B2R2.FrontEnd.BinHandler.ParseBBlock: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> Result<B2R2.FrontEnd.Instruction list,B2R2.FrontEnd.Instruction list>'
  nameWithType: 'static member BinHandler.ParseBBlock: BinHandler -> Addr -> Result<Instruction list,Instruction list>'
- uid: B2R2.FrontEnd.BinHandler.ParseBBlock*
  name: ParseBBlock
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ParseBBlock_
  commentId: Overload:B2R2.FrontEnd.BinHandler.ParseBBlock*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.ParseBBlock
  nameWithType: BinHandler.ParseBBlock
- uid: B2R2.FrontEnd.BinHandler.ParseBBlockWithAddr(B2R2.FrontEnd.BinHandler * B2R2.Addr)
  name: 'static member ParseBBlockWithAddr: BinHandler * Addr -> Result<Instruction list,Instruction list> * Addr'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ParseBBlockWithAddr_B2R2_FrontEnd_BinHandler___B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.ParseBBlockWithAddr(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'static member B2R2.FrontEnd.BinHandler.ParseBBlockWithAddr: B2R2.FrontEnd.BinHandler * B2R2.Addr -> Result<B2R2.FrontEnd.Instruction list,B2R2.FrontEnd.Instruction list> * B2R2.Addr'
  nameWithType: 'static member BinHandler.ParseBBlockWithAddr: BinHandler * Addr -> Result<Instruction list,Instruction list> * Addr'
- uid: B2R2.FrontEnd.BinHandler.ParseBBlockWithAddr*
  name: ParseBBlockWithAddr
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ParseBBlockWithAddr_
  commentId: Overload:B2R2.FrontEnd.BinHandler.ParseBBlockWithAddr*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.ParseBBlockWithAddr
  nameWithType: BinHandler.ParseBBlockWithAddr
- uid: B2R2.FrontEnd.BinHandler.ParseInstr(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: 'static member ParseInstr: BinHandler -> Addr -> Instruction'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ParseInstr_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.ParseInstr(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'static member B2R2.FrontEnd.BinHandler.ParseInstr: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> B2R2.FrontEnd.Instruction'
  nameWithType: 'static member BinHandler.ParseInstr: BinHandler -> Addr -> Instruction'
- uid: B2R2.FrontEnd.BinHandler.ParseInstr*
  name: ParseInstr
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ParseInstr_
  commentId: Overload:B2R2.FrontEnd.BinHandler.ParseInstr*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.ParseInstr
  nameWithType: BinHandler.ParseInstr
- uid: B2R2.FrontEnd.BinHandler.Parser
  name: 'val Parser: Parser'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_Parser
  commentId: P:B2R2.FrontEnd.BinHandler.Parser
  fullName: 'val B2R2.FrontEnd.BinHandler.Parser: B2R2.FrontEnd.Parser'
  nameWithType: 'val BinHandler.Parser: Parser'
- uid: B2R2.FrontEnd.BinHandler.ParsingContext
  name: 'val ParsingContext: ParsingContext'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ParsingContext
  commentId: P:B2R2.FrontEnd.BinHandler.ParsingContext
  fullName: 'val B2R2.FrontEnd.BinHandler.ParsingContext: B2R2.FrontEnd.ParsingContext'
  nameWithType: 'val BinHandler.ParsingContext: ParsingContext'
- uid: B2R2.FrontEnd.BinHandler.ReadASCII(B2R2.Addr)
  name: 'member ReadASCII: Addr -> string'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadASCII_B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadASCII(System.UInt64)
  fullName: 'member B2R2.FrontEnd.BinHandler.ReadASCII: B2R2.Addr -> string'
  nameWithType: 'member BinHandler.ReadASCII: Addr -> string'
- uid: B2R2.FrontEnd.BinHandler.ReadASCII(B2R2.FrontEnd.BinHandler * B2R2.Addr)
  name: 'static member ReadASCII: BinHandler * Addr -> string'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadASCII_B2R2_FrontEnd_BinHandler___B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadASCII(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'static member B2R2.FrontEnd.BinHandler.ReadASCII: B2R2.FrontEnd.BinHandler * B2R2.Addr -> string'
  nameWithType: 'static member BinHandler.ReadASCII: BinHandler * Addr -> string'
- uid: B2R2.FrontEnd.BinHandler.ReadASCII*
  name: ReadASCII
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadASCII_
  commentId: Overload:B2R2.FrontEnd.BinHandler.ReadASCII*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.ReadASCII
  nameWithType: BinHandler.ReadASCII
- uid: B2R2.FrontEnd.BinHandler.ReadBytes(B2R2.Addr * int)
  name: 'member ReadBytes: Addr * int -> byte []'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadBytes_B2R2_Addr___int_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadBytes(System.UInt64,System.Int32)
  fullName: 'member B2R2.FrontEnd.BinHandler.ReadBytes: B2R2.Addr * int -> byte []'
  nameWithType: 'member BinHandler.ReadBytes: Addr * int -> byte []'
- uid: B2R2.FrontEnd.BinHandler.ReadBytes(B2R2.FrontEnd.BinHandler * B2R2.Addr * int)
  name: 'static member ReadBytes: BinHandler * Addr * int -> byte []'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadBytes_B2R2_FrontEnd_BinHandler___B2R2_Addr___int_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadBytes(B2R2.FrontEnd.BinHandler,System.UInt64,System.Int32)
  fullName: 'static member B2R2.FrontEnd.BinHandler.ReadBytes: B2R2.FrontEnd.BinHandler * B2R2.Addr * int -> byte []'
  nameWithType: 'static member BinHandler.ReadBytes: BinHandler * Addr * int -> byte []'
- uid: B2R2.FrontEnd.BinHandler.ReadBytes*
  name: ReadBytes
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadBytes_
  commentId: Overload:B2R2.FrontEnd.BinHandler.ReadBytes*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.ReadBytes
  nameWithType: BinHandler.ReadBytes
- uid: B2R2.FrontEnd.BinHandler.ReadInt(B2R2.Addr * int)
  name: 'member ReadInt: Addr * int -> int64'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadInt_B2R2_Addr___int_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadInt(System.UInt64,System.Int32)
  fullName: 'member B2R2.FrontEnd.BinHandler.ReadInt: B2R2.Addr * int -> int64'
  nameWithType: 'member BinHandler.ReadInt: Addr * int -> int64'
- uid: B2R2.FrontEnd.BinHandler.ReadInt(B2R2.FrontEnd.BinHandler * B2R2.Addr * int)
  name: 'static member ReadInt: BinHandler * Addr * int -> int64'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadInt_B2R2_FrontEnd_BinHandler___B2R2_Addr___int_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadInt(B2R2.FrontEnd.BinHandler,System.UInt64,System.Int32)
  fullName: 'static member B2R2.FrontEnd.BinHandler.ReadInt: B2R2.FrontEnd.BinHandler * B2R2.Addr * int -> int64'
  nameWithType: 'static member BinHandler.ReadInt: BinHandler * Addr * int -> int64'
- uid: B2R2.FrontEnd.BinHandler.ReadInt*
  name: ReadInt
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadInt_
  commentId: Overload:B2R2.FrontEnd.BinHandler.ReadInt*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.ReadInt
  nameWithType: BinHandler.ReadInt
- uid: B2R2.FrontEnd.BinHandler.ReadUInt(B2R2.Addr * int)
  name: 'member ReadUInt: Addr * int -> uint64'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadUInt_B2R2_Addr___int_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadUInt(System.UInt64,System.Int32)
  fullName: 'member B2R2.FrontEnd.BinHandler.ReadUInt: B2R2.Addr * int -> uint64'
  nameWithType: 'member BinHandler.ReadUInt: Addr * int -> uint64'
- uid: B2R2.FrontEnd.BinHandler.ReadUInt(B2R2.FrontEnd.BinHandler * B2R2.Addr * int)
  name: 'static member ReadUInt: BinHandler * Addr * int -> uint64'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadUInt_B2R2_FrontEnd_BinHandler___B2R2_Addr___int_
  commentId: M:B2R2.FrontEnd.BinHandler.ReadUInt(B2R2.FrontEnd.BinHandler,System.UInt64,System.Int32)
  fullName: 'static member B2R2.FrontEnd.BinHandler.ReadUInt: B2R2.FrontEnd.BinHandler * B2R2.Addr * int -> uint64'
  nameWithType: 'static member BinHandler.ReadUInt: BinHandler * Addr * int -> uint64'
- uid: B2R2.FrontEnd.BinHandler.ReadUInt*
  name: ReadUInt
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_ReadUInt_
  commentId: Overload:B2R2.FrontEnd.BinHandler.ReadUInt*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.ReadUInt
  nameWithType: BinHandler.ReadUInt
- uid: B2R2.FrontEnd.BinHandler.TranslationContext
  name: 'val TranslationContext: TranslationContext'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_TranslationContext
  commentId: P:B2R2.FrontEnd.BinHandler.TranslationContext
  fullName: 'val B2R2.FrontEnd.BinHandler.TranslationContext: B2R2.FrontEnd.TranslationContext'
  nameWithType: 'val BinHandler.TranslationContext: TranslationContext'
- uid: B2R2.FrontEnd.BinHandler.TryParseInstr(B2R2.FrontEnd.BinHandler -> B2R2.Addr)
  name: 'static member TryParseInstr: BinHandler -> Addr -> Instruction option'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_TryParseInstr_B2R2_FrontEnd_BinHandler____B2R2_Addr_
  commentId: M:B2R2.FrontEnd.BinHandler.TryParseInstr(B2R2.FrontEnd.BinHandler,System.UInt64)
  fullName: 'static member B2R2.FrontEnd.BinHandler.TryParseInstr: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> B2R2.FrontEnd.Instruction option'
  nameWithType: 'static member BinHandler.TryParseInstr: BinHandler -> Addr -> Instruction option'
- uid: B2R2.FrontEnd.BinHandler.TryParseInstr*
  name: TryParseInstr
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_TryParseInstr_
  commentId: Overload:B2R2.FrontEnd.BinHandler.TryParseInstr*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.TryParseInstr
  nameWithType: BinHandler.TryParseInstr
- uid: B2R2.FrontEnd.BinHandler.UpdateCode(B2R2.FrontEnd.BinHandler -> B2R2.Addr -> byte [])
  name: 'static member UpdateCode: BinHandler -> Addr -> byte [] -> BinHandler'
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_UpdateCode_B2R2_FrontEnd_BinHandler____B2R2_Addr____byte____
  commentId: M:B2R2.FrontEnd.BinHandler.UpdateCode(B2R2.FrontEnd.BinHandler,System.UInt64,System.Byte[])
  fullName: 'static member B2R2.FrontEnd.BinHandler.UpdateCode: B2R2.FrontEnd.BinHandler -> B2R2.Addr -> byte [] -> B2R2.FrontEnd.BinHandler'
  nameWithType: 'static member BinHandler.UpdateCode: BinHandler -> Addr -> byte [] -> BinHandler'
- uid: B2R2.FrontEnd.BinHandler.UpdateCode*
  name: UpdateCode
  href: api/B2R2.FrontEnd.BinHandler.html#B2R2_FrontEnd_BinHandler_UpdateCode_
  commentId: Overload:B2R2.FrontEnd.BinHandler.UpdateCode*
  isSpec: "True"
  fullName: B2R2.FrontEnd.BinHandler.UpdateCode
  nameWithType: BinHandler.UpdateCode
- uid: B2R2.FrontEnd.Instruction
  name: Instruction
  href: api/B2R2.FrontEnd.Instruction.html
  commentId: T:B2R2.FrontEnd.Instruction
  fullName: B2R2.FrontEnd.Instruction
  nameWithType: B2R2.FrontEnd.Instruction
- uid: B2R2.FrontEnd.Instruction.#ctor(B2R2.Addr * uint32 * B2R2.WordSize)
  name: 'new: Addr * uint32 * WordSize -> Instruction'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction__ctor_B2R2_Addr___uint32___B2R2_WordSize_
  commentId: M:B2R2.FrontEnd.Instruction.#ctor(System.UInt64,System.UInt32,B2R2.WordSize)
  fullName: 'new: B2R2.Addr * uint32 * B2R2.WordSize -> B2R2.FrontEnd.Instruction'
  nameWithType: 'new: Addr * uint32 * WordSize -> Instruction'
- uid: B2R2.FrontEnd.Instruction.#ctor*
  name: ( .ctor )
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction__ctor_
  commentId: Overload:B2R2.FrontEnd.Instruction.#ctor*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction
  nameWithType: Instruction.( .ctor )
- uid: B2R2.FrontEnd.Instruction.Address(unit)
  name: 'property Address: Addr'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Address_unit_
  commentId: P:B2R2.FrontEnd.Instruction.Address
  fullName: 'property B2R2.FrontEnd.Instruction.Address: B2R2.Addr'
  nameWithType: 'property Instruction.Address: Addr'
- uid: B2R2.FrontEnd.Instruction.Address*
  name: Address
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Address_
  commentId: Overload:B2R2.FrontEnd.Instruction.Address*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.Address
  nameWithType: Instruction.Address
- uid: B2R2.FrontEnd.Instruction.DirectBranchTarget(B2R2.Addr byref)
  name: 'abstract member DirectBranchTarget: Addr byref -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_DirectBranchTarget_B2R2_Addr_byref_
  commentId: M:B2R2.FrontEnd.Instruction.DirectBranchTarget(System.UInt64@)
  fullName: 'abstract member B2R2.FrontEnd.Instruction.DirectBranchTarget: B2R2.Addr byref -> bool'
  nameWithType: 'abstract member Instruction.DirectBranchTarget: Addr byref -> bool'
- uid: B2R2.FrontEnd.Instruction.DirectBranchTarget*
  name: DirectBranchTarget
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_DirectBranchTarget_
  commentId: Overload:B2R2.FrontEnd.Instruction.DirectBranchTarget*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.DirectBranchTarget
  nameWithType: Instruction.DirectBranchTarget
- uid: B2R2.FrontEnd.Instruction.Disasm(bool * bool * B2R2.BinFile.FileInfo)
  name: 'abstract member Disasm: bool * bool * FileInfo -> string'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Disasm_bool___bool___B2R2_BinFile_FileInfo_
  commentId: M:B2R2.FrontEnd.Instruction.Disasm(System.Boolean,System.Boolean,B2R2.BinFile.FileInfo)
  fullName: 'abstract member B2R2.FrontEnd.Instruction.Disasm: bool * bool * B2R2.BinFile.FileInfo -> string'
  nameWithType: 'abstract member Instruction.Disasm: bool * bool * FileInfo -> string'
- uid: B2R2.FrontEnd.Instruction.Disasm(unit)
  name: 'abstract member Disasm: unit -> string'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Disasm_unit_
  commentId: M:B2R2.FrontEnd.Instruction.Disasm
  fullName: 'abstract member B2R2.FrontEnd.Instruction.Disasm: unit -> string'
  nameWithType: 'abstract member Instruction.Disasm: unit -> string'
- uid: B2R2.FrontEnd.Instruction.Disasm*
  name: Disasm
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Disasm_
  commentId: Overload:B2R2.FrontEnd.Instruction.Disasm*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.Disasm
  nameWithType: Instruction.Disasm
- uid: B2R2.FrontEnd.Instruction.IsBranch(unit)
  name: 'abstract member IsBranch: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsBranch_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsBranch
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsBranch: unit -> bool'
  nameWithType: 'abstract member Instruction.IsBranch: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsBranch*
  name: IsBranch
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsBranch_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsBranch*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsBranch
  nameWithType: Instruction.IsBranch
- uid: B2R2.FrontEnd.Instruction.IsCall(unit)
  name: 'abstract member IsCall: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsCall_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsCall
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsCall: unit -> bool'
  nameWithType: 'abstract member Instruction.IsCall: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsCall*
  name: IsCall
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsCall_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsCall*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsCall
  nameWithType: Instruction.IsCall
- uid: B2R2.FrontEnd.Instruction.IsCJmpOnTrue(unit)
  name: 'abstract member IsCJmpOnTrue: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsCJmpOnTrue_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsCJmpOnTrue
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsCJmpOnTrue: unit -> bool'
  nameWithType: 'abstract member Instruction.IsCJmpOnTrue: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsCJmpOnTrue*
  name: IsCJmpOnTrue
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsCJmpOnTrue_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsCJmpOnTrue*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsCJmpOnTrue
  nameWithType: Instruction.IsCJmpOnTrue
- uid: B2R2.FrontEnd.Instruction.IsCondBranch(unit)
  name: 'abstract member IsCondBranch: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsCondBranch_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsCondBranch
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsCondBranch: unit -> bool'
  nameWithType: 'abstract member Instruction.IsCondBranch: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsCondBranch*
  name: IsCondBranch
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsCondBranch_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsCondBranch*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsCondBranch
  nameWithType: Instruction.IsCondBranch
- uid: B2R2.FrontEnd.Instruction.IsDirectBranch(unit)
  name: 'abstract member IsDirectBranch: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsDirectBranch_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsDirectBranch
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsDirectBranch: unit -> bool'
  nameWithType: 'abstract member Instruction.IsDirectBranch: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsDirectBranch*
  name: IsDirectBranch
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsDirectBranch_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsDirectBranch*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsDirectBranch
  nameWithType: Instruction.IsDirectBranch
- uid: B2R2.FrontEnd.Instruction.IsExit(unit)
  name: 'abstract member IsExit: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsExit_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsExit
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsExit: unit -> bool'
  nameWithType: 'abstract member Instruction.IsExit: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsExit*
  name: IsExit
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsExit_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsExit*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsExit
  nameWithType: Instruction.IsExit
- uid: B2R2.FrontEnd.Instruction.IsIndirectBranch(unit)
  name: 'abstract member IsIndirectBranch: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsIndirectBranch_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsIndirectBranch
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsIndirectBranch: unit -> bool'
  nameWithType: 'abstract member Instruction.IsIndirectBranch: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsIndirectBranch*
  name: IsIndirectBranch
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsIndirectBranch_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsIndirectBranch*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsIndirectBranch
  nameWithType: Instruction.IsIndirectBranch
- uid: B2R2.FrontEnd.Instruction.IsNop(unit)
  name: 'abstract member IsNop: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsNop_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsNop
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsNop: unit -> bool'
  nameWithType: 'abstract member Instruction.IsNop: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsNop*
  name: IsNop
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsNop_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsNop*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsNop
  nameWithType: Instruction.IsNop
- uid: B2R2.FrontEnd.Instruction.IsRET(unit)
  name: 'abstract member IsRET: unit -> bool'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsRET_unit_
  commentId: M:B2R2.FrontEnd.Instruction.IsRET
  fullName: 'abstract member B2R2.FrontEnd.Instruction.IsRET: unit -> bool'
  nameWithType: 'abstract member Instruction.IsRET: unit -> bool'
- uid: B2R2.FrontEnd.Instruction.IsRET*
  name: IsRET
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_IsRET_
  commentId: Overload:B2R2.FrontEnd.Instruction.IsRET*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.IsRET
  nameWithType: Instruction.IsRET
- uid: B2R2.FrontEnd.Instruction.Length(unit)
  name: 'property Length: uint32'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Length_unit_
  commentId: P:B2R2.FrontEnd.Instruction.Length
  fullName: 'property B2R2.FrontEnd.Instruction.Length: uint32'
  nameWithType: 'property Instruction.Length: uint32'
- uid: B2R2.FrontEnd.Instruction.Length*
  name: Length
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Length_
  commentId: Overload:B2R2.FrontEnd.Instruction.Length*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.Length
  nameWithType: Instruction.Length
- uid: B2R2.FrontEnd.Instruction.Translate(B2R2.FrontEnd.TranslationContext)
  name: 'abstract member Translate: TranslationContext -> Stmt []'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Translate_B2R2_FrontEnd_TranslationContext_
  commentId: M:B2R2.FrontEnd.Instruction.Translate(B2R2.FrontEnd.TranslationContext)
  fullName: 'abstract member B2R2.FrontEnd.Instruction.Translate: B2R2.FrontEnd.TranslationContext -> B2R2.BinIR.LowUIR.Stmt []'
  nameWithType: 'abstract member Instruction.Translate: TranslationContext -> Stmt []'
- uid: B2R2.FrontEnd.Instruction.Translate*
  name: Translate
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_Translate_
  commentId: Overload:B2R2.FrontEnd.Instruction.Translate*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.Translate
  nameWithType: Instruction.Translate
- uid: B2R2.FrontEnd.Instruction.WordSize(unit)
  name: 'property WordSize: WordSize'
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_WordSize_unit_
  commentId: P:B2R2.FrontEnd.Instruction.WordSize
  fullName: 'property B2R2.FrontEnd.Instruction.WordSize: B2R2.WordSize'
  nameWithType: 'property Instruction.WordSize: WordSize'
- uid: B2R2.FrontEnd.Instruction.WordSize*
  name: WordSize
  href: api/B2R2.FrontEnd.Instruction.html#B2R2_FrontEnd_Instruction_WordSize_
  commentId: Overload:B2R2.FrontEnd.Instruction.WordSize*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Instruction.WordSize
  nameWithType: Instruction.WordSize
- uid: B2R2.FrontEnd.InvalidOpcodeException
  name: InvalidOpcodeException
  href: api/B2R2.FrontEnd.InvalidOpcodeException.html
  commentId: T:B2R2.FrontEnd.InvalidOpcodeException
  fullName: B2R2.FrontEnd.InvalidOpcodeException
  nameWithType: B2R2.FrontEnd.InvalidOpcodeException
- uid: B2R2.FrontEnd.InvalidOperandException
  name: InvalidOperandException
  href: api/B2R2.FrontEnd.InvalidOperandException.html
  commentId: T:B2R2.FrontEnd.InvalidOperandException
  fullName: B2R2.FrontEnd.InvalidOperandException
  nameWithType: B2R2.FrontEnd.InvalidOperandException
- uid: B2R2.FrontEnd.InvalidOperandSizeException
  name: InvalidOperandSizeException
  href: api/B2R2.FrontEnd.InvalidOperandSizeException.html
  commentId: T:B2R2.FrontEnd.InvalidOperandSizeException
  fullName: B2R2.FrontEnd.InvalidOperandSizeException
  nameWithType: B2R2.FrontEnd.InvalidOperandSizeException
- uid: B2R2.FrontEnd.InvalidRegisterException
  name: InvalidRegisterException
  href: api/B2R2.FrontEnd.InvalidRegisterException.html
  commentId: T:B2R2.FrontEnd.InvalidRegisterException
  fullName: B2R2.FrontEnd.InvalidRegisterException
  nameWithType: B2R2.FrontEnd.InvalidRegisterException
- uid: B2R2.FrontEnd.LocalOptimizer
  name: LocalOptimizer
  href: api/B2R2.FrontEnd.LocalOptimizer.html
  commentId: T:B2R2.FrontEnd.LocalOptimizer
  fullName: B2R2.FrontEnd.LocalOptimizer
  nameWithType: B2R2.FrontEnd.LocalOptimizer
- uid: B2R2.FrontEnd.LocalOptimizer.Optimize(B2R2.BinIR.LowUIR.Stmt [])
  name: 'static member Optimize: Stmt [] -> Stmt []'
  href: api/B2R2.FrontEnd.LocalOptimizer.html#B2R2_FrontEnd_LocalOptimizer_Optimize_B2R2_BinIR_LowUIR_Stmt____
  commentId: M:B2R2.FrontEnd.LocalOptimizer.Optimize(B2R2.BinIR.LowUIR.Stmt[])
  fullName: 'static member B2R2.FrontEnd.LocalOptimizer.Optimize: B2R2.BinIR.LowUIR.Stmt [] -> B2R2.BinIR.LowUIR.Stmt []'
  nameWithType: 'static member LocalOptimizer.Optimize: Stmt [] -> Stmt []'
- uid: B2R2.FrontEnd.LocalOptimizer.Optimize*
  name: Optimize
  href: api/B2R2.FrontEnd.LocalOptimizer.html#B2R2_FrontEnd_LocalOptimizer_Optimize_
  commentId: Overload:B2R2.FrontEnd.LocalOptimizer.Optimize*
  isSpec: "True"
  fullName: B2R2.FrontEnd.LocalOptimizer.Optimize
  nameWithType: LocalOptimizer.Optimize
- uid: B2R2.FrontEnd.NotImplementedIRException
  name: NotImplementedIRException
  href: api/B2R2.FrontEnd.NotImplementedIRException.html
  commentId: T:B2R2.FrontEnd.NotImplementedIRException
  fullName: B2R2.FrontEnd.NotImplementedIRException
  nameWithType: B2R2.FrontEnd.NotImplementedIRException
- uid: B2R2.FrontEnd.NotImplementedIRException.Data0
  name: 'val Data0: string'
  href: api/B2R2.FrontEnd.NotImplementedIRException.html#B2R2_FrontEnd_NotImplementedIRException_Data0
  commentId: P:B2R2.FrontEnd.NotImplementedIRException.Data0
  fullName: 'val B2R2.FrontEnd.NotImplementedIRException.Data0: string'
  nameWithType: 'val NotImplementedIRException.Data0: string'
- uid: B2R2.FrontEnd.Parser
  name: Parser
  href: api/B2R2.FrontEnd.Parser.html
  commentId: T:B2R2.FrontEnd.Parser
  fullName: B2R2.FrontEnd.Parser
  nameWithType: B2R2.FrontEnd.Parser
- uid: B2R2.FrontEnd.Parser.#ctor(unit)
  name: 'new: unit -> Parser'
  href: api/B2R2.FrontEnd.Parser.html#B2R2_FrontEnd_Parser__ctor_unit_
  commentId: M:B2R2.FrontEnd.Parser.#ctor
  fullName: 'new: unit -> B2R2.FrontEnd.Parser'
  nameWithType: 'new: unit -> Parser'
- uid: B2R2.FrontEnd.Parser.#ctor*
  name: ( .ctor )
  href: api/B2R2.FrontEnd.Parser.html#B2R2_FrontEnd_Parser__ctor_
  commentId: Overload:B2R2.FrontEnd.Parser.#ctor*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Parser
  nameWithType: Parser.( .ctor )
- uid: B2R2.FrontEnd.Parser.Parse(B2R2.BinReader -> B2R2.FrontEnd.ParsingContext -> B2R2.Addr -> int)
  name: 'abstract member Parse: BinReader -> ParsingContext -> Addr -> int -> Instruction'
  href: api/B2R2.FrontEnd.Parser.html#B2R2_FrontEnd_Parser_Parse_B2R2_BinReader____B2R2_FrontEnd_ParsingContext____B2R2_Addr____int_
  commentId: M:B2R2.FrontEnd.Parser.Parse(B2R2.BinReader,B2R2.FrontEnd.ParsingContext,System.UInt64,System.Int32)
  fullName: 'abstract member B2R2.FrontEnd.Parser.Parse: B2R2.BinReader -> B2R2.FrontEnd.ParsingContext -> B2R2.Addr -> int -> B2R2.FrontEnd.Instruction'
  nameWithType: 'abstract member Parser.Parse: BinReader -> ParsingContext -> Addr -> int -> Instruction'
- uid: B2R2.FrontEnd.Parser.Parse*
  name: Parse
  href: api/B2R2.FrontEnd.Parser.html#B2R2_FrontEnd_Parser_Parse_
  commentId: Overload:B2R2.FrontEnd.Parser.Parse*
  isSpec: "True"
  fullName: B2R2.FrontEnd.Parser.Parse
  nameWithType: Parser.Parse
- uid: B2R2.FrontEnd.ParsingContext
  name: ParsingContext
  href: api/B2R2.FrontEnd.ParsingContext.html
  commentId: T:B2R2.FrontEnd.ParsingContext
  fullName: B2R2.FrontEnd.ParsingContext
  nameWithType: B2R2.FrontEnd.ParsingContext
- uid: B2R2.FrontEnd.ParsingContext.#ctor(B2R2.ArchOperationMode)
  name: 'new: ArchOperationMode -> ParsingContext'
  href: api/B2R2.FrontEnd.ParsingContext.html#B2R2_FrontEnd_ParsingContext__ctor_B2R2_ArchOperationMode_
  commentId: M:B2R2.FrontEnd.ParsingContext.#ctor(B2R2.ArchOperationMode)
  fullName: 'new: B2R2.ArchOperationMode -> B2R2.FrontEnd.ParsingContext'
  nameWithType: 'new: ArchOperationMode -> ParsingContext'
- uid: B2R2.FrontEnd.ParsingContext.#ctor*
  name: ( .ctor )
  href: api/B2R2.FrontEnd.ParsingContext.html#B2R2_FrontEnd_ParsingContext__ctor_
  commentId: Overload:B2R2.FrontEnd.ParsingContext.#ctor*
  isSpec: "True"
  fullName: B2R2.FrontEnd.ParsingContext
  nameWithType: ParsingContext.( .ctor )
- uid: B2R2.FrontEnd.ParsingContext.ArchOperationMode(unit)
  name: 'property ArchOperationMode: ArchOperationMode'
  href: api/B2R2.FrontEnd.ParsingContext.html#B2R2_FrontEnd_ParsingContext_ArchOperationMode_unit_
  commentId: P:B2R2.FrontEnd.ParsingContext.ArchOperationMode
  fullName: 'property B2R2.FrontEnd.ParsingContext.ArchOperationMode: B2R2.ArchOperationMode'
  nameWithType: 'property ParsingContext.ArchOperationMode: ArchOperationMode'
- uid: B2R2.FrontEnd.ParsingContext.ArchOperationMode*
  name: ArchOperationMode
  href: api/B2R2.FrontEnd.ParsingContext.html#B2R2_FrontEnd_ParsingContext_ArchOperationMode_
  commentId: Overload:B2R2.FrontEnd.ParsingContext.ArchOperationMode*
  isSpec: "True"
  fullName: B2R2.FrontEnd.ParsingContext.ArchOperationMode
  nameWithType: ParsingContext.ArchOperationMode
- uid: B2R2.FrontEnd.ParsingContext.ITState(unit)
  name: 'property ITState: byte'
  href: api/B2R2.FrontEnd.ParsingContext.html#B2R2_FrontEnd_ParsingContext_ITState_unit_
  commentId: P:B2R2.FrontEnd.ParsingContext.ITState
  fullName: 'property B2R2.FrontEnd.ParsingContext.ITState: byte'
  nameWithType: 'property ParsingContext.ITState: byte'
- uid: B2R2.FrontEnd.ParsingContext.ITState*
  name: ITState
  href: api/B2R2.FrontEnd.ParsingContext.html#B2R2_FrontEnd_ParsingContext_ITState_
  commentId: Overload:B2R2.FrontEnd.ParsingContext.ITState*
  isSpec: "True"
  fullName: B2R2.FrontEnd.ParsingContext.ITState
  nameWithType: ParsingContext.ITState
- uid: B2R2.FrontEnd.StmtBuilder
  name: StmtBuilder
  href: api/B2R2.FrontEnd.StmtBuilder.html
  commentId: T:B2R2.FrontEnd.StmtBuilder
  fullName: B2R2.FrontEnd.StmtBuilder
  nameWithType: B2R2.FrontEnd.StmtBuilder
- uid: B2R2.FrontEnd.StmtBuilder.#ctor(int)
  name: 'new: int -> StmtBuilder'
  href: api/B2R2.FrontEnd.StmtBuilder.html#B2R2_FrontEnd_StmtBuilder__ctor_int_
  commentId: M:B2R2.FrontEnd.StmtBuilder.#ctor(System.Int32)
  fullName: 'new: int -> B2R2.FrontEnd.StmtBuilder'
  nameWithType: 'new: int -> StmtBuilder'
- uid: B2R2.FrontEnd.StmtBuilder.#ctor*
  name: ( .ctor )
  href: api/B2R2.FrontEnd.StmtBuilder.html#B2R2_FrontEnd_StmtBuilder__ctor_
  commentId: Overload:B2R2.FrontEnd.StmtBuilder.#ctor*
  isSpec: "True"
  fullName: B2R2.FrontEnd.StmtBuilder
  nameWithType: StmtBuilder.( .ctor )
- uid: B2R2.FrontEnd.StmtBuilder.Append(B2R2.BinIR.LowUIR.Stmt)
  name: 'member Append: Stmt -> unit'
  href: api/B2R2.FrontEnd.StmtBuilder.html#B2R2_FrontEnd_StmtBuilder_Append_B2R2_BinIR_LowUIR_Stmt_
  commentId: M:B2R2.FrontEnd.StmtBuilder.Append(B2R2.BinIR.LowUIR.Stmt)
  fullName: 'member B2R2.FrontEnd.StmtBuilder.Append: B2R2.BinIR.LowUIR.Stmt -> unit'
  nameWithType: 'member StmtBuilder.Append: Stmt -> unit'
- uid: B2R2.FrontEnd.StmtBuilder.Append*
  name: Append
  href: api/B2R2.FrontEnd.StmtBuilder.html#B2R2_FrontEnd_StmtBuilder_Append_
  commentId: Overload:B2R2.FrontEnd.StmtBuilder.Append*
  isSpec: "True"
  fullName: B2R2.FrontEnd.StmtBuilder.Append
  nameWithType: StmtBuilder.Append
- uid: B2R2.FrontEnd.StmtBuilder.ToStmts(unit)
  name: 'member ToStmts: unit -> Stmt []'
  href: api/B2R2.FrontEnd.StmtBuilder.html#B2R2_FrontEnd_StmtBuilder_ToStmts_unit_
  commentId: M:B2R2.FrontEnd.StmtBuilder.ToStmts
  fullName: 'member B2R2.FrontEnd.StmtBuilder.ToStmts: unit -> B2R2.BinIR.LowUIR.Stmt []'
  nameWithType: 'member StmtBuilder.ToStmts: unit -> Stmt []'
- uid: B2R2.FrontEnd.StmtBuilder.ToStmts*
  name: ToStmts
  href: api/B2R2.FrontEnd.StmtBuilder.html#B2R2_FrontEnd_StmtBuilder_ToStmts_
  commentId: Overload:B2R2.FrontEnd.StmtBuilder.ToStmts*
  isSpec: "True"
  fullName: B2R2.FrontEnd.StmtBuilder.ToStmts
  nameWithType: StmtBuilder.ToStmts
- uid: B2R2.FrontEnd.TranslationContext
  name: TranslationContext
  href: api/B2R2.FrontEnd.TranslationContext.html
  commentId: T:B2R2.FrontEnd.TranslationContext
  fullName: B2R2.FrontEnd.TranslationContext
  nameWithType: B2R2.FrontEnd.TranslationContext
- uid: B2R2.FrontEnd.TranslationContext.#ctor(B2R2.ISA)
  name: 'new: ISA -> TranslationContext'
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext__ctor_B2R2_ISA_
  commentId: M:B2R2.FrontEnd.TranslationContext.#ctor(B2R2.ISA)
  fullName: 'new: B2R2.ISA -> B2R2.FrontEnd.TranslationContext'
  nameWithType: 'new: ISA -> TranslationContext'
- uid: B2R2.FrontEnd.TranslationContext.#ctor*
  name: ( .ctor )
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext__ctor_
  commentId: Overload:B2R2.FrontEnd.TranslationContext.#ctor*
  isSpec: "True"
  fullName: B2R2.FrontEnd.TranslationContext
  nameWithType: TranslationContext.( .ctor )
- uid: B2R2.FrontEnd.TranslationContext.GetPseudoRegVar(B2R2.RegisterID -> int)
  name: 'abstract member GetPseudoRegVar: RegisterID -> int -> Expr'
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext_GetPseudoRegVar_B2R2_RegisterID____int_
  commentId: M:B2R2.FrontEnd.TranslationContext.GetPseudoRegVar(System.Int32,System.Int32)
  fullName: 'abstract member B2R2.FrontEnd.TranslationContext.GetPseudoRegVar: B2R2.RegisterID -> int -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'abstract member TranslationContext.GetPseudoRegVar: RegisterID -> int -> Expr'
- uid: B2R2.FrontEnd.TranslationContext.GetPseudoRegVar*
  name: GetPseudoRegVar
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext_GetPseudoRegVar_
  commentId: Overload:B2R2.FrontEnd.TranslationContext.GetPseudoRegVar*
  isSpec: "True"
  fullName: B2R2.FrontEnd.TranslationContext.GetPseudoRegVar
  nameWithType: TranslationContext.GetPseudoRegVar
- uid: B2R2.FrontEnd.TranslationContext.GetRegVar(B2R2.RegisterID)
  name: 'abstract member GetRegVar: RegisterID -> Expr'
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext_GetRegVar_B2R2_RegisterID_
  commentId: M:B2R2.FrontEnd.TranslationContext.GetRegVar(System.Int32)
  fullName: 'abstract member B2R2.FrontEnd.TranslationContext.GetRegVar: B2R2.RegisterID -> B2R2.BinIR.LowUIR.Expr'
  nameWithType: 'abstract member TranslationContext.GetRegVar: RegisterID -> Expr'
- uid: B2R2.FrontEnd.TranslationContext.GetRegVar*
  name: GetRegVar
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext_GetRegVar_
  commentId: Overload:B2R2.FrontEnd.TranslationContext.GetRegVar*
  isSpec: "True"
  fullName: B2R2.FrontEnd.TranslationContext.GetRegVar
  nameWithType: TranslationContext.GetRegVar
- uid: B2R2.FrontEnd.TranslationContext.WordBitSize(unit)
  name: 'property WordBitSize: RegType'
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext_WordBitSize_unit_
  commentId: P:B2R2.FrontEnd.TranslationContext.WordBitSize
  fullName: 'property B2R2.FrontEnd.TranslationContext.WordBitSize: B2R2.RegType'
  nameWithType: 'property TranslationContext.WordBitSize: RegType'
- uid: B2R2.FrontEnd.TranslationContext.WordBitSize*
  name: WordBitSize
  href: api/B2R2.FrontEnd.TranslationContext.html#B2R2_FrontEnd_TranslationContext_WordBitSize_
  commentId: Overload:B2R2.FrontEnd.TranslationContext.WordBitSize*
  isSpec: "True"
  fullName: B2R2.FrontEnd.TranslationContext.WordBitSize
  nameWithType: TranslationContext.WordBitSize
- uid: B2R2.FrontEnd.UnhandledRegExprException
  name: UnhandledRegExprException
  href: api/B2R2.FrontEnd.UnhandledRegExprException.html
  commentId: T:B2R2.FrontEnd.UnhandledRegExprException
  fullName: B2R2.FrontEnd.UnhandledRegExprException
  nameWithType: B2R2.FrontEnd.UnhandledRegExprException
- uid: B2R2.Int64
  name: Int64 (mod)
  href: api/B2R2.Int64.html
  commentId: T:B2R2.Int64
  fullName: B2R2.Int64
  nameWithType: B2R2.Int64
- uid: B2R2.Int64.pow(int64 -> int64)
  name: 'val pow: int64 -> int64 -> int64'
  href: api/B2R2.Int64.html#B2R2_Int64_pow_int64____int64_
  commentId: M:B2R2.pow(System.Int64,System.Int64)
  fullName: 'val B2R2.Int64.pow: int64 -> int64 -> int64'
  nameWithType: 'val Int64.pow: int64 -> int64 -> int64'
- uid: B2R2.Int64.pow*
  name: pow
  href: api/B2R2.Int64.html#B2R2_Int64_pow_
  commentId: Overload:B2R2.Int64.pow*
  isSpec: "True"
  fullName: B2R2.Int64.pow
  nameWithType: Int64.pow
- uid: B2R2.IntervalMap
  name: IntervalMap (mod)
  href: api/B2R2.IntervalMap.html
  commentId: T:B2R2.IntervalMap
  fullName: B2R2.IntervalMap
  nameWithType: B2R2.IntervalMap
- uid: B2R2.IntervalMap.add(B2R2.AddrRange -> '?82744 -> B2R2.IntervalMap<'?82744>)
  name: "val add: AddrRange -> '?82744 -> IntervalMap<'?82744> -> IntervalMap<'?82744>"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_add_B2R2_AddrRange______82744____B2R2_IntervalMap___82744__
  commentId: M:B2R2.add``1(B2R2.AddrRange,``0,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.add: B2R2.AddrRange -> '?82744 -> B2R2.IntervalMap<'?82744> -> B2R2.IntervalMap<'?82744>"
  nameWithType: "val IntervalMap.add: AddrRange -> '?82744 -> IntervalMap<'?82744> -> IntervalMap<'?82744>"
- uid: B2R2.IntervalMap.add*
  name: add
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_add_
  commentId: Overload:B2R2.IntervalMap.add*
  isSpec: "True"
  fullName: B2R2.IntervalMap.add
  nameWithType: IntervalMap.add
- uid: B2R2.IntervalMap.addByTuple(B2R2.Addr * B2R2.Addr -> '?82745 -> B2R2.IntervalMap<'?82745>)
  name: "val addByTuple: Addr * Addr -> '?82745 -> IntervalMap<'?82745> -> IntervalMap<'?82745>"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_addByTuple_B2R2_Addr___B2R2_Addr______82745____B2R2_IntervalMap___82745__
  commentId: M:B2R2.addByTuple``1(System.UInt64,System.UInt64,``0,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.addByTuple: B2R2.Addr * B2R2.Addr -> '?82745 -> B2R2.IntervalMap<'?82745> -> B2R2.IntervalMap<'?82745>"
  nameWithType: "val IntervalMap.addByTuple: Addr * Addr -> '?82745 -> IntervalMap<'?82745> -> IntervalMap<'?82745>"
- uid: B2R2.IntervalMap.addByTuple*
  name: addByTuple
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_addByTuple_
  commentId: Overload:B2R2.IntervalMap.addByTuple*
  isSpec: "True"
  fullName: B2R2.IntervalMap.addByTuple
  nameWithType: IntervalMap.addByTuple
- uid: B2R2.IntervalMap.contains(B2R2.AddrRange -> B2R2.IntervalMap<'a>)
  name: "val contains: AddrRange -> IntervalMap<'a> -> bool"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_contains_B2R2_AddrRange____B2R2_IntervalMap__a__
  commentId: M:B2R2.contains``1(B2R2.AddrRange,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.contains: B2R2.AddrRange -> B2R2.IntervalMap<'a> -> bool"
  nameWithType: "val IntervalMap.contains: AddrRange -> IntervalMap<'a> -> bool"
- uid: B2R2.IntervalMap.contains*
  name: contains
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_contains_
  commentId: Overload:B2R2.IntervalMap.contains*
  isSpec: "True"
  fullName: B2R2.IntervalMap.contains
  nameWithType: IntervalMap.contains
- uid: B2R2.IntervalMap.containsAddr(B2R2.Addr -> B2R2.IntervalMap<'?82750>)
  name: "val containsAddr: Addr -> IntervalMap<'?82750> -> bool"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_containsAddr_B2R2_Addr____B2R2_IntervalMap___82750__
  commentId: M:B2R2.containsAddr``1(System.UInt64,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.containsAddr: B2R2.Addr -> B2R2.IntervalMap<'?82750> -> bool"
  nameWithType: "val IntervalMap.containsAddr: Addr -> IntervalMap<'?82750> -> bool"
- uid: B2R2.IntervalMap.containsAddr*
  name: containsAddr
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_containsAddr_
  commentId: Overload:B2R2.IntervalMap.containsAddr*
  isSpec: "True"
  fullName: B2R2.IntervalMap.containsAddr
  nameWithType: IntervalMap.containsAddr
- uid: B2R2.IntervalMap.empty()
  name: val empty
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_empty__
  commentId: M:B2R2.empty``1
  fullName: "val B2R2.IntervalMap.empty: B2R2.IntervalMap<'a>"
  nameWithType: "val IntervalMap.empty: IntervalMap<'a>"
- uid: B2R2.IntervalMap.findAll(B2R2.AddrRange -> B2R2.IntervalMap<'?82746>)
  name: "val findAll: AddrRange -> IntervalMap<'?82746> -> IntervalMapElem<'?82746> list"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_findAll_B2R2_AddrRange____B2R2_IntervalMap___82746__
  commentId: M:B2R2.findAll``1(B2R2.AddrRange,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.findAll: B2R2.AddrRange -> B2R2.IntervalMap<'?82746> -> B2R2.IntervalMapElem<'?82746> list"
  nameWithType: "val IntervalMap.findAll: AddrRange -> IntervalMap<'?82746> -> IntervalMapElem<'?82746> list"
- uid: B2R2.IntervalMap.findAll*
  name: findAll
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_findAll_
  commentId: Overload:B2R2.IntervalMap.findAll*
  isSpec: "True"
  fullName: B2R2.IntervalMap.findAll
  nameWithType: IntervalMap.findAll
- uid: B2R2.IntervalMap.fold('?82754 -> B2R2.AddrRange -> 'a -> '?82754 -> '?82754 -> B2R2.IntervalMap<'a>)
  name: "val fold: '?82754 -> AddrRange -> 'a -> '?82754 -> '?82754 -> IntervalMap<'a> -> '?82754"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_fold___82754____B2R2_AddrRange_____a______82754______82754____B2R2_IntervalMap__a__
  commentId: M:B2R2.fold``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{B2R2.AddrRange,Microsoft.FSharp.Core.FSharpFunc{``1,``0}}},``0,B2R2.IntervalMap{``1})
  fullName: "val B2R2.IntervalMap.fold: '?82754 -> B2R2.AddrRange -> 'a -> '?82754 -> '?82754 -> B2R2.IntervalMap<'a> -> '?82754"
  nameWithType: "val IntervalMap.fold: '?82754 -> AddrRange -> 'a -> '?82754 -> '?82754 -> IntervalMap<'a> -> '?82754"
- uid: B2R2.IntervalMap.fold*
  name: fold
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_fold_
  commentId: Overload:B2R2.IntervalMap.fold*
  isSpec: "True"
  fullName: B2R2.IntervalMap.fold
  nameWithType: IntervalMap.fold
- uid: B2R2.IntervalMap.includeRange(B2R2.AddrRange -> B2R2.IntervalMap<'?82749>)
  name: "val includeRange: AddrRange -> IntervalMap<'?82749> -> bool"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_includeRange_B2R2_AddrRange____B2R2_IntervalMap___82749__
  commentId: M:B2R2.includeRange``1(B2R2.AddrRange,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.includeRange: B2R2.AddrRange -> B2R2.IntervalMap<'?82749> -> bool"
  nameWithType: "val IntervalMap.includeRange: AddrRange -> IntervalMap<'?82749> -> bool"
- uid: B2R2.IntervalMap.includeRange*
  name: includeRange
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_includeRange_
  commentId: Overload:B2R2.IntervalMap.includeRange*
  isSpec: "True"
  fullName: B2R2.IntervalMap.includeRange
  nameWithType: IntervalMap.includeRange
- uid: B2R2.IntervalMap.isEmpty(B2R2.IntervalMap<'a>)
  name: "val isEmpty: IntervalMap<'a> -> bool"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_isEmpty_B2R2_IntervalMap__a__
  commentId: M:B2R2.isEmpty``1(B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.isEmpty: B2R2.IntervalMap<'a> -> bool"
  nameWithType: "val IntervalMap.isEmpty: IntervalMap<'a> -> bool"
- uid: B2R2.IntervalMap.isEmpty*
  name: isEmpty
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_isEmpty_
  commentId: Overload:B2R2.IntervalMap.isEmpty*
  isSpec: "True"
  fullName: B2R2.IntervalMap.isEmpty
  nameWithType: IntervalMap.isEmpty
- uid: B2R2.IntervalMap.remove(B2R2.AddrRange -> B2R2.IntervalMap<'?82753>)
  name: "val remove: AddrRange -> IntervalMap<'?82753> -> IntervalMap<'?82753>"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_remove_B2R2_AddrRange____B2R2_IntervalMap___82753__
  commentId: M:B2R2.remove``1(B2R2.AddrRange,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.remove: B2R2.AddrRange -> B2R2.IntervalMap<'?82753> -> B2R2.IntervalMap<'?82753>"
  nameWithType: "val IntervalMap.remove: AddrRange -> IntervalMap<'?82753> -> IntervalMap<'?82753>"
- uid: B2R2.IntervalMap.remove*
  name: remove
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_remove_
  commentId: Overload:B2R2.IntervalMap.remove*
  isSpec: "True"
  fullName: B2R2.IntervalMap.remove
  nameWithType: IntervalMap.remove
- uid: B2R2.IntervalMap.replace(B2R2.AddrRange -> 'a -> B2R2.IntervalMap<'a>)
  name: "val replace: AddrRange -> 'a -> IntervalMap<'a> -> IntervalMap<'a>"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_replace_B2R2_AddrRange_____a____B2R2_IntervalMap__a__
  commentId: M:B2R2.replace``1(B2R2.AddrRange,``0,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.replace: B2R2.AddrRange -> 'a -> B2R2.IntervalMap<'a> -> B2R2.IntervalMap<'a>"
  nameWithType: "val IntervalMap.replace: AddrRange -> 'a -> IntervalMap<'a> -> IntervalMap<'a>"
- uid: B2R2.IntervalMap.replace*
  name: replace
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_replace_
  commentId: Overload:B2R2.IntervalMap.replace*
  isSpec: "True"
  fullName: B2R2.IntervalMap.replace
  nameWithType: IntervalMap.replace
- uid: B2R2.IntervalMap.tryFind(B2R2.AddrRange -> B2R2.IntervalMap<'a>)
  name: "val tryFind: AddrRange -> IntervalMap<'a> -> 'a option"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_tryFind_B2R2_AddrRange____B2R2_IntervalMap__a__
  commentId: M:B2R2.tryFind``1(B2R2.AddrRange,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.tryFind: B2R2.AddrRange -> B2R2.IntervalMap<'a> -> 'a option"
  nameWithType: "val IntervalMap.tryFind: AddrRange -> IntervalMap<'a> -> 'a option"
- uid: B2R2.IntervalMap.tryFind*
  name: tryFind
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_tryFind_
  commentId: Overload:B2R2.IntervalMap.tryFind*
  isSpec: "True"
  fullName: B2R2.IntervalMap.tryFind
  nameWithType: IntervalMap.tryFind
- uid: B2R2.IntervalMap.tryFindByMin(B2R2.Addr -> B2R2.IntervalMap<'?82748>)
  name: "val tryFindByMin: Addr -> IntervalMap<'?82748> -> '?82748 option"
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_tryFindByMin_B2R2_Addr____B2R2_IntervalMap___82748__
  commentId: M:B2R2.tryFindByMin``1(System.UInt64,B2R2.IntervalMap{``0})
  fullName: "val B2R2.IntervalMap.tryFindByMin: B2R2.Addr -> B2R2.IntervalMap<'?82748> -> '?82748 option"
  nameWithType: "val IntervalMap.tryFindByMin: Addr -> IntervalMap<'?82748> -> '?82748 option"
- uid: B2R2.IntervalMap.tryFindByMin*
  name: tryFindByMin
  href: api/B2R2.IntervalMap.html#B2R2_IntervalMap_tryFindByMin_
  commentId: Overload:B2R2.IntervalMap.tryFindByMin*
  isSpec: "True"
  fullName: B2R2.IntervalMap.tryFindByMin
  nameWithType: IntervalMap.tryFindByMin
- uid: B2R2.IntervalMap`1
  name: IntervalMap<'a> (union)
  href: api/B2R2.IntervalMap-1.html
  commentId: T:B2R2.IntervalMap`1
  fullName: B2R2.IntervalMap`1
  nameWithType: B2R2.IntervalMap`1
- uid: B2R2.IntervalMapElem`1
  name: IntervalMapElem<'a>
  href: api/B2R2.IntervalMapElem-1.html
  commentId: T:B2R2.IntervalMapElem`1
  fullName: B2R2.IntervalMapElem`1
  nameWithType: B2R2.IntervalMapElem`1
- uid: B2R2.IntervalMapElem`1.#ctor(B2R2.AddrRange * 'a)
  name: "new: AddrRange * 'a -> IntervalMapElem<'a>"
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1__ctor_B2R2_AddrRange____a_
  commentId: M:B2R2.IntervalMapElem`1.#ctor(B2R2.AddrRange,`0)
  fullName: "new: B2R2.AddrRange * 'a -> B2R2.IntervalMapElem<'a>"
  nameWithType: "new: AddrRange * 'a -> IntervalMapElem<'a>"
- uid: B2R2.IntervalMapElem`1.#ctor*
  name: ( .ctor )
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1__ctor_
  commentId: Overload:B2R2.IntervalMapElem`1.#ctor*
  isSpec: "True"
  fullName: B2R2.IntervalMapElem
  nameWithType: IntervalMapElem.( .ctor )
- uid: B2R2.IntervalMapElem`1.Key(unit)
  name: 'property Key: AddrRange'
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Key_unit_
  commentId: P:B2R2.IntervalMapElem`1.Key
  fullName: 'property B2R2.IntervalMapElem.Key: B2R2.AddrRange'
  nameWithType: 'property IntervalMapElem.Key: AddrRange'
- uid: B2R2.IntervalMapElem`1.Key*
  name: Key
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Key_
  commentId: Overload:B2R2.IntervalMapElem`1.Key*
  isSpec: "True"
  fullName: B2R2.IntervalMapElem.Key
  nameWithType: IntervalMapElem.Key
- uid: B2R2.IntervalMapElem`1.Max(unit)
  name: 'property Max: Addr'
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Max_unit_
  commentId: P:B2R2.IntervalMapElem`1.Max
  fullName: 'property B2R2.IntervalMapElem.Max: B2R2.Addr'
  nameWithType: 'property IntervalMapElem.Max: Addr'
- uid: B2R2.IntervalMapElem`1.Max*
  name: Max
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Max_
  commentId: Overload:B2R2.IntervalMapElem`1.Max*
  isSpec: "True"
  fullName: B2R2.IntervalMapElem.Max
  nameWithType: IntervalMapElem.Max
- uid: B2R2.IntervalMapElem`1.Min(unit)
  name: 'property Min: Addr'
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Min_unit_
  commentId: P:B2R2.IntervalMapElem`1.Min
  fullName: 'property B2R2.IntervalMapElem.Min: B2R2.Addr'
  nameWithType: 'property IntervalMapElem.Min: Addr'
- uid: B2R2.IntervalMapElem`1.Min*
  name: Min
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Min_
  commentId: Overload:B2R2.IntervalMapElem`1.Min*
  isSpec: "True"
  fullName: B2R2.IntervalMapElem.Min
  nameWithType: IntervalMapElem.Min
- uid: B2R2.IntervalMapElem`1.System.Object.ToString(unit)
  name: 'override member ToString: unit -> string'
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_System_Object_ToString_unit_
  commentId: M:B2R2.IntervalMapElem`1.ToString
  fullName: 'override member B2R2.IntervalMapElem.ToString: unit -> string'
  nameWithType: 'override member IntervalMapElem.ToString: unit -> string'
- uid: B2R2.IntervalMapElem`1.System.Object.ToString*
  name: ToString
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_System_Object_ToString_
  commentId: Overload:B2R2.IntervalMapElem`1.System.Object.ToString*
  isSpec: "True"
  fullName: B2R2.IntervalMapElem.ToString
  nameWithType: IntervalMapElem.ToString
- uid: B2R2.IntervalMapElem`1.Val(unit)
  name: "property Val: 'a"
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Val_unit_
  commentId: P:B2R2.IntervalMapElem`1.Val
  fullName: "property B2R2.IntervalMapElem.Val: 'a"
  nameWithType: "property IntervalMapElem.Val: 'a"
- uid: B2R2.IntervalMapElem`1.Val*
  name: Val
  href: api/B2R2.IntervalMapElem-1.html#B2R2_IntervalMapElem_1_Val_
  commentId: Overload:B2R2.IntervalMapElem`1.Val*
  isSpec: "True"
  fullName: B2R2.IntervalMapElem.Val
  nameWithType: IntervalMapElem.Val
- uid: B2R2.IntervalSet
  name: IntervalSet (union)
  href: api/B2R2.IntervalSet.html
  commentId: T:B2R2.IntervalSet
  fullName: B2R2.IntervalSet
  nameWithType: B2R2.IntervalSet
- uid: B2R2.IntervalSetElem
  name: IntervalSetElem
  href: api/B2R2.IntervalSetElem.html
  commentId: T:B2R2.IntervalSetElem
  fullName: B2R2.IntervalSetElem
  nameWithType: B2R2.IntervalSetElem
- uid: B2R2.IntervalSetElem.#ctor(B2R2.AddrRange)
  name: 'new: AddrRange -> IntervalSetElem'
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem__ctor_B2R2_AddrRange_
  commentId: M:B2R2.IntervalSetElem.#ctor(B2R2.AddrRange)
  fullName: 'new: B2R2.AddrRange -> B2R2.IntervalSetElem'
  nameWithType: 'new: AddrRange -> IntervalSetElem'
- uid: B2R2.IntervalSetElem.#ctor*
  name: ( .ctor )
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem__ctor_
  commentId: Overload:B2R2.IntervalSetElem.#ctor*
  isSpec: "True"
  fullName: B2R2.IntervalSetElem
  nameWithType: IntervalSetElem.( .ctor )
- uid: B2R2.IntervalSetElem.Max(unit)
  name: 'property Max: Addr'
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_Max_unit_
  commentId: P:B2R2.IntervalSetElem.Max
  fullName: 'property B2R2.IntervalSetElem.Max: B2R2.Addr'
  nameWithType: 'property IntervalSetElem.Max: Addr'
- uid: B2R2.IntervalSetElem.Max*
  name: Max
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_Max_
  commentId: Overload:B2R2.IntervalSetElem.Max*
  isSpec: "True"
  fullName: B2R2.IntervalSetElem.Max
  nameWithType: IntervalSetElem.Max
- uid: B2R2.IntervalSetElem.Min(unit)
  name: 'property Min: Addr'
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_Min_unit_
  commentId: P:B2R2.IntervalSetElem.Min
  fullName: 'property B2R2.IntervalSetElem.Min: B2R2.Addr'
  nameWithType: 'property IntervalSetElem.Min: Addr'
- uid: B2R2.IntervalSetElem.Min*
  name: Min
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_Min_
  commentId: Overload:B2R2.IntervalSetElem.Min*
  isSpec: "True"
  fullName: B2R2.IntervalSetElem.Min
  nameWithType: IntervalSetElem.Min
- uid: B2R2.IntervalSetElem.System.Object.ToString(unit)
  name: 'override member ToString: unit -> string'
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_System_Object_ToString_unit_
  commentId: M:B2R2.IntervalSetElem.ToString
  fullName: 'override member B2R2.IntervalSetElem.ToString: unit -> string'
  nameWithType: 'override member IntervalSetElem.ToString: unit -> string'
- uid: B2R2.IntervalSetElem.System.Object.ToString*
  name: ToString
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_System_Object_ToString_
  commentId: Overload:B2R2.IntervalSetElem.System.Object.ToString*
  isSpec: "True"
  fullName: B2R2.IntervalSetElem.ToString
  nameWithType: IntervalSetElem.ToString
- uid: B2R2.IntervalSetElem.Val(unit)
  name: 'property Val: AddrRange'
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_Val_unit_
  commentId: P:B2R2.IntervalSetElem.Val
  fullName: 'property B2R2.IntervalSetElem.Val: B2R2.AddrRange'
  nameWithType: 'property IntervalSetElem.Val: AddrRange'
- uid: B2R2.IntervalSetElem.Val*
  name: Val
  href: api/B2R2.IntervalSetElem.html#B2R2_IntervalSetElem_Val_
  commentId: Overload:B2R2.IntervalSetElem.Val*
  isSpec: "True"
  fullName: B2R2.IntervalSetElem.Val
  nameWithType: IntervalSetElem.Val
- uid: B2R2.IntervalSetModule
  name: IntervalSet (mod)
  href: api/B2R2.IntervalSetModule.html
  commentId: T:B2R2.IntervalSetModule
  fullName: B2R2.IntervalSetModule
  nameWithType: B2R2.IntervalSetModule
- uid: B2R2.IntervalSetModule.add(B2R2.AddrRange -> B2R2.IntervalSet)
  name: 'val add: AddrRange -> IntervalSet -> IntervalSet'
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_add_B2R2_AddrRange____B2R2_IntervalSet_
  commentId: M:B2R2.add(B2R2.AddrRange,B2R2.IntervalSet)
  fullName: 'val B2R2.IntervalSetModule.add: B2R2.AddrRange -> B2R2.IntervalSet -> B2R2.IntervalSet'
  nameWithType: 'val IntervalSet.add: AddrRange -> IntervalSet -> IntervalSet'
- uid: B2R2.IntervalSetModule.add*
  name: add
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_add_
  commentId: Overload:B2R2.IntervalSetModule.add*
  isSpec: "True"
  fullName: B2R2.IntervalSetModule.add
  nameWithType: IntervalSet.add
- uid: B2R2.IntervalSetModule.contains(B2R2.AddrRange -> B2R2.IntervalSet)
  name: 'val contains: AddrRange -> IntervalSet -> bool'
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_contains_B2R2_AddrRange____B2R2_IntervalSet_
  commentId: M:B2R2.contains(B2R2.AddrRange,B2R2.IntervalSet)
  fullName: 'val B2R2.IntervalSetModule.contains: B2R2.AddrRange -> B2R2.IntervalSet -> bool'
  nameWithType: 'val IntervalSet.contains: AddrRange -> IntervalSet -> bool'
- uid: B2R2.IntervalSetModule.contains*
  name: contains
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_contains_
  commentId: Overload:B2R2.IntervalSetModule.contains*
  isSpec: "True"
  fullName: B2R2.IntervalSetModule.contains
  nameWithType: IntervalSet.contains
- uid: B2R2.IntervalSetModule.containsAddr(B2R2.Addr -> B2R2.IntervalSet)
  name: 'val containsAddr: Addr -> IntervalSet -> bool'
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_containsAddr_B2R2_Addr____B2R2_IntervalSet_
  commentId: M:B2R2.containsAddr(System.UInt64,B2R2.IntervalSet)
  fullName: 'val B2R2.IntervalSetModule.containsAddr: B2R2.Addr -> B2R2.IntervalSet -> bool'
  nameWithType: 'val IntervalSet.containsAddr: Addr -> IntervalSet -> bool'
- uid: B2R2.IntervalSetModule.containsAddr*
  name: containsAddr
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_containsAddr_
  commentId: Overload:B2R2.IntervalSetModule.containsAddr*
  isSpec: "True"
  fullName: B2R2.IntervalSetModule.containsAddr
  nameWithType: IntervalSet.containsAddr
- uid: B2R2.IntervalSetModule.empty()
  name: val empty
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_empty__
  commentId: P:B2R2.empty
  fullName: 'val B2R2.IntervalSetModule.empty: B2R2.IntervalSet'
  nameWithType: 'val IntervalSet.empty: IntervalSet'
- uid: B2R2.IntervalSetModule.findAll(B2R2.AddrRange -> B2R2.IntervalSet)
  name: 'val findAll: AddrRange -> IntervalSet -> AddrRange list'
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_findAll_B2R2_AddrRange____B2R2_IntervalSet_
  commentId: M:B2R2.findAll(B2R2.AddrRange,B2R2.IntervalSet)
  fullName: 'val B2R2.IntervalSetModule.findAll: B2R2.AddrRange -> B2R2.IntervalSet -> B2R2.AddrRange list'
  nameWithType: 'val IntervalSet.findAll: AddrRange -> IntervalSet -> AddrRange list'
- uid: B2R2.IntervalSetModule.findAll*
  name: findAll
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_findAll_
  commentId: Overload:B2R2.IntervalSetModule.findAll*
  isSpec: "True"
  fullName: B2R2.IntervalSetModule.findAll
  nameWithType: IntervalSet.findAll
- uid: B2R2.IntervalSetModule.includeRange(B2R2.AddrRange -> B2R2.IntervalSet)
  name: 'val includeRange: AddrRange -> IntervalSet -> bool'
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_includeRange_B2R2_AddrRange____B2R2_IntervalSet_
  commentId: M:B2R2.includeRange(B2R2.AddrRange,B2R2.IntervalSet)
  fullName: 'val B2R2.IntervalSetModule.includeRange: B2R2.AddrRange -> B2R2.IntervalSet -> bool'
  nameWithType: 'val IntervalSet.includeRange: AddrRange -> IntervalSet -> bool'
- uid: B2R2.IntervalSetModule.includeRange*
  name: includeRange
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_includeRange_
  commentId: Overload:B2R2.IntervalSetModule.includeRange*
  isSpec: "True"
  fullName: B2R2.IntervalSetModule.includeRange
  nameWithType: IntervalSet.includeRange
- uid: B2R2.IntervalSetModule.tryFind(B2R2.AddrRange -> B2R2.IntervalSet)
  name: 'val tryFind: AddrRange -> IntervalSet -> AddrRange option'
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_tryFind_B2R2_AddrRange____B2R2_IntervalSet_
  commentId: M:B2R2.tryFind(B2R2.AddrRange,B2R2.IntervalSet)
  fullName: 'val B2R2.IntervalSetModule.tryFind: B2R2.AddrRange -> B2R2.IntervalSet -> B2R2.AddrRange option'
  nameWithType: 'val IntervalSet.tryFind: AddrRange -> IntervalSet -> AddrRange option'
- uid: B2R2.IntervalSetModule.tryFind*
  name: tryFind
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_tryFind_
  commentId: Overload:B2R2.IntervalSetModule.tryFind*
  isSpec: "True"
  fullName: B2R2.IntervalSetModule.tryFind
  nameWithType: IntervalSet.tryFind
- uid: B2R2.IntervalSetModule.tryFindByAddr(B2R2.Addr -> B2R2.IntervalSet)
  name: 'val tryFindByAddr: Addr -> IntervalSet -> AddrRange option'
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_tryFindByAddr_B2R2_Addr____B2R2_IntervalSet_
  commentId: M:B2R2.tryFindByAddr(System.UInt64,B2R2.IntervalSet)
  fullName: 'val B2R2.IntervalSetModule.tryFindByAddr: B2R2.Addr -> B2R2.IntervalSet -> B2R2.AddrRange option'
  nameWithType: 'val IntervalSet.tryFindByAddr: Addr -> IntervalSet -> AddrRange option'
- uid: B2R2.IntervalSetModule.tryFindByAddr*
  name: tryFindByAddr
  href: api/B2R2.IntervalSetModule.html#B2R2_IntervalSetModule_tryFindByAddr_
  commentId: Overload:B2R2.IntervalSetModule.tryFindByAddr*
  isSpec: "True"
  fullName: B2R2.IntervalSetModule.tryFindByAddr
  nameWithType: IntervalSet.tryFindByAddr
- uid: B2R2.InvalidAddrRangeException
  name: InvalidAddrRangeException
  href: api/B2R2.InvalidAddrRangeException.html
  commentId: T:B2R2.InvalidAddrRangeException
  fullName: B2R2.InvalidAddrRangeException
  nameWithType: B2R2.InvalidAddrRangeException
- uid: B2R2.InvalidEndianException
  name: InvalidEndianException
  href: api/B2R2.InvalidEndianException.html
  commentId: T:B2R2.InvalidEndianException
  fullName: B2R2.InvalidEndianException
  nameWithType: B2R2.InvalidEndianException
- uid: B2R2.InvalidISAException
  name: InvalidISAException
  href: api/B2R2.InvalidISAException.html
  commentId: T:B2R2.InvalidISAException
  fullName: B2R2.InvalidISAException
  nameWithType: B2R2.InvalidISAException
- uid: B2R2.InvalidRegTypeException
  name: InvalidRegTypeException
  href: api/B2R2.InvalidRegTypeException.html
  commentId: T:B2R2.InvalidRegTypeException
  fullName: B2R2.InvalidRegTypeException
  nameWithType: B2R2.InvalidRegTypeException
- uid: B2R2.InvalidTargetArchModeException
  name: InvalidTargetArchModeException
  href: api/B2R2.InvalidTargetArchModeException.html
  commentId: T:B2R2.InvalidTargetArchModeException
  fullName: B2R2.InvalidTargetArchModeException
  nameWithType: B2R2.InvalidTargetArchModeException
- uid: B2R2.ISA
  name: ISA (rec)
  href: api/B2R2.ISA.html
  commentId: T:B2R2.ISA
  fullName: B2R2.ISA
  nameWithType: B2R2.ISA
- uid: B2R2.ISA.Arch
  name: 'val Arch: Architecture'
  href: api/B2R2.ISA.html#B2R2_ISA_Arch
  commentId: P:B2R2.ISA.Arch
  fullName: 'val B2R2.ISA.Arch: B2R2.Architecture'
  nameWithType: 'val ISA.Arch: Architecture'
- uid: B2R2.ISA.ArchToString(unit)
  name: 'static property ArchToString: Architecture -> string'
  href: api/B2R2.ISA.html#B2R2_ISA_ArchToString_unit_
  commentId: P:B2R2.ISA.ArchToString
  fullName: 'static property B2R2.ISA.ArchToString: B2R2.Architecture -> string'
  nameWithType: 'static property ISA.ArchToString: Architecture -> string'
- uid: B2R2.ISA.ArchToString*
  name: ArchToString
  href: api/B2R2.ISA.html#B2R2_ISA_ArchToString_
  commentId: Overload:B2R2.ISA.ArchToString*
  isSpec: "True"
  fullName: B2R2.ISA.ArchToString
  nameWithType: ISA.ArchToString
- uid: B2R2.ISA.DefaultISA(unit)
  name: 'static property DefaultISA: ISA'
  href: api/B2R2.ISA.html#B2R2_ISA_DefaultISA_unit_
  commentId: P:B2R2.ISA.DefaultISA
  fullName: 'static property B2R2.ISA.DefaultISA: B2R2.ISA'
  nameWithType: 'static property ISA.DefaultISA: ISA'
- uid: B2R2.ISA.DefaultISA*
  name: DefaultISA
  href: api/B2R2.ISA.html#B2R2_ISA_DefaultISA_
  commentId: Overload:B2R2.ISA.DefaultISA*
  isSpec: "True"
  fullName: B2R2.ISA.DefaultISA
  nameWithType: ISA.DefaultISA
- uid: B2R2.ISA.Endian
  name: 'val Endian: Endian'
  href: api/B2R2.ISA.html#B2R2_ISA_Endian
  commentId: P:B2R2.ISA.Endian
  fullName: 'val B2R2.ISA.Endian: B2R2.Endian'
  nameWithType: 'val ISA.Endian: Endian'
- uid: B2R2.ISA.Init(B2R2.Architecture -> B2R2.Endian)
  name: 'static member Init: Architecture -> Endian -> ISA'
  href: api/B2R2.ISA.html#B2R2_ISA_Init_B2R2_Architecture____B2R2_Endian_
  commentId: M:B2R2.ISA.Init(B2R2.Architecture,B2R2.Endian)
  fullName: 'static member B2R2.ISA.Init: B2R2.Architecture -> B2R2.Endian -> B2R2.ISA'
  nameWithType: 'static member ISA.Init: Architecture -> Endian -> ISA'
- uid: B2R2.ISA.Init*
  name: Init
  href: api/B2R2.ISA.html#B2R2_ISA_Init_
  commentId: Overload:B2R2.ISA.Init*
  isSpec: "True"
  fullName: B2R2.ISA.Init
  nameWithType: ISA.Init
- uid: B2R2.ISA.OfString(string)
  name: 'static member OfString: string -> ISA'
  href: api/B2R2.ISA.html#B2R2_ISA_OfString_string_
  commentId: M:B2R2.ISA.OfString(System.String)
  fullName: 'static member B2R2.ISA.OfString: string -> B2R2.ISA'
  nameWithType: 'static member ISA.OfString: string -> ISA'
- uid: B2R2.ISA.OfString*
  name: OfString
  href: api/B2R2.ISA.html#B2R2_ISA_OfString_
  commentId: Overload:B2R2.ISA.OfString*
  isSpec: "True"
  fullName: B2R2.ISA.OfString
  nameWithType: ISA.OfString
- uid: B2R2.ISA.WordSize
  name: 'val WordSize: WordSize'
  href: api/B2R2.ISA.html#B2R2_ISA_WordSize
  commentId: P:B2R2.ISA.WordSize
  fullName: 'val B2R2.ISA.WordSize: B2R2.WordSize'
  nameWithType: 'val ISA.WordSize: WordSize'
- uid: B2R2.Monads
  name: B2R2.Monads
  href: api/B2R2.Monads.html
  commentId: N:B2R2.Monads
  fullName: B2R2.Monads
  nameWithType: B2R2.Monads
- uid: B2R2.Monads.Maybe
  name: Maybe (mod)
  href: api/B2R2.Monads.Maybe.html
  commentId: T:B2R2.Monads.Maybe
  fullName: B2R2.Monads.Maybe
  nameWithType: B2R2.Monads.Maybe
- uid: B2R2.Monads.Maybe.( >>= )('?66676 option -> '?66676 -> '?66677 option)
  name: "val ( >>= ): '?66676 option -> '?66676 -> '?66677 option -> '?66677 option"
  href: api/B2R2.Monads.Maybe.html#B2R2_Monads_Maybe___________66676_option______66676______66677_option_
  commentId: M:B2R2.Monads.op_GreaterGreaterEquals``2(Microsoft.FSharp.Core.FSharpOption{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}})
  fullName: "val B2R2.Monads.Maybe.( >>= ): '?66676 option -> '?66676 -> '?66677 option -> '?66677 option"
  nameWithType: "val Maybe.( >>= ): '?66676 option -> '?66676 -> '?66677 option -> '?66677 option"
- uid: B2R2.Monads.Maybe.( >>= )*
  name: ( >>= )
  href: api/B2R2.Monads.Maybe.html#B2R2_Monads_Maybe_________
  commentId: Overload:B2R2.Monads.Maybe.( >>= )*
  isSpec: "True"
  fullName: B2R2.Monads.Maybe.( >>= )
  nameWithType: Maybe.( >>= )
- uid: B2R2.Monads.Maybe.maybe()
  name: val maybe
  href: api/B2R2.Monads.Maybe.html#B2R2_Monads_Maybe_maybe__
  commentId: P:B2R2.Monads.maybe
  fullName: 'val B2R2.Monads.Maybe.maybe: B2R2.Monads.Maybe.MaybeBuilder'
  nameWithType: 'val Maybe.maybe: MaybeBuilder'
- uid: B2R2.Monads.Maybe.MaybeBuilder
  name: Maybe.MaybeBuilder
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html
  commentId: T:B2R2.Monads.Maybe.MaybeBuilder
  fullName: B2R2.Monads.Maybe.MaybeBuilder
  nameWithType: B2R2.Monads.Maybe.MaybeBuilder
- uid: B2R2.Monads.Maybe.MaybeBuilder.#ctor(unit)
  name: 'new: unit -> MaybeBuilder'
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder__ctor_unit_
  commentId: M:B2R2.Monads.Maybe.MaybeBuilder.#ctor
  fullName: 'new: unit -> B2R2.Monads.Maybe.MaybeBuilder'
  nameWithType: 'new: unit -> MaybeBuilder'
- uid: B2R2.Monads.Maybe.MaybeBuilder.#ctor*
  name: ( .ctor )
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder__ctor_
  commentId: Overload:B2R2.Monads.Maybe.MaybeBuilder.#ctor*
  isSpec: "True"
  fullName: B2R2.Monads.Maybe.MaybeBuilder
  nameWithType: MaybeBuilder.( .ctor )
- uid: B2R2.Monads.Maybe.MaybeBuilder.Bind('?66673 option * '?66673 -> '?66674 option)
  name: "member Bind: '?66673 option * '?66673 -> '?66674 option -> '?66674 option"
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_Bind___66673_option_____66673______66674_option_
  commentId: M:B2R2.Monads.Maybe.MaybeBuilder.Bind``2(Microsoft.FSharp.Core.FSharpOption{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}})
  fullName: "member B2R2.Monads.Maybe.MaybeBuilder.Bind: '?66673 option * '?66673 -> '?66674 option -> '?66674 option"
  nameWithType: "member MaybeBuilder.Bind: '?66673 option * '?66673 -> '?66674 option -> '?66674 option"
- uid: B2R2.Monads.Maybe.MaybeBuilder.Bind*
  name: Bind
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_Bind_
  commentId: Overload:B2R2.Monads.Maybe.MaybeBuilder.Bind*
  isSpec: "True"
  fullName: B2R2.Monads.Maybe.MaybeBuilder.Bind
  nameWithType: MaybeBuilder.Bind
- uid: B2R2.Monads.Maybe.MaybeBuilder.Return('?66671)
  name: "member Return: '?66671 -> '?66671 option"
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_Return___66671_
  commentId: M:B2R2.Monads.Maybe.MaybeBuilder.Return``1(``0)
  fullName: "member B2R2.Monads.Maybe.MaybeBuilder.Return: '?66671 -> '?66671 option"
  nameWithType: "member MaybeBuilder.Return: '?66671 -> '?66671 option"
- uid: B2R2.Monads.Maybe.MaybeBuilder.Return*
  name: Return
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_Return_
  commentId: Overload:B2R2.Monads.Maybe.MaybeBuilder.Return*
  isSpec: "True"
  fullName: B2R2.Monads.Maybe.MaybeBuilder.Return
  nameWithType: MaybeBuilder.Return
- uid: B2R2.Monads.Maybe.MaybeBuilder.ReturnFrom('a option)
  name: "member ReturnFrom: 'a option -> 'a option"
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_ReturnFrom__a_option_
  commentId: M:B2R2.Monads.Maybe.MaybeBuilder.ReturnFrom``1(Microsoft.FSharp.Core.FSharpOption{``0})
  fullName: "member B2R2.Monads.Maybe.MaybeBuilder.ReturnFrom: 'a option -> 'a option"
  nameWithType: "member MaybeBuilder.ReturnFrom: 'a option -> 'a option"
- uid: B2R2.Monads.Maybe.MaybeBuilder.ReturnFrom*
  name: ReturnFrom
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_ReturnFrom_
  commentId: Overload:B2R2.Monads.Maybe.MaybeBuilder.ReturnFrom*
  isSpec: "True"
  fullName: B2R2.Monads.Maybe.MaybeBuilder.ReturnFrom
  nameWithType: MaybeBuilder.ReturnFrom
- uid: B2R2.Monads.Maybe.MaybeBuilder.Zero(unit)
  name: "member Zero: unit -> '?66675 option"
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_Zero_unit_
  commentId: M:B2R2.Monads.Maybe.MaybeBuilder.Zero``1
  fullName: "member B2R2.Monads.Maybe.MaybeBuilder.Zero: unit -> '?66675 option"
  nameWithType: "member MaybeBuilder.Zero: unit -> '?66675 option"
- uid: B2R2.Monads.Maybe.MaybeBuilder.Zero*
  name: Zero
  href: api/B2R2.Monads.Maybe.MaybeBuilder.html#B2R2_Monads_Maybe_MaybeBuilder_Zero_
  commentId: Overload:B2R2.Monads.Maybe.MaybeBuilder.Zero*
  isSpec: "True"
  fullName: B2R2.Monads.Maybe.MaybeBuilder.Zero
  nameWithType: MaybeBuilder.Zero
- uid: B2R2.Monads.OrElse
  name: OrElse (mod)
  href: api/B2R2.Monads.OrElse.html
  commentId: T:B2R2.Monads.OrElse
  fullName: B2R2.Monads.OrElse
  nameWithType: B2R2.Monads.OrElse
- uid: B2R2.Monads.OrElse.bind(unit -> '?66678 option -> '?66678 option)
  name: "val bind: unit -> '?66678 option -> '?66678 option -> '?66678 option"
  href: api/B2R2.Monads.OrElse.html#B2R2_Monads_OrElse_bind_unit______66678_option______66678_option_
  commentId: M:B2R2.Monads.bind``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.FSharpOption{``0}},Microsoft.FSharp.Core.FSharpOption{``0})
  fullName: "val B2R2.Monads.OrElse.bind: unit -> '?66678 option -> '?66678 option -> '?66678 option"
  nameWithType: "val OrElse.bind: unit -> '?66678 option -> '?66678 option -> '?66678 option"
- uid: B2R2.Monads.OrElse.bind*
  name: bind
  href: api/B2R2.Monads.OrElse.html#B2R2_Monads_OrElse_bind_
  commentId: Overload:B2R2.Monads.OrElse.bind*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.bind
  nameWithType: OrElse.bind
- uid: B2R2.Monads.OrElse.orElse()
  name: val orElse
  href: api/B2R2.Monads.OrElse.html#B2R2_Monads_OrElse_orElse__
  commentId: P:B2R2.Monads.orElse
  fullName: 'val B2R2.Monads.OrElse.orElse: B2R2.Monads.OrElse.OrElseBuilder'
  nameWithType: 'val OrElse.orElse: OrElseBuilder'
- uid: B2R2.Monads.OrElse.OrElseBuilder
  name: OrElse.OrElseBuilder
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html
  commentId: T:B2R2.Monads.OrElse.OrElseBuilder
  fullName: B2R2.Monads.OrElse.OrElseBuilder
  nameWithType: B2R2.Monads.OrElse.OrElseBuilder
- uid: B2R2.Monads.OrElse.OrElseBuilder.#ctor(unit)
  name: 'new: unit -> OrElseBuilder'
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder__ctor_unit_
  commentId: M:B2R2.Monads.OrElse.OrElseBuilder.#ctor
  fullName: 'new: unit -> B2R2.Monads.OrElse.OrElseBuilder'
  nameWithType: 'new: unit -> OrElseBuilder'
- uid: B2R2.Monads.OrElse.OrElseBuilder.#ctor*
  name: ( .ctor )
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder__ctor_
  commentId: Overload:B2R2.Monads.OrElse.OrElseBuilder.#ctor*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.OrElseBuilder
  nameWithType: OrElseBuilder.( .ctor )
- uid: B2R2.Monads.OrElse.OrElseBuilder.Bind('?66681 option * unit -> '?66681 option)
  name: "member Bind: '?66681 option * unit -> '?66681 option -> '?66681 option"
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Bind___66681_option___unit______66681_option_
  commentId: M:B2R2.Monads.OrElse.OrElseBuilder.Bind``1(Microsoft.FSharp.Core.FSharpOption{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.FSharpOption{``0}})
  fullName: "member B2R2.Monads.OrElse.OrElseBuilder.Bind: '?66681 option * unit -> '?66681 option -> '?66681 option"
  nameWithType: "member OrElseBuilder.Bind: '?66681 option * unit -> '?66681 option -> '?66681 option"
- uid: B2R2.Monads.OrElse.OrElseBuilder.Bind*
  name: Bind
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Bind_
  commentId: Overload:B2R2.Monads.OrElse.OrElseBuilder.Bind*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.OrElseBuilder.Bind
  nameWithType: OrElseBuilder.Bind
- uid: B2R2.Monads.OrElse.OrElseBuilder.Combine('?66684 option * unit -> '?66684 option)
  name: "member Combine: '?66684 option * unit -> '?66684 option -> '?66684 option"
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Combine___66684_option___unit______66684_option_
  commentId: M:B2R2.Monads.OrElse.OrElseBuilder.Combine``1(Microsoft.FSharp.Core.FSharpOption{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.FSharpOption{``0}})
  fullName: "member B2R2.Monads.OrElse.OrElseBuilder.Combine: '?66684 option * unit -> '?66684 option -> '?66684 option"
  nameWithType: "member OrElseBuilder.Combine: '?66684 option * unit -> '?66684 option -> '?66684 option"
- uid: B2R2.Monads.OrElse.OrElseBuilder.Combine*
  name: Combine
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Combine_
  commentId: Overload:B2R2.Monads.OrElse.OrElseBuilder.Combine*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.OrElseBuilder.Combine
  nameWithType: OrElseBuilder.Combine
- uid: B2R2.Monads.OrElse.OrElseBuilder.Delay('?66682)
  name: "member Delay: '?66682 -> '?66682"
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Delay___66682_
  commentId: M:B2R2.Monads.OrElse.OrElseBuilder.Delay``1(``0)
  fullName: "member B2R2.Monads.OrElse.OrElseBuilder.Delay: '?66682 -> '?66682"
  nameWithType: "member OrElseBuilder.Delay: '?66682 -> '?66682"
- uid: B2R2.Monads.OrElse.OrElseBuilder.Delay*
  name: Delay
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Delay_
  commentId: Overload:B2R2.Monads.OrElse.OrElseBuilder.Delay*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.OrElseBuilder.Delay
  nameWithType: OrElseBuilder.Delay
- uid: B2R2.Monads.OrElse.OrElseBuilder.ReturnFrom('?66679)
  name: "member ReturnFrom: '?66679 -> '?66679"
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_ReturnFrom___66679_
  commentId: M:B2R2.Monads.OrElse.OrElseBuilder.ReturnFrom``1(``0)
  fullName: "member B2R2.Monads.OrElse.OrElseBuilder.ReturnFrom: '?66679 -> '?66679"
  nameWithType: "member OrElseBuilder.ReturnFrom: '?66679 -> '?66679"
- uid: B2R2.Monads.OrElse.OrElseBuilder.ReturnFrom*
  name: ReturnFrom
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_ReturnFrom_
  commentId: Overload:B2R2.Monads.OrElse.OrElseBuilder.ReturnFrom*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.OrElseBuilder.ReturnFrom
  nameWithType: OrElseBuilder.ReturnFrom
- uid: B2R2.Monads.OrElse.OrElseBuilder.Run(unit -> '?66683)
  name: "member Run: unit -> '?66683 -> '?66683"
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Run_unit______66683_
  commentId: M:B2R2.Monads.OrElse.OrElseBuilder.Run``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})
  fullName: "member B2R2.Monads.OrElse.OrElseBuilder.Run: unit -> '?66683 -> '?66683"
  nameWithType: "member OrElseBuilder.Run: unit -> '?66683 -> '?66683"
- uid: B2R2.Monads.OrElse.OrElseBuilder.Run*
  name: Run
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_Run_
  commentId: Overload:B2R2.Monads.OrElse.OrElseBuilder.Run*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.OrElseBuilder.Run
  nameWithType: OrElseBuilder.Run
- uid: B2R2.Monads.OrElse.OrElseBuilder.YieldFrom('?66680)
  name: "member YieldFrom: '?66680 -> '?66680"
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_YieldFrom___66680_
  commentId: M:B2R2.Monads.OrElse.OrElseBuilder.YieldFrom``1(``0)
  fullName: "member B2R2.Monads.OrElse.OrElseBuilder.YieldFrom: '?66680 -> '?66680"
  nameWithType: "member OrElseBuilder.YieldFrom: '?66680 -> '?66680"
- uid: B2R2.Monads.OrElse.OrElseBuilder.YieldFrom*
  name: YieldFrom
  href: api/B2R2.Monads.OrElse.OrElseBuilder.html#B2R2_Monads_OrElse_OrElseBuilder_YieldFrom_
  commentId: Overload:B2R2.Monads.OrElse.OrElseBuilder.YieldFrom*
  isSpec: "True"
  fullName: B2R2.Monads.OrElse.OrElseBuilder.YieldFrom
  nameWithType: OrElseBuilder.YieldFrom
- uid: B2R2.NonEmptyRegisterSet
  name: NonEmptyRegisterSet
  href: api/B2R2.NonEmptyRegisterSet.html
  commentId: T:B2R2.NonEmptyRegisterSet
  fullName: B2R2.NonEmptyRegisterSet
  nameWithType: B2R2.NonEmptyRegisterSet
- uid: B2R2.NonEmptyRegisterSet.#ctor(uint64 [] * Set<B2R2.RegisterID>)
  name: 'new: uint64 [] * Set<RegisterID> -> NonEmptyRegisterSet'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet__ctor_uint64______Set_B2R2_RegisterID__
  commentId: M:B2R2.NonEmptyRegisterSet.#ctor(System.UInt64[],Microsoft.FSharp.Collections.FSharpSet{System.Int32})
  fullName: 'new: uint64 [] * Set<B2R2.RegisterID> -> B2R2.NonEmptyRegisterSet'
  nameWithType: 'new: uint64 [] * Set<RegisterID> -> NonEmptyRegisterSet'
- uid: B2R2.NonEmptyRegisterSet.#ctor*
  name: ( .ctor )
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet__ctor_
  commentId: Overload:B2R2.NonEmptyRegisterSet.#ctor*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet
  nameWithType: NonEmptyRegisterSet.( .ctor )
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Add(B2R2.RegisterID)
  name: 'override member Add: RegisterID -> RegisterSet'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Add_B2R2_RegisterID_
  commentId: M:B2R2.NonEmptyRegisterSet.Add(System.Int32)
  fullName: 'override member B2R2.NonEmptyRegisterSet.Add: B2R2.RegisterID -> B2R2.RegisterSet'
  nameWithType: 'override member NonEmptyRegisterSet.Add: RegisterID -> RegisterSet'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Add*
  name: Add
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Add_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Add*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.Add
  nameWithType: NonEmptyRegisterSet.Add
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.BitArray(unit)
  name: 'override property BitArray: uint64 []'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_BitArray_unit_
  commentId: P:B2R2.NonEmptyRegisterSet.BitArray
  fullName: 'override property B2R2.NonEmptyRegisterSet.BitArray: uint64 []'
  nameWithType: 'override property NonEmptyRegisterSet.BitArray: uint64 []'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.BitArray*
  name: BitArray
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_BitArray_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.BitArray*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.BitArray
  nameWithType: NonEmptyRegisterSet.BitArray
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Exists(B2R2.RegisterID)
  name: 'override member Exists: RegisterID -> bool'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Exists_B2R2_RegisterID_
  commentId: M:B2R2.NonEmptyRegisterSet.Exists(System.Int32)
  fullName: 'override member B2R2.NonEmptyRegisterSet.Exists: B2R2.RegisterID -> bool'
  nameWithType: 'override member NonEmptyRegisterSet.Exists: RegisterID -> bool'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Exists*
  name: Exists
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Exists_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Exists*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.Exists
  nameWithType: NonEmptyRegisterSet.Exists
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Intersect(B2R2.RegisterSet)
  name: 'override member Intersect: RegisterSet -> RegisterSet'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Intersect_B2R2_RegisterSet_
  commentId: M:B2R2.NonEmptyRegisterSet.Intersect(B2R2.RegisterSet)
  fullName: 'override member B2R2.NonEmptyRegisterSet.Intersect: B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'override member NonEmptyRegisterSet.Intersect: RegisterSet -> RegisterSet'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Intersect*
  name: Intersect
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Intersect_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Intersect*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.Intersect
  nameWithType: NonEmptyRegisterSet.Intersect
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.IsEmpty(unit)
  name: 'override member IsEmpty: unit -> bool'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_IsEmpty_unit_
  commentId: M:B2R2.NonEmptyRegisterSet.IsEmpty
  fullName: 'override member B2R2.NonEmptyRegisterSet.IsEmpty: unit -> bool'
  nameWithType: 'override member NonEmptyRegisterSet.IsEmpty: unit -> bool'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.IsEmpty*
  name: IsEmpty
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_IsEmpty_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.IsEmpty*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.IsEmpty
  nameWithType: NonEmptyRegisterSet.IsEmpty
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Remove(B2R2.RegisterID)
  name: 'override member Remove: RegisterID -> RegisterSet'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Remove_B2R2_RegisterID_
  commentId: M:B2R2.NonEmptyRegisterSet.Remove(System.Int32)
  fullName: 'override member B2R2.NonEmptyRegisterSet.Remove: B2R2.RegisterID -> B2R2.RegisterSet'
  nameWithType: 'override member NonEmptyRegisterSet.Remove: RegisterID -> RegisterSet'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Remove*
  name: Remove
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Remove_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Remove*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.Remove
  nameWithType: NonEmptyRegisterSet.Remove
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.S(unit)
  name: 'override property S: Set<RegisterID>'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_S_unit_
  commentId: P:B2R2.NonEmptyRegisterSet.S
  fullName: 'override property B2R2.NonEmptyRegisterSet.S: Set<B2R2.RegisterID>'
  nameWithType: 'override property NonEmptyRegisterSet.S: Set<RegisterID>'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.S*
  name: S
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_S_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.S*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.S
  nameWithType: NonEmptyRegisterSet.S
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Union(B2R2.RegisterSet)
  name: 'override member Union: RegisterSet -> RegisterSet'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Union_B2R2_RegisterSet_
  commentId: M:B2R2.NonEmptyRegisterSet.Union(B2R2.RegisterSet)
  fullName: 'override member B2R2.NonEmptyRegisterSet.Union: B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'override member NonEmptyRegisterSet.Union: RegisterSet -> RegisterSet'
- uid: B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Union*
  name: Union
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_B2R2_RegisterSet_Union_
  commentId: Overload:B2R2.NonEmptyRegisterSet.B2R2.RegisterSet.Union*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.Union
  nameWithType: NonEmptyRegisterSet.Union
- uid: B2R2.NonEmptyRegisterSet.CheckTag(B2R2.RegisterSet)
  name: 'member CheckTag: RegisterSet -> unit'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_CheckTag_B2R2_RegisterSet_
  commentId: M:B2R2.NonEmptyRegisterSet.CheckTag(B2R2.RegisterSet)
  fullName: 'member B2R2.NonEmptyRegisterSet.CheckTag: B2R2.RegisterSet -> unit'
  nameWithType: 'member NonEmptyRegisterSet.CheckTag: RegisterSet -> unit'
- uid: B2R2.NonEmptyRegisterSet.CheckTag*
  name: CheckTag
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_CheckTag_
  commentId: Overload:B2R2.NonEmptyRegisterSet.CheckTag*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.CheckTag
  nameWithType: NonEmptyRegisterSet.CheckTag
- uid: B2R2.NonEmptyRegisterSet.GetBI(int * int byref)
  name: 'static member GetBI: int * int byref -> int'
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_GetBI_int___int_byref_
  commentId: M:B2R2.NonEmptyRegisterSet.GetBI(System.Int32,System.Int32@)
  fullName: 'static member B2R2.NonEmptyRegisterSet.GetBI: int * int byref -> int'
  nameWithType: 'static member NonEmptyRegisterSet.GetBI: int * int byref -> int'
- uid: B2R2.NonEmptyRegisterSet.GetBI*
  name: GetBI
  href: api/B2R2.NonEmptyRegisterSet.html#B2R2_NonEmptyRegisterSet_GetBI_
  commentId: Overload:B2R2.NonEmptyRegisterSet.GetBI*
  isSpec: "True"
  fullName: B2R2.NonEmptyRegisterSet.GetBI
  nameWithType: NonEmptyRegisterSet.GetBI
- uid: B2R2.Option
  name: Option (mod)
  href: api/B2R2.Option.html
  commentId: T:B2R2.Option
  fullName: B2R2.Option
  nameWithType: B2R2.Option
- uid: B2R2.Option.getWithExn('a option -> System.Exception)
  name: "val getWithExn: 'a option -> Exception -> 'a"
  href: api/B2R2.Option.html#B2R2_Option_getWithExn__a_option____System_Exception_
  commentId: M:B2R2.getWithExn``1(Microsoft.FSharp.Core.FSharpOption{``0},System.Exception)
  fullName: "val B2R2.Option.getWithExn: 'a option -> System.Exception -> 'a"
  nameWithType: "val Option.getWithExn: 'a option -> Exception -> 'a"
- uid: B2R2.Option.getWithExn*
  name: getWithExn
  href: api/B2R2.Option.html#B2R2_Option_getWithExn_
  commentId: Overload:B2R2.Option.getWithExn*
  isSpec: "True"
  fullName: B2R2.Option.getWithExn
  nameWithType: Option.getWithExn
- uid: B2R2.OS
  name: OS
  href: api/B2R2.OS.html
  commentId: T:B2R2.OS
  fullName: B2R2.OS
  nameWithType: B2R2.OS
- uid: B2R2.OS.Linux
  name: 'val Linux: OS'
  href: api/B2R2.OS.html#B2R2_OS_Linux
  commentId: P:B2R2.OS.Linux
  fullName: 'val B2R2.OS.Linux: B2R2.OS'
  nameWithType: 'val OS.Linux: OS'
- uid: B2R2.OS.MacOSX
  name: 'val MacOSX: OS'
  href: api/B2R2.OS.html#B2R2_OS_MacOSX
  commentId: P:B2R2.OS.MacOSX
  fullName: 'val B2R2.OS.MacOSX: B2R2.OS'
  nameWithType: 'val OS.MacOSX: OS'
- uid: B2R2.OS.Windows
  name: 'val Windows: OS'
  href: api/B2R2.OS.html#B2R2_OS_Windows
  commentId: P:B2R2.OS.Windows
  fullName: 'val B2R2.OS.Windows: B2R2.OS'
  nameWithType: 'val OS.Windows: OS'
- uid: B2R2.OSModule
  name: OS (mod)
  href: api/B2R2.OSModule.html
  commentId: T:B2R2.OSModule
  fullName: B2R2.OSModule
  nameWithType: B2R2.OSModule
- uid: B2R2.OSModule.isRunnable(string)
  name: 'val isRunnable: string -> bool'
  href: api/B2R2.OSModule.html#B2R2_OSModule_isRunnable_string_
  commentId: M:B2R2.isRunnable(System.String)
  fullName: 'val B2R2.OSModule.isRunnable: string -> bool'
  nameWithType: 'val OS.isRunnable: string -> bool'
- uid: B2R2.OSModule.isRunnable*
  name: isRunnable
  href: api/B2R2.OSModule.html#B2R2_OSModule_isRunnable_
  commentId: Overload:B2R2.OSModule.isRunnable*
  isSpec: "True"
  fullName: B2R2.OSModule.isRunnable
  nameWithType: OS.isRunnable
- uid: B2R2.OSModule.onWindows()
  name: val onWindows
  href: api/B2R2.OSModule.html#B2R2_OSModule_onWindows__
  commentId: P:B2R2.onWindows
  fullName: 'val B2R2.OSModule.onWindows: bool'
  nameWithType: 'val OS.onWindows: bool'
- uid: B2R2.OSModule.osType()
  name: val osType
  href: api/B2R2.OSModule.html#B2R2_OSModule_osType__
  commentId: P:B2R2.osType
  fullName: 'val B2R2.OSModule.osType: B2R2.OS'
  nameWithType: 'val OS.osType: OS'
- uid: B2R2.RandomAccessQueue
  name: RandomAccessQueue (mod)
  href: api/B2R2.RandomAccessQueue.html
  commentId: T:B2R2.RandomAccessQueue
  fullName: B2R2.RandomAccessQueue
  nameWithType: B2R2.RandomAccessQueue
- uid: B2R2.RandomAccessQueue.concat(B2R2.RandomAccessQueue<'?84112> -> B2R2.RandomAccessQueue<'?84112>)
  name: "val concat: RandomAccessQueue<'?84112> -> RandomAccessQueue<'?84112> -> RandomAccessQueue<'?84112>"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_concat_B2R2_RandomAccessQueue___84112_____B2R2_RandomAccessQueue___84112__
  commentId: M:B2R2.concat``1(B2R2.RandomAccessQueue{``0},B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.concat: B2R2.RandomAccessQueue<'?84112> -> B2R2.RandomAccessQueue<'?84112> -> B2R2.RandomAccessQueue<'?84112>"
  nameWithType: "val RandomAccessQueue.concat: RandomAccessQueue<'?84112> -> RandomAccessQueue<'?84112> -> RandomAccessQueue<'?84112>"
- uid: B2R2.RandomAccessQueue.concat*
  name: concat
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_concat_
  commentId: Overload:B2R2.RandomAccessQueue.concat*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.concat
  nameWithType: RandomAccessQueue.concat
- uid: B2R2.RandomAccessQueue.dequeue(B2R2.RandomAccessQueue<'?84104>)
  name: "val dequeue: RandomAccessQueue<'?84104> -> '?84104 * RandomAccessQueue<'?84104>"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_dequeue_B2R2_RandomAccessQueue___84104__
  commentId: M:B2R2.dequeue``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.dequeue: B2R2.RandomAccessQueue<'?84104> -> '?84104 * B2R2.RandomAccessQueue<'?84104>"
  nameWithType: "val RandomAccessQueue.dequeue: RandomAccessQueue<'?84104> -> '?84104 * RandomAccessQueue<'?84104>"
- uid: B2R2.RandomAccessQueue.dequeue*
  name: dequeue
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_dequeue_
  commentId: Overload:B2R2.RandomAccessQueue.dequeue*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.dequeue
  nameWithType: RandomAccessQueue.dequeue
- uid: B2R2.RandomAccessQueue.empty()
  name: val empty
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_empty__
  commentId: M:B2R2.empty``1
  fullName: "val B2R2.RandomAccessQueue.empty: B2R2.RandomAccessQueue<'a>"
  nameWithType: "val RandomAccessQueue.empty: RandomAccessQueue<'a>"
- uid: B2R2.RandomAccessQueue.enqueue('?84103 -> B2R2.RandomAccessQueue<'?84103>)
  name: "val enqueue: '?84103 -> RandomAccessQueue<'?84103> -> RandomAccessQueue<'?84103>"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_enqueue___84103____B2R2_RandomAccessQueue___84103__
  commentId: M:B2R2.enqueue``1(``0,B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.enqueue: '?84103 -> B2R2.RandomAccessQueue<'?84103> -> B2R2.RandomAccessQueue<'?84103>"
  nameWithType: "val RandomAccessQueue.enqueue: '?84103 -> RandomAccessQueue<'?84103> -> RandomAccessQueue<'?84103>"
- uid: B2R2.RandomAccessQueue.enqueue*
  name: enqueue
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_enqueue_
  commentId: Overload:B2R2.RandomAccessQueue.enqueue*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.enqueue
  nameWithType: RandomAccessQueue.enqueue
- uid: B2R2.RandomAccessQueue.find('a -> bool -> B2R2.RandomAccessQueue<'a>)
  name: "val find: 'a -> bool -> RandomAccessQueue<'a> -> int option"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_find__a____bool____B2R2_RandomAccessQueue__a__
  commentId: M:B2R2.find``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.find: 'a -> bool -> B2R2.RandomAccessQueue<'a> -> int option"
  nameWithType: "val RandomAccessQueue.find: 'a -> bool -> RandomAccessQueue<'a> -> int option"
- uid: B2R2.RandomAccessQueue.find*
  name: find
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_find_
  commentId: Overload:B2R2.RandomAccessQueue.find*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.find
  nameWithType: RandomAccessQueue.find
- uid: B2R2.RandomAccessQueue.findBack('a -> bool -> B2R2.RandomAccessQueue<'a>)
  name: "val findBack: 'a -> bool -> RandomAccessQueue<'a> -> int option"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_findBack__a____bool____B2R2_RandomAccessQueue__a__
  commentId: M:B2R2.findBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.findBack: 'a -> bool -> B2R2.RandomAccessQueue<'a> -> int option"
  nameWithType: "val RandomAccessQueue.findBack: 'a -> bool -> RandomAccessQueue<'a> -> int option"
- uid: B2R2.RandomAccessQueue.findBack*
  name: findBack
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_findBack_
  commentId: Overload:B2R2.RandomAccessQueue.findBack*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.findBack
  nameWithType: RandomAccessQueue.findBack
- uid: B2R2.RandomAccessQueue.head(B2R2.RandomAccessQueue<'?84105>)
  name: "val head: RandomAccessQueue<'?84105> -> '?84105"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_head_B2R2_RandomAccessQueue___84105__
  commentId: M:B2R2.head``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.head: B2R2.RandomAccessQueue<'?84105> -> '?84105"
  nameWithType: "val RandomAccessQueue.head: RandomAccessQueue<'?84105> -> '?84105"
- uid: B2R2.RandomAccessQueue.head*
  name: head
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_head_
  commentId: Overload:B2R2.RandomAccessQueue.head*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.head
  nameWithType: RandomAccessQueue.head
- uid: B2R2.RandomAccessQueue.headr(B2R2.RandomAccessQueue<'?84106>)
  name: "val headr: RandomAccessQueue<'?84106> -> '?84106"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_headr_B2R2_RandomAccessQueue___84106__
  commentId: M:B2R2.headr``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.headr: B2R2.RandomAccessQueue<'?84106> -> '?84106"
  nameWithType: "val RandomAccessQueue.headr: RandomAccessQueue<'?84106> -> '?84106"
- uid: B2R2.RandomAccessQueue.headr*
  name: headr
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_headr_
  commentId: Overload:B2R2.RandomAccessQueue.headr*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.headr
  nameWithType: RandomAccessQueue.headr
- uid: B2R2.RandomAccessQueue.insertAt(uint32 -> '?84109 -> B2R2.RandomAccessQueue<'?84109>)
  name: "val insertAt: uint32 -> '?84109 -> RandomAccessQueue<'?84109> -> RandomAccessQueue<'?84109>"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_insertAt_uint32______84109____B2R2_RandomAccessQueue___84109__
  commentId: M:B2R2.insertAt``1(System.UInt32,``0,B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.insertAt: uint32 -> '?84109 -> B2R2.RandomAccessQueue<'?84109> -> B2R2.RandomAccessQueue<'?84109>"
  nameWithType: "val RandomAccessQueue.insertAt: uint32 -> '?84109 -> RandomAccessQueue<'?84109> -> RandomAccessQueue<'?84109>"
- uid: B2R2.RandomAccessQueue.insertAt*
  name: insertAt
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_insertAt_
  commentId: Overload:B2R2.RandomAccessQueue.insertAt*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.insertAt
  nameWithType: RandomAccessQueue.insertAt
- uid: B2R2.RandomAccessQueue.isEmpty(B2R2.RandomAccessQueue<'a>)
  name: "val isEmpty: RandomAccessQueue<'a> -> bool"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_isEmpty_B2R2_RandomAccessQueue__a__
  commentId: M:B2R2.isEmpty``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.isEmpty: B2R2.RandomAccessQueue<'a> -> bool"
  nameWithType: "val RandomAccessQueue.isEmpty: RandomAccessQueue<'a> -> bool"
- uid: B2R2.RandomAccessQueue.isEmpty*
  name: isEmpty
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_isEmpty_
  commentId: Overload:B2R2.RandomAccessQueue.isEmpty*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.isEmpty
  nameWithType: RandomAccessQueue.isEmpty
- uid: B2R2.RandomAccessQueue.length(B2R2.RandomAccessQueue<'?84099>)
  name: "val length: RandomAccessQueue<'?84099> -> int"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_length_B2R2_RandomAccessQueue___84099__
  commentId: M:B2R2.length``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.length: B2R2.RandomAccessQueue<'?84099> -> int"
  nameWithType: "val RandomAccessQueue.length: RandomAccessQueue<'?84099> -> int"
- uid: B2R2.RandomAccessQueue.length*
  name: length
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_length_
  commentId: Overload:B2R2.RandomAccessQueue.length*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.length
  nameWithType: RandomAccessQueue.length
- uid: B2R2.RandomAccessQueue.splitAt(uint32 -> B2R2.RandomAccessQueue<'?84100>)
  name: "val splitAt: uint32 -> RandomAccessQueue<'?84100> -> RandomAccessQueue<'?84100> * RandomAccessQueue<'?84100>"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_splitAt_uint32____B2R2_RandomAccessQueue___84100__
  commentId: M:B2R2.splitAt``1(System.UInt32,B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.splitAt: uint32 -> B2R2.RandomAccessQueue<'?84100> -> B2R2.RandomAccessQueue<'?84100> * B2R2.RandomAccessQueue<'?84100>"
  nameWithType: "val RandomAccessQueue.splitAt: uint32 -> RandomAccessQueue<'?84100> -> RandomAccessQueue<'?84100> * RandomAccessQueue<'?84100>"
- uid: B2R2.RandomAccessQueue.splitAt*
  name: splitAt
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_splitAt_
  commentId: Overload:B2R2.RandomAccessQueue.splitAt*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.splitAt
  nameWithType: RandomAccessQueue.splitAt
- uid: B2R2.RandomAccessQueue.tail(B2R2.RandomAccessQueue<'?84107>)
  name: "val tail: RandomAccessQueue<'?84107> -> RandomAccessQueue<'?84107>"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_tail_B2R2_RandomAccessQueue___84107__
  commentId: M:B2R2.tail``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.tail: B2R2.RandomAccessQueue<'?84107> -> B2R2.RandomAccessQueue<'?84107>"
  nameWithType: "val RandomAccessQueue.tail: RandomAccessQueue<'?84107> -> RandomAccessQueue<'?84107>"
- uid: B2R2.RandomAccessQueue.tail*
  name: tail
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_tail_
  commentId: Overload:B2R2.RandomAccessQueue.tail*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.tail
  nameWithType: RandomAccessQueue.tail
- uid: B2R2.RandomAccessQueue.tailr(B2R2.RandomAccessQueue<'?84108>)
  name: "val tailr: RandomAccessQueue<'?84108> -> RandomAccessQueue<'?84108>"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_tailr_B2R2_RandomAccessQueue___84108__
  commentId: M:B2R2.tailr``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.tailr: B2R2.RandomAccessQueue<'?84108> -> B2R2.RandomAccessQueue<'?84108>"
  nameWithType: "val RandomAccessQueue.tailr: RandomAccessQueue<'?84108> -> RandomAccessQueue<'?84108>"
- uid: B2R2.RandomAccessQueue.tailr*
  name: tailr
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_tailr_
  commentId: Overload:B2R2.RandomAccessQueue.tailr*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.tailr
  nameWithType: RandomAccessQueue.tailr
- uid: B2R2.RandomAccessQueue.toList(B2R2.RandomAccessQueue<'a>)
  name: "val toList: RandomAccessQueue<'a> -> 'a list"
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_toList_B2R2_RandomAccessQueue__a__
  commentId: M:B2R2.toList``1(B2R2.RandomAccessQueue{``0})
  fullName: "val B2R2.RandomAccessQueue.toList: B2R2.RandomAccessQueue<'a> -> 'a list"
  nameWithType: "val RandomAccessQueue.toList: RandomAccessQueue<'a> -> 'a list"
- uid: B2R2.RandomAccessQueue.toList*
  name: toList
  href: api/B2R2.RandomAccessQueue.html#B2R2_RandomAccessQueue_toList_
  commentId: Overload:B2R2.RandomAccessQueue.toList*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueue.toList
  nameWithType: RandomAccessQueue.toList
- uid: B2R2.RandomAccessQueue`1
  name: RandomAccessQueue<'a> (union)
  href: api/B2R2.RandomAccessQueue-1.html
  commentId: T:B2R2.RandomAccessQueue`1
  fullName: B2R2.RandomAccessQueue`1
  nameWithType: B2R2.RandomAccessQueue`1
- uid: B2R2.RandomAccessQueueElem`1
  name: RandomAccessQueueElem<'a>
  href: api/B2R2.RandomAccessQueueElem-1.html
  commentId: T:B2R2.RandomAccessQueueElem`1
  fullName: B2R2.RandomAccessQueueElem`1
  nameWithType: B2R2.RandomAccessQueueElem`1
- uid: B2R2.RandomAccessQueueElem`1.#ctor('a)
  name: "new: 'a -> RandomAccessQueueElem<'a>"
  href: api/B2R2.RandomAccessQueueElem-1.html#B2R2_RandomAccessQueueElem_1__ctor__a_
  commentId: M:B2R2.RandomAccessQueueElem`1.#ctor(`0)
  fullName: "new: 'a -> B2R2.RandomAccessQueueElem<'a>"
  nameWithType: "new: 'a -> RandomAccessQueueElem<'a>"
- uid: B2R2.RandomAccessQueueElem`1.#ctor*
  name: ( .ctor )
  href: api/B2R2.RandomAccessQueueElem-1.html#B2R2_RandomAccessQueueElem_1__ctor_
  commentId: Overload:B2R2.RandomAccessQueueElem`1.#ctor*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueueElem
  nameWithType: RandomAccessQueueElem.( .ctor )
- uid: B2R2.RandomAccessQueueElem`1.System.Object.ToString(unit)
  name: 'override member ToString: unit -> string'
  href: api/B2R2.RandomAccessQueueElem-1.html#B2R2_RandomAccessQueueElem_1_System_Object_ToString_unit_
  commentId: M:B2R2.RandomAccessQueueElem`1.ToString
  fullName: 'override member B2R2.RandomAccessQueueElem.ToString: unit -> string'
  nameWithType: 'override member RandomAccessQueueElem.ToString: unit -> string'
- uid: B2R2.RandomAccessQueueElem`1.System.Object.ToString*
  name: ToString
  href: api/B2R2.RandomAccessQueueElem-1.html#B2R2_RandomAccessQueueElem_1_System_Object_ToString_
  commentId: Overload:B2R2.RandomAccessQueueElem`1.System.Object.ToString*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueueElem.ToString
  nameWithType: RandomAccessQueueElem.ToString
- uid: B2R2.RandomAccessQueueElem`1.Val(unit)
  name: "property Val: 'a"
  href: api/B2R2.RandomAccessQueueElem-1.html#B2R2_RandomAccessQueueElem_1_Val_unit_
  commentId: P:B2R2.RandomAccessQueueElem`1.Val
  fullName: "property B2R2.RandomAccessQueueElem.Val: 'a"
  nameWithType: "property RandomAccessQueueElem.Val: 'a"
- uid: B2R2.RandomAccessQueueElem`1.Val*
  name: Val
  href: api/B2R2.RandomAccessQueueElem-1.html#B2R2_RandomAccessQueueElem_1_Val_
  commentId: Overload:B2R2.RandomAccessQueueElem`1.Val*
  isSpec: "True"
  fullName: B2R2.RandomAccessQueueElem.Val
  nameWithType: RandomAccessQueueElem.Val
- uid: B2R2.RangeOverlapException
  name: RangeOverlapException
  href: api/B2R2.RangeOverlapException.html
  commentId: T:B2R2.RangeOverlapException
  fullName: B2R2.RangeOverlapException
  nameWithType: B2R2.RangeOverlapException
- uid: B2R2.RegisterID
  name: RegisterID (abrv)
  href: api/B2R2.RegisterID.html
  commentId: T:B2R2.RegisterID
  fullName: B2R2.RegisterID
  nameWithType: B2R2.RegisterID
- uid: B2R2.RegisterIDModule
  name: RegisterID (mod)
  href: api/B2R2.RegisterIDModule.html
  commentId: T:B2R2.RegisterIDModule
  fullName: B2R2.RegisterIDModule
  nameWithType: B2R2.RegisterIDModule
- uid: B2R2.RegisterIDModule.create(int)
  name: 'val create: int -> int<T>'
  href: api/B2R2.RegisterIDModule.html#B2R2_RegisterIDModule_create_int_
  commentId: M:B2R2.create(System.Int32)
  fullName: 'val B2R2.RegisterIDModule.create: int -> int<B2R2.RegisterIDModule.T>'
  nameWithType: 'val RegisterID.create: int -> int<T>'
- uid: B2R2.RegisterIDModule.create*
  name: create
  href: api/B2R2.RegisterIDModule.html#B2R2_RegisterIDModule_create_
  commentId: Overload:B2R2.RegisterIDModule.create*
  isSpec: "True"
  fullName: B2R2.RegisterIDModule.create
  nameWithType: RegisterID.create
- uid: B2R2.RegisterSet
  name: RegisterSet
  href: api/B2R2.RegisterSet.html
  commentId: T:B2R2.RegisterSet
  fullName: B2R2.RegisterSet
  nameWithType: B2R2.RegisterSet
- uid: B2R2.RegisterSet.#ctor(unit)
  name: 'new: unit -> RegisterSet'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet__ctor_unit_
  commentId: M:B2R2.RegisterSet.#ctor
  fullName: 'new: unit -> B2R2.RegisterSet'
  nameWithType: 'new: unit -> RegisterSet'
- uid: B2R2.RegisterSet.#ctor*
  name: ( .ctor )
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet__ctor_
  commentId: Overload:B2R2.RegisterSet.#ctor*
  isSpec: "True"
  fullName: B2R2.RegisterSet
  nameWithType: RegisterSet.( .ctor )
- uid: B2R2.RegisterSet.Add(B2R2.RegisterID)
  name: 'abstract member Add: RegisterID -> RegisterSet'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Add_B2R2_RegisterID_
  commentId: M:B2R2.RegisterSet.Add(System.Int32)
  fullName: 'abstract member B2R2.RegisterSet.Add: B2R2.RegisterID -> B2R2.RegisterSet'
  nameWithType: 'abstract member RegisterSet.Add: RegisterID -> RegisterSet'
- uid: B2R2.RegisterSet.Add*
  name: Add
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Add_
  commentId: Overload:B2R2.RegisterSet.Add*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Add
  nameWithType: RegisterSet.Add
- uid: B2R2.RegisterSet.ArrSize(unit)
  name: 'abstract property ArrSize: int'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_ArrSize_unit_
  commentId: P:B2R2.RegisterSet.ArrSize
  fullName: 'abstract property B2R2.RegisterSet.ArrSize: int'
  nameWithType: 'abstract property RegisterSet.ArrSize: int'
- uid: B2R2.RegisterSet.ArrSize*
  name: ArrSize
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_ArrSize_
  commentId: Overload:B2R2.RegisterSet.ArrSize*
  isSpec: "True"
  fullName: B2R2.RegisterSet.ArrSize
  nameWithType: RegisterSet.ArrSize
- uid: B2R2.RegisterSet.BitArray(unit)
  name: 'abstract property BitArray: uint64 []'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_BitArray_unit_
  commentId: P:B2R2.RegisterSet.BitArray
  fullName: 'abstract property B2R2.RegisterSet.BitArray: uint64 []'
  nameWithType: 'abstract property RegisterSet.BitArray: uint64 []'
- uid: B2R2.RegisterSet.BitArray*
  name: BitArray
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_BitArray_
  commentId: Overload:B2R2.RegisterSet.BitArray*
  isSpec: "True"
  fullName: B2R2.RegisterSet.BitArray
  nameWithType: RegisterSet.BitArray
- uid: B2R2.RegisterSet.Empty(unit)
  name: 'abstract property Empty: RegisterSet'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Empty_unit_
  commentId: P:B2R2.RegisterSet.Empty
  fullName: 'abstract property B2R2.RegisterSet.Empty: B2R2.RegisterSet'
  nameWithType: 'abstract property RegisterSet.Empty: RegisterSet'
- uid: B2R2.RegisterSet.Empty*
  name: Empty
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Empty_
  commentId: Overload:B2R2.RegisterSet.Empty*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Empty
  nameWithType: RegisterSet.Empty
- uid: B2R2.RegisterSet.EmptyArr(unit)
  name: 'abstract property EmptyArr: uint64 []'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_EmptyArr_unit_
  commentId: P:B2R2.RegisterSet.EmptyArr
  fullName: 'abstract property B2R2.RegisterSet.EmptyArr: uint64 []'
  nameWithType: 'abstract property RegisterSet.EmptyArr: uint64 []'
- uid: B2R2.RegisterSet.EmptyArr*
  name: EmptyArr
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_EmptyArr_
  commentId: Overload:B2R2.RegisterSet.EmptyArr*
  isSpec: "True"
  fullName: B2R2.RegisterSet.EmptyArr
  nameWithType: RegisterSet.EmptyArr
- uid: B2R2.RegisterSet.Exists(B2R2.RegisterID)
  name: 'abstract member Exists: RegisterID -> bool'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Exists_B2R2_RegisterID_
  commentId: M:B2R2.RegisterSet.Exists(System.Int32)
  fullName: 'abstract member B2R2.RegisterSet.Exists: B2R2.RegisterID -> bool'
  nameWithType: 'abstract member RegisterSet.Exists: RegisterID -> bool'
- uid: B2R2.RegisterSet.Exists*
  name: Exists
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Exists_
  commentId: Overload:B2R2.RegisterSet.Exists*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Exists
  nameWithType: RegisterSet.Exists
- uid: B2R2.RegisterSet.Intersect(B2R2.RegisterSet)
  name: 'abstract member Intersect: RegisterSet -> RegisterSet'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Intersect_B2R2_RegisterSet_
  commentId: M:B2R2.RegisterSet.Intersect(B2R2.RegisterSet)
  fullName: 'abstract member B2R2.RegisterSet.Intersect: B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'abstract member RegisterSet.Intersect: RegisterSet -> RegisterSet'
- uid: B2R2.RegisterSet.Intersect*
  name: Intersect
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Intersect_
  commentId: Overload:B2R2.RegisterSet.Intersect*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Intersect
  nameWithType: RegisterSet.Intersect
- uid: B2R2.RegisterSet.IsEmpty(unit)
  name: 'abstract member IsEmpty: unit -> bool'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_IsEmpty_unit_
  commentId: M:B2R2.RegisterSet.IsEmpty
  fullName: 'abstract member B2R2.RegisterSet.IsEmpty: unit -> bool'
  nameWithType: 'abstract member RegisterSet.IsEmpty: unit -> bool'
- uid: B2R2.RegisterSet.IsEmpty*
  name: IsEmpty
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_IsEmpty_
  commentId: Overload:B2R2.RegisterSet.IsEmpty*
  isSpec: "True"
  fullName: B2R2.RegisterSet.IsEmpty
  nameWithType: RegisterSet.IsEmpty
- uid: B2R2.RegisterSet.New(uint64 [] -> Set<B2R2.RegisterID>)
  name: 'abstract member New: uint64 [] -> Set<RegisterID> -> RegisterSet'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_New_uint64_______Set_B2R2_RegisterID__
  commentId: M:B2R2.RegisterSet.New(System.UInt64[],Microsoft.FSharp.Collections.FSharpSet{System.Int32})
  fullName: 'abstract member B2R2.RegisterSet.New: uint64 [] -> Set<B2R2.RegisterID> -> B2R2.RegisterSet'
  nameWithType: 'abstract member RegisterSet.New: uint64 [] -> Set<RegisterID> -> RegisterSet'
- uid: B2R2.RegisterSet.New*
  name: New
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_New_
  commentId: Overload:B2R2.RegisterSet.New*
  isSpec: "True"
  fullName: B2R2.RegisterSet.New
  nameWithType: RegisterSet.New
- uid: B2R2.RegisterSet.Project(B2R2.RegisterID)
  name: 'abstract member Project: RegisterID -> int'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Project_B2R2_RegisterID_
  commentId: M:B2R2.RegisterSet.Project(System.Int32)
  fullName: 'abstract member B2R2.RegisterSet.Project: B2R2.RegisterID -> int'
  nameWithType: 'abstract member RegisterSet.Project: RegisterID -> int'
- uid: B2R2.RegisterSet.Project*
  name: Project
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Project_
  commentId: Overload:B2R2.RegisterSet.Project*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Project
  nameWithType: RegisterSet.Project
- uid: B2R2.RegisterSet.Remove(B2R2.RegisterID)
  name: 'abstract member Remove: RegisterID -> RegisterSet'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Remove_B2R2_RegisterID_
  commentId: M:B2R2.RegisterSet.Remove(System.Int32)
  fullName: 'abstract member B2R2.RegisterSet.Remove: B2R2.RegisterID -> B2R2.RegisterSet'
  nameWithType: 'abstract member RegisterSet.Remove: RegisterID -> RegisterSet'
- uid: B2R2.RegisterSet.Remove*
  name: Remove
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Remove_
  commentId: Overload:B2R2.RegisterSet.Remove*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Remove
  nameWithType: RegisterSet.Remove
- uid: B2R2.RegisterSet.S(unit)
  name: 'abstract property S: Set<RegisterID>'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_S_unit_
  commentId: P:B2R2.RegisterSet.S
  fullName: 'abstract property B2R2.RegisterSet.S: Set<B2R2.RegisterID>'
  nameWithType: 'abstract property RegisterSet.S: Set<RegisterID>'
- uid: B2R2.RegisterSet.S*
  name: S
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_S_
  commentId: Overload:B2R2.RegisterSet.S*
  isSpec: "True"
  fullName: B2R2.RegisterSet.S
  nameWithType: RegisterSet.S
- uid: B2R2.RegisterSet.Tag(unit)
  name: 'abstract property Tag: RegisterSetTag'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Tag_unit_
  commentId: P:B2R2.RegisterSet.Tag
  fullName: 'abstract property B2R2.RegisterSet.Tag: B2R2.RegisterSetTag'
  nameWithType: 'abstract property RegisterSet.Tag: RegisterSetTag'
- uid: B2R2.RegisterSet.Tag*
  name: Tag
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Tag_
  commentId: Overload:B2R2.RegisterSet.Tag*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Tag
  nameWithType: RegisterSet.Tag
- uid: B2R2.RegisterSet.Union(B2R2.RegisterSet)
  name: 'abstract member Union: RegisterSet -> RegisterSet'
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Union_B2R2_RegisterSet_
  commentId: M:B2R2.RegisterSet.Union(B2R2.RegisterSet)
  fullName: 'abstract member B2R2.RegisterSet.Union: B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'abstract member RegisterSet.Union: RegisterSet -> RegisterSet'
- uid: B2R2.RegisterSet.Union*
  name: Union
  href: api/B2R2.RegisterSet.html#B2R2_RegisterSet_Union_
  commentId: Overload:B2R2.RegisterSet.Union*
  isSpec: "True"
  fullName: B2R2.RegisterSet.Union
  nameWithType: RegisterSet.Union
- uid: B2R2.RegisterSetBuilder
  name: RegisterSetBuilder (mod)
  href: api/B2R2.RegisterSetBuilder.html
  commentId: T:B2R2.RegisterSetBuilder
  fullName: B2R2.RegisterSetBuilder
  nameWithType: B2R2.RegisterSetBuilder
- uid: B2R2.RegisterSetBuilder.singletonBuilder(B2R2.RegisterSet)
  name: 'val singletonBuilder: RegisterSet -> RegisterID -> RegisterSet'
  href: api/B2R2.RegisterSetBuilder.html#B2R2_RegisterSetBuilder_singletonBuilder_B2R2_RegisterSet_
  commentId: M:B2R2.singletonBuilder(B2R2.RegisterSet)
  fullName: 'val B2R2.RegisterSetBuilder.singletonBuilder: B2R2.RegisterSet -> B2R2.RegisterID -> B2R2.RegisterSet'
  nameWithType: 'val RegisterSetBuilder.singletonBuilder: RegisterSet -> RegisterID -> RegisterSet'
- uid: B2R2.RegisterSetBuilder.singletonBuilder*
  name: singletonBuilder
  href: api/B2R2.RegisterSetBuilder.html#B2R2_RegisterSetBuilder_singletonBuilder_
  commentId: Overload:B2R2.RegisterSetBuilder.singletonBuilder*
  isSpec: "True"
  fullName: B2R2.RegisterSetBuilder.singletonBuilder
  nameWithType: RegisterSetBuilder.singletonBuilder
- uid: B2R2.RegisterSetModule
  name: RegisterSet (mod)
  href: api/B2R2.RegisterSetModule.html
  commentId: T:B2R2.RegisterSetModule
  fullName: B2R2.RegisterSetModule
  nameWithType: B2R2.RegisterSetModule
- uid: B2R2.RegisterSetModule.add(B2R2.RegisterID -> B2R2.RegisterSet)
  name: 'val add: RegisterID -> RegisterSet -> RegisterSet'
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_add_B2R2_RegisterID____B2R2_RegisterSet_
  commentId: M:B2R2.add(System.Int32,B2R2.RegisterSet)
  fullName: 'val B2R2.RegisterSetModule.add: B2R2.RegisterID -> B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'val RegisterSet.add: RegisterID -> RegisterSet -> RegisterSet'
- uid: B2R2.RegisterSetModule.add*
  name: add
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_add_
  commentId: Overload:B2R2.RegisterSetModule.add*
  isSpec: "True"
  fullName: B2R2.RegisterSetModule.add
  nameWithType: RegisterSet.add
- uid: B2R2.RegisterSetModule.empty()
  name: val empty
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_empty__
  commentId: P:B2R2.empty
  fullName: 'val B2R2.RegisterSetModule.empty: B2R2.RegisterSet'
  nameWithType: 'val RegisterSet.empty: RegisterSet'
- uid: B2R2.RegisterSetModule.exist(B2R2.RegisterID -> B2R2.RegisterSet)
  name: 'val exist: RegisterID -> RegisterSet -> bool'
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_exist_B2R2_RegisterID____B2R2_RegisterSet_
  commentId: M:B2R2.exist(System.Int32,B2R2.RegisterSet)
  fullName: 'val B2R2.RegisterSetModule.exist: B2R2.RegisterID -> B2R2.RegisterSet -> bool'
  nameWithType: 'val RegisterSet.exist: RegisterID -> RegisterSet -> bool'
- uid: B2R2.RegisterSetModule.exist*
  name: exist
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_exist_
  commentId: Overload:B2R2.RegisterSetModule.exist*
  isSpec: "True"
  fullName: B2R2.RegisterSetModule.exist
  nameWithType: RegisterSet.exist
- uid: B2R2.RegisterSetModule.intersect(B2R2.RegisterSet -> B2R2.RegisterSet)
  name: 'val intersect: RegisterSet -> RegisterSet -> RegisterSet'
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_intersect_B2R2_RegisterSet____B2R2_RegisterSet_
  commentId: M:B2R2.intersect(B2R2.RegisterSet,B2R2.RegisterSet)
  fullName: 'val B2R2.RegisterSetModule.intersect: B2R2.RegisterSet -> B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'val RegisterSet.intersect: RegisterSet -> RegisterSet -> RegisterSet'
- uid: B2R2.RegisterSetModule.intersect*
  name: intersect
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_intersect_
  commentId: Overload:B2R2.RegisterSetModule.intersect*
  isSpec: "True"
  fullName: B2R2.RegisterSetModule.intersect
  nameWithType: RegisterSet.intersect
- uid: B2R2.RegisterSetModule.isEmpty(B2R2.RegisterSet)
  name: 'val isEmpty: RegisterSet -> bool'
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_isEmpty_B2R2_RegisterSet_
  commentId: M:B2R2.isEmpty(B2R2.RegisterSet)
  fullName: 'val B2R2.RegisterSetModule.isEmpty: B2R2.RegisterSet -> bool'
  nameWithType: 'val RegisterSet.isEmpty: RegisterSet -> bool'
- uid: B2R2.RegisterSetModule.isEmpty*
  name: isEmpty
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_isEmpty_
  commentId: Overload:B2R2.RegisterSetModule.isEmpty*
  isSpec: "True"
  fullName: B2R2.RegisterSetModule.isEmpty
  nameWithType: RegisterSet.isEmpty
- uid: B2R2.RegisterSetModule.remove(B2R2.RegisterID -> B2R2.RegisterSet)
  name: 'val remove: RegisterID -> RegisterSet -> RegisterSet'
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_remove_B2R2_RegisterID____B2R2_RegisterSet_
  commentId: M:B2R2.remove(System.Int32,B2R2.RegisterSet)
  fullName: 'val B2R2.RegisterSetModule.remove: B2R2.RegisterID -> B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'val RegisterSet.remove: RegisterID -> RegisterSet -> RegisterSet'
- uid: B2R2.RegisterSetModule.remove*
  name: remove
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_remove_
  commentId: Overload:B2R2.RegisterSetModule.remove*
  isSpec: "True"
  fullName: B2R2.RegisterSetModule.remove
  nameWithType: RegisterSet.remove
- uid: B2R2.RegisterSetModule.union(B2R2.RegisterSet -> B2R2.RegisterSet)
  name: 'val union: RegisterSet -> RegisterSet -> RegisterSet'
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_union_B2R2_RegisterSet____B2R2_RegisterSet_
  commentId: M:B2R2.union(B2R2.RegisterSet,B2R2.RegisterSet)
  fullName: 'val B2R2.RegisterSetModule.union: B2R2.RegisterSet -> B2R2.RegisterSet -> B2R2.RegisterSet'
  nameWithType: 'val RegisterSet.union: RegisterSet -> RegisterSet -> RegisterSet'
- uid: B2R2.RegisterSetModule.union*
  name: union
  href: api/B2R2.RegisterSetModule.html#B2R2_RegisterSetModule_union_
  commentId: Overload:B2R2.RegisterSetModule.union*
  isSpec: "True"
  fullName: B2R2.RegisterSetModule.union
  nameWithType: RegisterSet.union
- uid: B2R2.RegisterSetTag
  name: RegisterSetTag
  href: api/B2R2.RegisterSetTag.html
  commentId: T:B2R2.RegisterSetTag
  fullName: B2R2.RegisterSetTag
  nameWithType: B2R2.RegisterSetTag
- uid: B2R2.RegisterSetTag.ARM32
  name: 'val ARM32: RegisterSetTag'
  href: api/B2R2.RegisterSetTag.html#B2R2_RegisterSetTag_ARM32
  commentId: P:B2R2.RegisterSetTag.ARM32
  fullName: 'val B2R2.RegisterSetTag.ARM32: B2R2.RegisterSetTag'
  nameWithType: 'val RegisterSetTag.ARM32: RegisterSetTag'
- uid: B2R2.RegisterSetTag.ARM64
  name: 'val ARM64: RegisterSetTag'
  href: api/B2R2.RegisterSetTag.html#B2R2_RegisterSetTag_ARM64
  commentId: P:B2R2.RegisterSetTag.ARM64
  fullName: 'val B2R2.RegisterSetTag.ARM64: B2R2.RegisterSetTag'
  nameWithType: 'val RegisterSetTag.ARM64: RegisterSetTag'
- uid: B2R2.RegisterSetTag.Empty
  name: 'val Empty: RegisterSetTag'
  href: api/B2R2.RegisterSetTag.html#B2R2_RegisterSetTag_Empty
  commentId: P:B2R2.RegisterSetTag.Empty
  fullName: 'val B2R2.RegisterSetTag.Empty: B2R2.RegisterSetTag'
  nameWithType: 'val RegisterSetTag.Empty: RegisterSetTag'
- uid: B2R2.RegisterSetTag.Intel
  name: 'val Intel: RegisterSetTag'
  href: api/B2R2.RegisterSetTag.html#B2R2_RegisterSetTag_Intel
  commentId: P:B2R2.RegisterSetTag.Intel
  fullName: 'val B2R2.RegisterSetTag.Intel: B2R2.RegisterSetTag'
  nameWithType: 'val RegisterSetTag.Intel: RegisterSetTag'
- uid: B2R2.RegisterSetTag.MIPS
  name: 'val MIPS: RegisterSetTag'
  href: api/B2R2.RegisterSetTag.html#B2R2_RegisterSetTag_MIPS
  commentId: P:B2R2.RegisterSetTag.MIPS
  fullName: 'val B2R2.RegisterSetTag.MIPS: B2R2.RegisterSetTag'
  nameWithType: 'val RegisterSetTag.MIPS: RegisterSetTag'
- uid: B2R2.RegType
  name: RegType (abrv)
  href: api/B2R2.RegType.html
  commentId: T:B2R2.RegType
  fullName: B2R2.RegType
  nameWithType: B2R2.RegType
- uid: B2R2.RegTypeModule
  name: RegType (mod)
  href: api/B2R2.RegTypeModule.html
  commentId: T:B2R2.RegTypeModule
  fullName: B2R2.RegTypeModule
  nameWithType: B2R2.RegTypeModule
- uid: B2R2.RegTypeModule.double(B2R2.RegType)
  name: 'val double: RegType -> int<MeasureProduct<rt>>'
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_double_B2R2_RegType_
  commentId: M:B2R2.double(System.Int32)
  fullName: 'val B2R2.RegTypeModule.double: B2R2.RegType -> int<MeasureProduct<B2R2.rt>>'
  nameWithType: 'val RegType.double: RegType -> int<MeasureProduct<rt>>'
- uid: B2R2.RegTypeModule.double*
  name: double
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_double_
  commentId: Overload:B2R2.RegTypeModule.double*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.double
  nameWithType: RegType.double
- uid: B2R2.RegTypeModule.fromBitWidth(int)
  name: "val fromBitWidth: int -> int<'?66870>"
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_fromBitWidth_int_
  commentId: M:B2R2.fromBitWidth``1(System.Int32)
  fullName: "val B2R2.RegTypeModule.fromBitWidth: int -> int<'?66870>"
  nameWithType: "val RegType.fromBitWidth: int -> int<'?66870>"
- uid: B2R2.RegTypeModule.fromBitWidth*
  name: fromBitWidth
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_fromBitWidth_
  commentId: Overload:B2R2.RegTypeModule.fromBitWidth*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.fromBitWidth
  nameWithType: RegType.fromBitWidth
- uid: B2R2.RegTypeModule.fromByteWidth(int)
  name: "val fromByteWidth: int -> int<'?66871>"
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_fromByteWidth_int_
  commentId: M:B2R2.fromByteWidth``1(System.Int32)
  fullName: "val B2R2.RegTypeModule.fromByteWidth: int -> int<'?66871>"
  nameWithType: "val RegType.fromByteWidth: int -> int<'?66871>"
- uid: B2R2.RegTypeModule.fromByteWidth*
  name: fromByteWidth
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_fromByteWidth_
  commentId: Overload:B2R2.RegTypeModule.fromByteWidth*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.fromByteWidth
  nameWithType: RegType.fromByteWidth
- uid: B2R2.RegTypeModule.getMask(int<B2R2.rt>)
  name: 'val getMask: int<rt> -> BigInteger'
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_getMask_int_B2R2_rt__
  commentId: M:B2R2.getMask(System.Int32)
  fullName: 'val B2R2.RegTypeModule.getMask: int<B2R2.rt> -> System.Numerics.BigInteger'
  nameWithType: 'val RegType.getMask: int<rt> -> BigInteger'
- uid: B2R2.RegTypeModule.getMask*
  name: getMask
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_getMask_
  commentId: Overload:B2R2.RegTypeModule.getMask*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.getMask
  nameWithType: RegType.getMask
- uid: B2R2.RegTypeModule.isFP(B2R2.RegType)
  name: 'val isFP: RegType -> bool'
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_isFP_B2R2_RegType_
  commentId: M:B2R2.isFP(System.Int32)
  fullName: 'val B2R2.RegTypeModule.isFP: B2R2.RegType -> bool'
  nameWithType: 'val RegType.isFP: RegType -> bool'
- uid: B2R2.RegTypeModule.isFP*
  name: isFP
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_isFP_
  commentId: Overload:B2R2.RegTypeModule.isFP*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.isFP
  nameWithType: RegType.isFP
- uid: B2R2.RegTypeModule.toBitWidth(B2R2.RegType)
  name: 'val toBitWidth: RegType -> int'
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_toBitWidth_B2R2_RegType_
  commentId: M:B2R2.toBitWidth(System.Int32)
  fullName: 'val B2R2.RegTypeModule.toBitWidth: B2R2.RegType -> int'
  nameWithType: 'val RegType.toBitWidth: RegType -> int'
- uid: B2R2.RegTypeModule.toBitWidth*
  name: toBitWidth
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_toBitWidth_
  commentId: Overload:B2R2.RegTypeModule.toBitWidth*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.toBitWidth
  nameWithType: RegType.toBitWidth
- uid: B2R2.RegTypeModule.toByteWidth(B2R2.RegType)
  name: 'val toByteWidth: RegType -> int'
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_toByteWidth_B2R2_RegType_
  commentId: M:B2R2.toByteWidth(System.Int32)
  fullName: 'val B2R2.RegTypeModule.toByteWidth: B2R2.RegType -> int'
  nameWithType: 'val RegType.toByteWidth: RegType -> int'
- uid: B2R2.RegTypeModule.toByteWidth*
  name: toByteWidth
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_toByteWidth_
  commentId: Overload:B2R2.RegTypeModule.toByteWidth*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.toByteWidth
  nameWithType: RegType.toByteWidth
- uid: B2R2.RegTypeModule.toString(B2R2.RegType)
  name: 'val toString: RegType -> string'
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_toString_B2R2_RegType_
  commentId: M:B2R2.toString(System.Int32)
  fullName: 'val B2R2.RegTypeModule.toString: B2R2.RegType -> string'
  nameWithType: 'val RegType.toString: RegType -> string'
- uid: B2R2.RegTypeModule.toString*
  name: toString
  href: api/B2R2.RegTypeModule.html#B2R2_RegTypeModule_toString_
  commentId: Overload:B2R2.RegTypeModule.toString*
  isSpec: "True"
  fullName: B2R2.RegTypeModule.toString
  nameWithType: RegType.toString
- uid: B2R2.rt
  name: rt (meas)
  href: api/B2R2.rt.html
  commentId: T:B2R2.rt
  fullName: B2R2.rt
  nameWithType: B2R2.rt
- uid: B2R2.String
  name: String (mod)
  href: api/B2R2.String.html
  commentId: T:B2R2.String
  fullName: B2R2.String
  nameWithType: B2R2.String
- uid: B2R2.String.explode(string)
  name: 'val explode: string -> char list'
  href: api/B2R2.String.html#B2R2_String_explode_string_
  commentId: M:B2R2.explode(System.String)
  fullName: 'val B2R2.String.explode: string -> char list'
  nameWithType: 'val String.explode: string -> char list'
- uid: B2R2.String.explode*
  name: explode
  href: api/B2R2.String.html#B2R2_String_explode_
  commentId: Overload:B2R2.String.explode*
  isSpec: "True"
  fullName: B2R2.String.explode
  nameWithType: String.explode
- uid: B2R2.String.fold('?66394 -> char -> '?66394 -> '?66394 -> string)
  name: "val fold: '?66394 -> char -> '?66394 -> '?66394 -> string -> '?66394"
  href: api/B2R2.String.html#B2R2_String_fold___66394____char______66394______66394____string_
  commentId: M:B2R2.fold``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Char,``0}},``0,System.String)
  fullName: "val B2R2.String.fold: '?66394 -> char -> '?66394 -> '?66394 -> string -> '?66394"
  nameWithType: "val String.fold: '?66394 -> char -> '?66394 -> '?66394 -> string -> '?66394"
- uid: B2R2.String.fold*
  name: fold
  href: api/B2R2.String.html#B2R2_String_fold_
  commentId: Overload:B2R2.String.fold*
  isSpec: "True"
  fullName: B2R2.String.fold
  nameWithType: String.fold
- uid: B2R2.String.fromBytes(byte [])
  name: 'val fromBytes: byte [] -> String'
  href: api/B2R2.String.html#B2R2_String_fromBytes_byte____
  commentId: M:B2R2.fromBytes(System.Byte[])
  fullName: 'val B2R2.String.fromBytes: byte [] -> System.String'
  nameWithType: 'val String.fromBytes: byte [] -> String'
- uid: B2R2.String.fromBytes*
  name: fromBytes
  href: api/B2R2.String.html#B2R2_String_fromBytes_
  commentId: Overload:B2R2.String.fromBytes*
  isSpec: "True"
  fullName: B2R2.String.fromBytes
  nameWithType: String.fromBytes
- uid: B2R2.String.toBytes(string)
  name: 'val toBytes: string -> byte []'
  href: api/B2R2.String.html#B2R2_String_toBytes_string_
  commentId: M:B2R2.toBytes(System.String)
  fullName: 'val B2R2.String.toBytes: string -> byte []'
  nameWithType: 'val String.toBytes: string -> byte []'
- uid: B2R2.String.toBytes*
  name: toBytes
  href: api/B2R2.String.html#B2R2_String_toBytes_
  commentId: Overload:B2R2.String.toBytes*
  isSpec: "True"
  fullName: B2R2.String.toBytes
  nameWithType: String.toBytes
- uid: B2R2.TagMismatchException
  name: TagMismatchException
  href: api/B2R2.TagMismatchException.html
  commentId: T:B2R2.TagMismatchException
  fullName: B2R2.TagMismatchException
  nameWithType: B2R2.TagMismatchException
- uid: B2R2.UnknownOSException
  name: UnknownOSException
  href: api/B2R2.UnknownOSException.html
  commentId: T:B2R2.UnknownOSException
  fullName: B2R2.UnknownOSException
  nameWithType: B2R2.UnknownOSException
- uid: B2R2.Utils
  name: Utils (mod)
  href: api/B2R2.Utils.html
  commentId: T:B2R2.Utils
  fullName: B2R2.Utils
  nameWithType: B2R2.Utils
- uid: B2R2.Utils.( === )('a -> 'a)
  name: "val ( === ): 'a -> 'a -> bool"
  href: api/B2R2.Utils.html#B2R2_Utils__________a_____a_
  commentId: M:B2R2.op_EqualsEqualsEquals``1(``0,``0)
  fullName: "val B2R2.Utils.( === ): 'a -> 'a -> bool"
  nameWithType: "val Utils.( === ): 'a -> 'a -> bool"
- uid: B2R2.Utils.( === )*
  name: ( === )
  href: api/B2R2.Utils.html#B2R2_Utils_________
  commentId: Overload:B2R2.Utils.( === )*
  isSpec: "True"
  fullName: B2R2.Utils.( === )
  nameWithType: Utils.( === )
- uid: B2R2.Utils.assertByCond(bool -> exn)
  name: 'val assertByCond: bool -> exn -> unit'
  href: api/B2R2.Utils.html#B2R2_Utils_assertByCond_bool____exn_
  commentId: M:B2R2.assertByCond(System.Boolean,System.Exception)
  fullName: 'val B2R2.Utils.assertByCond: bool -> exn -> unit'
  nameWithType: 'val Utils.assertByCond: bool -> exn -> unit'
- uid: B2R2.Utils.assertByCond*
  name: assertByCond
  href: api/B2R2.Utils.html#B2R2_Utils_assertByCond_
  commentId: Overload:B2R2.Utils.assertByCond*
  isSpec: "True"
  fullName: B2R2.Utils.assertByCond
  nameWithType: Utils.assertByCond
- uid: B2R2.Utils.assertEqual('a -> 'a -> exn)
  name: "val assertEqual: 'a -> 'a -> exn -> unit"
  href: api/B2R2.Utils.html#B2R2_Utils_assertEqual__a_____a____exn_
  commentId: M:B2R2.assertEqual``1(``0,``0,System.Exception)
  fullName: "val B2R2.Utils.assertEqual: 'a -> 'a -> exn -> unit"
  nameWithType: "val Utils.assertEqual: 'a -> 'a -> exn -> unit"
- uid: B2R2.Utils.assertEqual*
  name: assertEqual
  href: api/B2R2.Utils.html#B2R2_Utils_assertEqual_
  commentId: Overload:B2R2.Utils.assertEqual*
  isSpec: "True"
  fullName: B2R2.Utils.assertEqual
  nameWithType: Utils.assertEqual
- uid: B2R2.Utils.curry('a * 'b -> 'c -> 'a -> 'b)
  name: "val curry: 'a * 'b -> 'c -> 'a -> 'b -> 'c"
  href: api/B2R2.Utils.html#B2R2_Utils_curry__a____b_____c_____a_____b_
  commentId: M:B2R2.curry``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2},``0,``1)
  fullName: "val B2R2.Utils.curry: 'a * 'b -> 'c -> 'a -> 'b -> 'c"
  nameWithType: "val Utils.curry: 'a * 'b -> 'c -> 'a -> 'b -> 'c"
- uid: B2R2.Utils.curry*
  name: curry
  href: api/B2R2.Utils.html#B2R2_Utils_curry_
  commentId: Overload:B2R2.Utils.curry*
  isSpec: "True"
  fullName: B2R2.Utils.curry
  nameWithType: Utils.curry
- uid: B2R2.Utils.futureFeature(unit)
  name: "val futureFeature: unit -> 'a"
  href: api/B2R2.Utils.html#B2R2_Utils_futureFeature_unit_
  commentId: M:B2R2.futureFeature``1
  fullName: "val B2R2.Utils.futureFeature: unit -> 'a"
  nameWithType: "val Utils.futureFeature: unit -> 'a"
- uid: B2R2.Utils.futureFeature*
  name: futureFeature
  href: api/B2R2.Utils.html#B2R2_Utils_futureFeature_
  commentId: Overload:B2R2.Utils.futureFeature*
  isSpec: "True"
  fullName: B2R2.Utils.futureFeature
  nameWithType: Utils.futureFeature
- uid: B2R2.Utils.tap('a -> unit -> 'a)
  name: "val tap: 'a -> unit -> 'a -> 'a"
  href: api/B2R2.Utils.html#B2R2_Utils_tap__a____unit_____a_
  commentId: M:B2R2.tap``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0)
  fullName: "val B2R2.Utils.tap: 'a -> unit -> 'a -> 'a"
  nameWithType: "val Utils.tap: 'a -> unit -> 'a -> 'a"
- uid: B2R2.Utils.tap*
  name: tap
  href: api/B2R2.Utils.html#B2R2_Utils_tap_
  commentId: Overload:B2R2.Utils.tap*
  isSpec: "True"
  fullName: B2R2.Utils.tap
  nameWithType: Utils.tap
- uid: B2R2.Utils.tupleToOpt(bool * 'a)
  name: "val tupleToOpt: bool * 'a -> 'a option"
  href: api/B2R2.Utils.html#B2R2_Utils_tupleToOpt_bool____a_
  commentId: M:B2R2.tupleToOpt``1(System.Boolean,``0)
  fullName: "val B2R2.Utils.tupleToOpt: bool * 'a -> 'a option"
  nameWithType: "val Utils.tupleToOpt: bool * 'a -> 'a option"
- uid: B2R2.Utils.tupleToOpt*
  name: tupleToOpt
  href: api/B2R2.Utils.html#B2R2_Utils_tupleToOpt_
  commentId: Overload:B2R2.Utils.tupleToOpt*
  isSpec: "True"
  fullName: B2R2.Utils.tupleToOpt
  nameWithType: Utils.tupleToOpt
- uid: B2R2.Utils.uncurry('a -> 'b -> 'c -> 'a * 'b)
  name: "val uncurry: 'a -> 'b -> 'c -> 'a * 'b -> 'c"
  href: api/B2R2.Utils.html#B2R2_Utils_uncurry__a_____b_____c_____a____b_
  commentId: M:B2R2.uncurry``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)
  fullName: "val B2R2.Utils.uncurry: 'a -> 'b -> 'c -> 'a * 'b -> 'c"
  nameWithType: "val Utils.uncurry: 'a -> 'b -> 'c -> 'a * 'b -> 'c"
- uid: B2R2.Utils.uncurry*
  name: uncurry
  href: api/B2R2.Utils.html#B2R2_Utils_uncurry_
  commentId: Overload:B2R2.Utils.uncurry*
  isSpec: "True"
  fullName: B2R2.Utils.uncurry
  nameWithType: Utils.uncurry
- uid: B2R2.Utils.writeB2R2(bool)
  name: 'val writeB2R2: bool -> unit'
  href: api/B2R2.Utils.html#B2R2_Utils_writeB2R2_bool_
  commentId: M:B2R2.writeB2R2(System.Boolean)
  fullName: 'val B2R2.Utils.writeB2R2: bool -> unit'
  nameWithType: 'val Utils.writeB2R2: bool -> unit'
- uid: B2R2.Utils.writeB2R2*
  name: writeB2R2
  href: api/B2R2.Utils.html#B2R2_Utils_writeB2R2_
  commentId: Overload:B2R2.Utils.writeB2R2*
  isSpec: "True"
  fullName: B2R2.Utils.writeB2R2
  nameWithType: Utils.writeB2R2
- uid: B2R2.WordSize
  name: WordSize
  href: api/B2R2.WordSize.html
  commentId: T:B2R2.WordSize
  fullName: B2R2.WordSize
  nameWithType: B2R2.WordSize
- uid: B2R2.WordSize.Bit32
  name: 'val Bit32: WordSize'
  href: api/B2R2.WordSize.html#B2R2_WordSize_Bit32
  commentId: P:B2R2.WordSize.Bit32
  fullName: 'val B2R2.WordSize.Bit32: B2R2.WordSize'
  nameWithType: 'val WordSize.Bit32: WordSize'
- uid: B2R2.WordSize.Bit64
  name: 'val Bit64: WordSize'
  href: api/B2R2.WordSize.html#B2R2_WordSize_Bit64
  commentId: P:B2R2.WordSize.Bit64
  fullName: 'val B2R2.WordSize.Bit64: B2R2.WordSize'
  nameWithType: 'val WordSize.Bit64: WordSize'
- uid: B2R2.WordSizeModule
  name: WordSize (mod)
  href: api/B2R2.WordSizeModule.html
  commentId: T:B2R2.WordSizeModule
  fullName: B2R2.WordSizeModule
  nameWithType: B2R2.WordSizeModule
- uid: B2R2.WordSizeModule.bitTypeOfString(string)
  name: 'val bitTypeOfString: string -> WordSize'
  href: api/B2R2.WordSizeModule.html#B2R2_WordSizeModule_bitTypeOfString_string_
  commentId: M:B2R2.bitTypeOfString(System.String)
  fullName: 'val B2R2.WordSizeModule.bitTypeOfString: string -> B2R2.WordSize'
  nameWithType: 'val WordSize.bitTypeOfString: string -> WordSize'
- uid: B2R2.WordSizeModule.bitTypeOfString*
  name: bitTypeOfString
  href: api/B2R2.WordSizeModule.html#B2R2_WordSizeModule_bitTypeOfString_
  commentId: Overload:B2R2.WordSizeModule.bitTypeOfString*
  isSpec: "True"
  fullName: B2R2.WordSizeModule.bitTypeOfString
  nameWithType: WordSize.bitTypeOfString
- uid: B2R2.WordSizeModule.toByteWidth(B2R2.WordSize)
  name: 'val toByteWidth: WordSize -> int32'
  href: api/B2R2.WordSizeModule.html#B2R2_WordSizeModule_toByteWidth_B2R2_WordSize_
  commentId: M:B2R2.toByteWidth(B2R2.WordSize)
  fullName: 'val B2R2.WordSizeModule.toByteWidth: B2R2.WordSize -> int32'
  nameWithType: 'val WordSize.toByteWidth: WordSize -> int32'
- uid: B2R2.WordSizeModule.toByteWidth*
  name: toByteWidth
  href: api/B2R2.WordSizeModule.html#B2R2_WordSizeModule_toByteWidth_
  commentId: Overload:B2R2.WordSizeModule.toByteWidth*
  isSpec: "True"
  fullName: B2R2.WordSizeModule.toByteWidth
  nameWithType: WordSize.toByteWidth
- uid: B2R2.WordSizeModule.toRegType(B2R2.WordSize)
  name: 'val toRegType: WordSize -> int<rt>'
  href: api/B2R2.WordSizeModule.html#B2R2_WordSizeModule_toRegType_B2R2_WordSize_
  commentId: M:B2R2.toRegType(B2R2.WordSize)
  fullName: 'val B2R2.WordSizeModule.toRegType: B2R2.WordSize -> int<B2R2.rt>'
  nameWithType: 'val WordSize.toRegType: WordSize -> int<rt>'
- uid: B2R2.WordSizeModule.toRegType*
  name: toRegType
  href: api/B2R2.WordSizeModule.html#B2R2_WordSizeModule_toRegType_
  commentId: Overload:B2R2.WordSizeModule.toRegType*
  isSpec: "True"
  fullName: B2R2.WordSizeModule.toRegType
  nameWithType: WordSize.toRegType
